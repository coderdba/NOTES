======================
LANGCHAIN
======================

-------------------------
BEST ONES
-------------------------
Conversational:
- Chat with conversation with memory (Pinecone, very good tutorial): https://www.pinecone.io/learn/series/langchain/langchain-conversational-memory/ --> good explanation with langchain (ConversationChain, ConversationBufferMemory, ConversationSummaryMemory, ConversationBufferWindowMemory)
- Chatbot with tools like calculator, API tool etc: https://cheatsheet.md/langchain-tutorials/langchain-llm.en
- Langchain doc with conversationChain and 'predict': https://python.langchain.com/v0.1/docs/modules/memory/conversational_customization/ 


Azure OpenAI Chat Completion:
- Very good, simple: https://cookbook.openai.com/examples/azure/chat
  - UI for it?: https://github.com/Build5Nines/AIChatUI
- Very good full explanation: https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt

Langchain's own chat app:
1. https://github.com/langchain-ai/chat-langchain
    Deployed version: chat.langchain.com

2. Chat web app: https://blog.langchain.dev/langchain-chat/ --> open source chat bot with UI from Langchain
      Deployed Chatbot: chat.langchain.dev
      Deployed Chatbot on HuggingFace spaces: huggingface.co/spaces/hwchase17/chat-langchain
      Open source repo: github.com/hwchase17/chat-langchain
      Next.js frontend: github.com/zahidkhawaja/langchain-chat-nextjs

-------------------------
ALL
-------------------------
  - Chains (https://python.langchain.com/docs/modules/chains/, https://js.langchain.com/docs/modules/chains)
  - SQL chain (https://python.langchain.com/docs/use_cases/sql/)
  - API chain (https://python.langchain.com/docs/use_cases/apis/, https://js.langchain.com/docs/modules/chains/popular/api)
  - Summarization (https://python.langchain.com/docs/use_cases/summarization/)

  - Azure Open AI
    https://python.langchain.com/docs/integrations/llms/azure_openai/

   - Vectorstore and various ways of asking questions (very good):
     https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed
   - Vectorstore querying with semantic similarity search
     https://medium.com/@alroumi.abdulmajeed/enhancing-semantic-search-with-langchain-vector-databases-and-llama2-70b-chat-94d8dd56a450

Quickstarts
- General: https://python.langchain.com/docs/get_started/quickstart/
- RAG with vectorstore and RunnablePassthrough: https://python.langchain.com/docs/use_cases/question_answering/quickstart/

Chats
- Chat History
  History Chain - https://python.langchain.com/docs/use_cases/question_answering/chat_history/

- Memory in langchain
  - https://python.langchain.com/v0.1/docs/modules/memory/
  - https://python.langchain.com/v0.1/docs/modules/memory/conversational_customization/ --> conversationChain and 'predict'

- Contextualization
  https://python.langchain.com/docs/use_cases/question_answering/streaming/
  https://python.langchain.com/docs/use_cases/question_answering/chat_history/#contextualizing-the-question

- With llama_index
  https://medium.com/@zekaouinoureddine/bring-your-own-data-to-llms-using-langchain-llamaindex-3ddbac8cc9eb (try this for L0)

- Prompt and Context
  https://stackoverflow.com/questions/76947597/how-does-prompttemplate-interact-with-retrievalqa

Tutorials
- Cheatsheet: Many things: https://cheatsheet.md/langchain-tutorials/langchain-prompts.en
- QA with SelfQueryRetriever on own data - various loaders, vectordb queries, and "SelfQueryRetriever"
- QA with ConversationalRetrievalChain - https://scalexi.medium.com/implementing-a-retrieval-augmented-generation-rag-system-with-openais-api-using-langchain-ab39b60b4d9f
  https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed
- ConversationalRetrievalChain - https://www.youtube.com/watch?v=9AXP7tCI9PI (https://github.com/techleadhd/chatgpt-retrieval/blob/main/chatgpt.py)
- Good tutorial with custom text splitter: https://huggingface.co/learn/cookbook/advanced_rag

- Chat bot: Langchain bot with Docker, OpenAI and Streamlit: https://www.docker.com/blog/build-and-deploy-a-langchain-powered-chat-app-with-docker-and-streamlit/
  - https://github.com/amjadraza/langchain-streamlit-docker-template

- Conversational agent: https://medium.com/@AminZamani/how-to-build-a-custom-conversational-agent-with-langchain-fbe6ad99998f

- Chatbot with tools like calculator, API tool etc: https://cheatsheet.md/langchain-tutorials/langchain-llm.en

- Chat web app: https://blog.langchain.dev/langchain-chat/ --> open source chat bot with UI from Langchain
      Deployed Chatbot: chat.langchain.dev
      Deployed Chatbot on HuggingFace spaces: huggingface.co/spaces/hwchase17/chat-langchain
      Open source repo: github.com/hwchase17/chat-langchain
      Next.js frontend: github.com/zahidkhawaja/langchain-chat-nextjs

- Chat conversation with memory: https://medium.com/@michael.j.hamilton/conversational-memory-with-langchain-82c25e23ec60
- Chat with conversation with memory (Pinecone, very good tutorial): https://www.pinecone.io/learn/series/langchain/langchain-conversational-memory/ --> good explanation with langchain (ConversationChain, ConversationBufferMemory, ConversationSummaryMemory, ConversationBufferWindowMemory)

- Conversational search: https://medium.com/@schatterjeecs/building-a-conversational-search-api-with-fastapi-langchain-openai-bf78b5a0f780
  - https://github.com/schatterjeecs/conversational-search-app/blob/main/driver.py

Prompts
- Very good - RAG and chat prompt: https://cheatsheet.md/langchain-tutorials/langchain-prompts.en
- Very good - Using RetrievalQA - https://colab.research.google.com/github/langchain-ai/langsmith-cookbook/blob/master/hub-examples/retrieval-qa-chain/retrieval-qa.ipynb

Azure OpenAI Chat Completions:
- Very good, simple: https://cookbook.openai.com/examples/azure/chat
  - UI for it?: https://github.com/Build5Nines/AIChatUI
- Very good full explanation: https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt

Issue Articles
 - Context, 'helpful answer', prompt template: https://stackoverflow.com/questions/76947597/how-does-prompttemplate-interact-with-retrievalqa
 - Multiple answer issue - fixed using conversational retriever - and LLM chain: https://stackoverflow.com/questions/76229432/azureopenai-and-langchain-weird-multiple-answers
    - Vectorstore retreiver for LLMchain - https://github.com/langchain-ai/langchain/discussions/15883
 - Multiple answer issue - fixed with temperature: https://stackoverflow.com/questions/75718913/openai-gpt-3-api-why-do-i-get-different-non-related-random-responses-to-the-sa#

=====================
Tutorial Bundles
=====================

-----------------
PineCone
-----------------
https://www.pinecone.io/learn/series/langchain/langchain-intro/
- Chat with conversation memory with Langchain: https://www.pinecone.io/learn/series/langchain/langchain-conversational-memory/ --> good explanation with langchain (ConversationChain, ConversationBufferMemory, ConversationSummaryMemory, ConversationBufferWindowMemory)
- Various chain - math, api ... - https://colab.research.google.com/github/pinecone-io/examples/blob/master/learn/generation/langchain/handbook/02-langchain-chains.ipynb

