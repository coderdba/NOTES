======================
LANGCHAIN
======================
  - Chains (https://python.langchain.com/docs/modules/chains/, https://js.langchain.com/docs/modules/chains)
  - SQL chain (https://python.langchain.com/docs/use_cases/sql/)
  - API chain (https://python.langchain.com/docs/use_cases/apis/, https://js.langchain.com/docs/modules/chains/popular/api)
  - Summarization (https://python.langchain.com/docs/use_cases/summarization/)

  - Azure Open AI
    https://python.langchain.com/docs/integrations/llms/azure_openai/

   - Vectorstore and various ways of asking questions (very good):
     https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed
   - Vectorstore querying with semantic similarity search
     https://medium.com/@alroumi.abdulmajeed/enhancing-semantic-search-with-langchain-vector-databases-and-llama2-70b-chat-94d8dd56a450

Chats
- Chat History
  History Chain - https://python.langchain.com/docs/use_cases/question_answering/chat_history/

- Contextualization
  https://python.langchain.com/docs/use_cases/question_answering/streaming/
  https://python.langchain.com/docs/use_cases/question_answering/chat_history/#contextualizing-the-question

- With llama_index
  https://medium.com/@zekaouinoureddine/bring-your-own-data-to-llms-using-langchain-llamaindex-3ddbac8cc9eb (try this for L0)

Tutorials
- QA with SelfQueryRetriever on own data - various loaders, vectordb queries, and "SelfQueryRetriever"
- QA with ConversationalRetrievalChain - https://scalexi.medium.com/implementing-a-retrieval-augmented-generation-rag-system-with-openais-api-using-langchain-ab39b60b4d9f
  https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed

Issue Articles
 - Context, 'helpful answer', prompt template: https://stackoverflow.com/questions/76947597/how-does-prompttemplate-interact-with-retrievalqa
