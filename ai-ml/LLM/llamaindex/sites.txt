basics:
https://docs.llamaindex.ai/en/stable/optimizing/building_rag_from_scratch/
https://docs.llamaindex.ai/en/stable/community/integrations/vector_stores/
https://docs.llamaindex.ai/en/stable/examples/index_structs/doc_summary/DocSummary/

examples: (official)
- examples: https://docs.llamaindex.ai/en/stable/examples
- use cases: https://docs.llamaindex.ai/en/stable/use_cases/

azure open ai:
https://docs.llamaindex.ai/en/stable/examples/llm/azure_openai/
https://docs.llamaindex.ai/en/stable/examples/customization/llms/AzureOpenAI/ (for llm, embedding, settings)

https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/advanced-rag-with-azure-ai-search-and-llamaindex/ba-p/4115007
https://clemenssiebler.com/posts/using-gpt-index-llamaindex-with-azure-openai-service/

pgvector (custom table and embedding with torch): 
https://medium.com/@shaikhrayyan123/how-to-build-an-llm-rag-pipeline-with-llama-2-pgvector-and-llamaindex-4494b54eb17d
https://dev.to/rayyan_shaikh/how-to-build-an-llm-rag-pipeline-with-llama-2-pgvector-and-llamaindex-11oj

pgvector general:
https://docs.llamaindex.ai/en/stable/examples/vector_stores/postgres/ (pgvector with openai)
https://docs.llamaindex.ai/en/v0.10.17/examples/vector_stores/postgres.html (pgvector with openai)

https://docs.llamaindex.ai/en/latest/api_reference/query_engine/PGVector_SQL/
https://docs.llamaindex.ai/en/stable/examples/vector_stores/PGVectoRsDemo/ (is it pgvector?)
https://docs.llamaindex.ai/en/stable/examples/query_engine/pgvector_sql_query_engine/ (text to sql)
https://docs.llamaindex.ai/en/latest/module_guides/indexing/vector_store_index/

qdrant:
https://docs.llamaindex.ai/en/stable/examples/vector_stores/QdrantIndexDemo/
https://docs.llamaindex.ai/en/stable/examples/vector_stores/qdrant_hybrid/
https://docs.llamaindex.ai/en/stable/examples/vector_stores/Qdrant_using_qdrant_filters/
https://docs.llamaindex.ai/en/stable/examples/vector_stores/Qdrant_metadata_filter/

on a set of docs without vectorstore:
https://github.com/RomanRosa/Step-by-Step-Guide-to-Building-a-RAG-LLM-App-with-LLamA2-and-LLaMAindex/blob/main/notebooks/RAG_System_Using_Llama2_With_Hugging_Face.ipynb

retriever with pinecone:
https://docs.llamaindex.ai/en/stable/examples/low_level/retrieval/

prompts:
https://docs.llamaindex.ai/en/stable/module_guides/models/prompts/usage_pattern/
https://docs.llamaindex.ai/en/stable/examples/prompts/advanced_prompts/

neo4j graph:
https://docs.llamaindex.ai/en/stable/examples/index_structs/knowledge_graph/Neo4jKGIndexDemo/
https://docs.llamaindex.ai/en/v0.10.19/examples/index_structs/knowledge_graph/KnowledgeGraphDemo.html#optional-try-building-the-graph-and-manually-add-triplets
(look for "manually add triplets" to create empty knowledge store)
https://docs.llamaindex.ai/en/stable/api_reference/indices/knowledge_graph/ (KnowledgeGraphIndex)
https://github.com/aneasystone/weekly-practice/tree/main/notes/week054-advanced-rag-notes/demo --> solves the 'template' problem

llamaindex practice git repos:
https://github.com/aneasystone/weekly-practice/tree/main/notes/week054-advanced-rag-notes/demo

Agents:
- new alpha Jun 28 2024 "llama-agents" - https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems
- ReactAgent and AgentRunner - 

https://neo4j.com/labs/genai-ecosystem/llamaindex/
https://llamahub.ai/l/tools/llama-index-tools-neo4j

https://medium.com/analytics-vidhya/build-a-knowledge-graph-using-neo4j-eb7490799f4b

