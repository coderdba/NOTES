=================================================================
PROMPTS
=================================================================

Generate custom prompt dynamically: https://github.com/langchain-ai/langchain/discussions/25385

=================================================================
LANGCHAIN 0.3
=================================================================
Company website: https://www.langchain.com

GENERAL:
- User inputs based prompt generation: https://langchain-ai.github.io/langgraph/tutorials/chatbots/information-gather-prompting/#gather-information
- History aware retriever: https://python.langchain.com/docs/how_to/qa_chat_history_how_to/

SPECIFICS:
- Tool calling: https://python.langchain.com/docs/how_to/tool_calling/  - 
- Tool calling - pass results to model: https://python.langchain.com/docs/how_to/tool_results_pass_to_model/
- Pass run time value to tools: https://python.langchain.com/docs/how_to/tool_runtime/
- Human in the loop for tools: https://python.langchain.com/docs/how_to/tools_human/
- Parallel tool calling: 

AGENTS:
- Legacy (v0.2) AgentExecutor: https://python.langchain.com/docs/how_to/agent_executor/
- Migrate to Langgraph (LC v0.2): https://python.langchain.com/docs/how_to/migrate_agent/
- Basic agent with create_react_agent and Langgraph memory: https://python.langchain.com/docs/tutorials/agents/

--------------
LANGGRAPH
--------------
- Tutorials: https://langchain-ai.github.io/langgraph/tutorials/
- ReAct Agent (many in this section): https://langchain-ai.github.io/langgraph/how-tos/create-react-agent/
- Agentic RAG - agentic rag: https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_agentic_rag/?h=agent#retriever
- Langgraph Branching, graph with agent: https://langchain-ai.github.io/langgraph/#example

https://langchain-ai.github.io/langgraph/reference/prebuilt/#langgraph.prebuilt.chat_agent_executor.create_react_agent


Good article: https://lilianweng.github.io/posts/2023-06-23-agent/
- From https://python.langchain.com/docs/how_to/qa_chat_history_how_to/
Langchain: --> NOTE: Now they ask us to use Langgraph: https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_agentic_rag/?h=agent#retriever
- https://python.langchain.com/v0.2/docs/tutorials/agents/
- Multihop - https://towardsdatascience.com/using-langchain-react-agents-for-answering-multi-hop-questions-in-rag-systems-893208c1847e
--> SUPER - READ OTHER ARTICLES BY THIS AUTHOR LIKE: TIME SERIES ANALYSIS: https://towardsdatascience.com/time-series-analysis-using-pandas-in-python-f726d87a97d8
--> Her git repo: https://github.com/V-Sher

- With llama3 and qdrant - https://medium.com/@yash9439/using-langchain-react-agents-with-qdrant-and-llama3-for-intelligent-information-retrieval-b181ce7a5962




=================================================================
LLAMAINDEX
=================================================================
AGENTS:
- Various ones under here: https://docs.llamaindex.ai/en/stable/use_cases/agents/
-- https://docs.llamaindex.ai/en/stable/understanding/putting_it_all_together/agents/
-- https://docs.llamaindex.ai/en/stable/optimizing/agentic_strategies/agentic_strategies/
-- Multi-agent conceirge: https://github.com/run-llama/multi-agent-concierge/

=================================================================
EVERYTHING
=================================================================
https://developer.nvidia.com/blog/build-an-llm-powered-data-agent-for-data-analysis/
- https://developer.nvidia.com/blog/building-your-first-llm-agent-application/
- Training the model itself with custom data: https://docs.nvidia.com/nemo-framework/user-guide/latest/playbooks/llama2sft.html

Training the model itself:
- Training the model itself with custom data: https://docs.nvidia.com/nemo-framework/user-guide/latest/playbooks/llama2sft.html
- https://dzone.com/articles/custom-training-of-large-language-models-a-compreh

Create LLM model from scratch:
- https://www.freecodecamp.org/news/how-to-build-a-large-language-model-from-scratch-using-python/
- Not fully from scratch: https://bdtechtalks.com/2023/05/01/customize-chatgpt-llm-embeddings/
- From scratch - video - https://huggingface.co/learn/nlp-course/chapter7/6 
- How to Create Your Local LLM Model: https://thomascherickal.medium.com/how-to-create-your-own-llm-model-2598615a039a

Gpt - build your own: https://jaketae.github.io/study/gpt/
--> Very from scratch, NOT COMPLETE either

Advanced RAG:
- https://medium.com/llamaindex-blog/a-cheat-sheet-and-some-recipes-for-building-advanced-rag-803a9d94c41b
- https://www.unite.ai/building-llm-agents-for-rag-from-scratch-and-beyond-a-comprehensive-guide/

Langchain 0.3:
- User inputs based prompt generation: https://langchain-ai.github.io/langgraph/tutorials/chatbots/information-gather-prompting/#gather-information
- History aware retriever: https://python.langchain.com/docs/how_to/qa_chat_history_how_to/

Langgraph:
- Agents: https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_agentic_rag/?h=agent#retriever
- Branching, graph with agent: https://langchain-ai.github.io/langgraph/#example

AGENTS:
Good article: https://lilianweng.github.io/posts/2023-06-23-agent/
- From https://python.langchain.com/docs/how_to/qa_chat_history_how_to/
Langchain: --> NOTE: Now they ask us to use Langgraph: https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_agentic_rag/?h=agent#retriever
- https://python.langchain.com/v0.2/docs/tutorials/agents/
- Multihop - https://towardsdatascience.com/using-langchain-react-agents-for-answering-multi-hop-questions-in-rag-systems-893208c1847e
--> SUPER - READ OTHER ARTICLES BY THIS AUTHOR LIKE: TIME SERIES ANALYSIS: https://towardsdatascience.com/time-series-analysis-using-pandas-in-python-f726d87a97d8
--> Her git repo: https://github.com/V-Sher

- With llama3 and qdrant - https://medium.com/@yash9439/using-langchain-react-agents-with-qdrant-and-llama3-for-intelligent-information-retrieval-b181ce7a5962

Llamaindex: 
- https://docs.llamaindex.ai/en/stable/use_cases/agents/




PROJECT IDEAS
- https://www.geeksforgeeks.org/project-ideas-using-large-language-models/?ref=ml_lbp

SPECIAL THINGS
Large Action Models:
- https://www.geeksforgeeks.org/rabbit-ai-large-action-models-lams/?ref=ml_lbp

TICKETING USING LLM
- JIRA TICKETING USING LANGCHAIN: JiraAPIWrapper: https://medium.com/@levi_yehuda/harnessing-langchain-automating-jira-ticket-creation-with-gpt-5429730e8fb0
