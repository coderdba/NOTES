==============================
BEST SITES
==============================
ML Projects: https://www.geeksforgeeks.org/machine-learning-projects/?ref=lbp
READ THIS FULLY 
- Machine Learning Tutorial: https://www.geeksforgeeks.org/machine-learning/?ref=lbp
	- Random Forest Regressor (SKLearn): https://www.geeksforgeeks.org/random-forest-regression-in-python/
        - Support vector (classifier SVM, regressor SVR), KNN etc
- Machine Learning Algorithms: https://www.geeksforgeeks.org/machine-learning-algorithms/?ref=lbp
- Top 10 LM Algorithms: https://www.geeksforgeeks.org/top-10-algorithms-every-machine-learning-engineer-should-know/?ref=lbp
	- Anomaly Detection: https://www.geeksforgeeks.org/machine-learning-for-anomaly-detection/?ref=lbp
        - Anomaly Detection multiple algorithms: https://www.geeksforgeeks.org/comparing-anomaly-detection-algorithms-for-outlier-detection-on-toy-datasets-in-scikit-learn/?ref=lbp
- Data Analysis with Python: https://www.geeksforgeeks.org/data-analysis-with-python/?ref=lbp

https://www.machinelearningplus.com/

https://www.projectpro.io/article/machine-learning-use-cases/476
https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
https://www.projectpro.io/article/types-of-machine-learning/623
https://www.projectpro.io/article/why-you-should-learn-machine-learning/362
Naive Bayes: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
--> IMPORTANT - CORRECTION TO DENOMINATOR FOR MULTI-FACTOR: https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1

https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/
https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/

https://machinelearningmastery.com/better-naive-bayes/#Use%20Log%20Probabilities
https://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/
https://machinelearningmastery.com/difference-test-validation-datasets/

https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1
https://stats.stackexchange.com/questions/520866/on-the-denominator-of-bayes-and-naive-bayes
https://stats.stackexchange.com/questions/404487/naive-bayes-computation-of-denominator

https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python
https://www.analyticsvidhya.com/blog/2018/09/non-stationary-time-series-python/

=======================
SENTENCE TRANSFORMERS
=======================
HOW TO USE:
- qdrant search: https://qdrant.tech/documentation/tutorials/search-beginners
- https://api.python.langchain.com/en/latest/huggingface/embeddings/langchain_huggingface.embeddings.huggingface.HuggingFaceEmbeddings.html

MODELS LIST:
- https://www.graft.com/blog/open-source-text-embedding-models

MODELS:
https://huggingface.co/allenai/led-base-16384
- From https://www.graft.com/blog/open-source-text-embedding-models
- dim: 768, tokens=16K

https://huggingface.co/allenai/longformer-base-4096
- From https://www.graft.com/blog/open-source-text-embedding-models
- dim: 768, tokens=4k

https://huggingface.co/sentence-transformers/all-mpnet-base-v2
- used in https://api.python.langchain.com/en/latest/huggingface/embeddings/langchain_huggingface.embeddings.huggingface.HuggingFaceEmbeddings.html
- used in https://docs.pinecone.io/models/all-mpnet-base-v2
- max dim = 768, max input tokens = 384 (from pinecone site)
- score: https://seb.sbert.net/?model_name=sentence-transformers/all-mpnet-base-v2

https://huggingface.co/nomic-ai/nomic-embed-text-v1
- nomic-embed-text-v1 is 8192 context length text encoder that surpasses OpenAI text-embedding-ada-002 and text-embedding-3-small performance on short and long context tasks.
- max dim = 768

https://huggingface.co/Alibaba-NLP/gte-Qwen2-1.5B-instruct
- Model Size: 1.5B
Embedding Dimension: 1536
Max Input Tokens: 32k

https://huggingface.co/sentence-transformers/all-MiniLM-L12-v2 --> used earlier with gpt4allembeddings?
- based on https://huggingface.co/microsoft/MiniLM-L12-H384-uncased
- Same from gpt4all: https://huggingface.co/caliex/all-MiniLM-L6-v2-f16.gguf/tree/main


=======================
SAVE AND LOAD MODELS
=======================
Tensorflow, Keras: https://www.tensorflow.org/tutorials/keras/save_and_load

===================
ANOMALY DETECTION
===================
Time series:
- TF Autoencoder: https://www.geeksforgeeks.org/anomaly-detection-in-time-series-data/
- Kmeans: https://towardsdatascience.com/anomaly-detection-in-time-series-sensor-data-86fd52e62538
- Multiple: https://www.geeksforgeeks.org/machine-learning-for-anomaly-detection/?ref=lbp

===================
MODELWISE
===================
Support Vector:
- SVM - Classifer: https://www.geeksforgeeks.org/classifying-data-using-support-vector-machinessvms-in-python/?ref=lbp
- SVR - Regressor - forecasting (linear, non-linear): https://www.geeksforgeeks.org/support-vector-regression-svr-using-linear-and-non-linear-kernels-in-scikit-learn/?ref=lbp

Random Forest:
- REGRESSOR (forecast or derive numeric values - univariate, multivariate):

	- Multivariate, single output, categorical+numeric: 
		- https://www.geeksforgeeks.org/random-forest-regression-in-python/

	- Univariate: forecast01.py in forecast01 - Random Forest
		- Main Reference: https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
		-- Seems to be taken from: https://skforecast.org/0.10.1/user_guides/quick-start-skforecast

	- Multivariatie - single output: MAIN REFERENCE House Price (forecast06) (multiple models including RandomForestRegressor): 
	  - https://www.geeksforgeeks.org/house-price-prediction-using-machine-learning-in-python/
			  -- Contains seaborn heatmap
		- Also see make_regression etc options in: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html
		- Also see (used in forecast01 folder): https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
		- Random Forest Regressor: https://machinelearningmastery.com/random-forest-for-time-series-forecasting/
		- Random Forest Regressor: https://www.geeksforgeeks.org/random-forest-regression-in-python/

- CLASSIFIER (classification)
	- Iris example - Multivariate (forecast06): https://www.geeksforgeeks.org/random-forest-classifier-using-scikit-learn/
	- Random Forest Classifer - probability function: https://stackoverflow.com/questions/30814231/using-the-predict-proba-function-of-randomforestclassifier-in-the-safe-and-rig

- Saving model to file:
- https://stackoverflow.com/questions/56107259/how-to-save-a-trained-model-by-scikit-learn

Arima:
- MAIN REFERENCE- VERY GOOD (arima01) - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
- Need plot_predict separate function: https://stackoverflow.com/questions/72014738/how-to-plot-arima-prediction-forecast-with-statsmodels-0-14-0
- SARIMAX very good - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
- Other - https://www.statsmodels.org/dev/examples/notebooks/generated/statespace_sarimax_stata.html
-- Docs:
--  https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMA.html
    https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMA.fit.html#statsmodels.tsa.arima.model.ARIMA.fit
    https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMAResults.html#statsmodels.tsa.arima.model.ARIMAResults
    https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMAResults.forecast.html#statsmodels.tsa.arima.model.ARIMAResults.forecast
    https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMAResults.predict.html#statsmodels.tsa.arima.model.ARIMAResults.predict
    
    https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMAResults.get_prediction.html#statsmodels.tsa.arima.model.ARIMAResults.get_prediction
    https://www.statsmodels.org/stable/generated/statsmodels.tsa.arima.model.ARIMAResults.get_forecast.html#statsmodels.tsa.arima.model.ARIMAResults.get_forecast

VAR: Multivariate - multi input, multi output, forecast all input variable values also
- Multivariate (forecast02): https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/

XGBOOST
- Event forecasting (forecast03 for stp): https://towardsdatascience.com/forecasting-of-periodic-events-with-ml-5081db493c46

TENSORFLOW-SEQUENTIAL
- Multivariate forecasting - single output (forecast04): 
	- REFERENCE TUTORIAL: https://machinelearningmastery.com/tutorial-first-neural-network-python-keras/
	- REFERENCE - MPG EXAMPLE: https://www.tensorflow.org/tutorials/keras/regression
	- REFERENCE LSTM - https://stackoverflow.com/questions/51506957/getting-all-the-same-values-in-keras-model-predict

SARIMAX - statsmodels versions - univariate, multivariate with exog/exogenous variables inputted
- Version: This seems later version as of Jan 2024: statsmodels.tsa.statespace.sarimax import SARIMAX
- SARIMAX very good (sarimax01) - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
- https://cienciadedatos.net/documentos/py51-arima-sarimax-models-python
- Need plot_predict separate function: https://stackoverflow.com/questions/72014738/how-to-plot-arima-prediction-forecast-with-statsmodels-0-14-0
- Other - https://www.statsmodels.org/dev/examples/notebooks/generated/statespace_sarimax_stata.html

- Version: This seems like an olver version as of Jan 2024: statsmodels.api.tsa.SARIMAX --> this seems to be an outdated one??
- Reference (sarimax02): https://mlpills.dev/time-series/how-to-train-a-sarima-model-step-by-step/
- https://cienciadedatos.net/documentos/py51-arima-sarimax-models-python

AUTO ARIMA - from pmdarima.arima import auto_arima 
- Example: https://alkaline-ml.com/pmdarima/auto_examples/arima/example_auto_arima.html
- Example: https://stevenkyle2013.medium.com/quick-intro-auto-arima-from-pmdarima-package-e7aab5e8dfb8

GRID SEARCH FORECASTER:
- https://joaquinamatrodrigo.github.io/skforecast/0.4.3/notebooks/grid-search-forecaster.html

Multiple Forecasters - Univariate:
- Sklearn:
- All regressors: https://scikit-learn.org/stable/supervised_learning.html

- Grid search forecaster:
- https://joaquinamatrodrigo.github.io/skforecast/0.4.3/notebooks/grid-search-forecaster.html

- forecast01.py in forecast01 - Random Forest
- Main Reference: https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
-- Seems to be taken from: https://skforecast.org/0.10.1/user_guides/quick-start-skforecast

- forecast02.py in forecast01 - Ridge
- https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html

- forecast03.py in forecast01 - xgboost
- This predicts upto the end of the dataset itself: https://cienciadedatos.net/documentos/py39-forecasting-time-series-with-skforecast-xgboost-lightgbm-catboost
- To actually predict future: https://stackoverflow.com/questions/71833774/how-to-forecast-actual-future-values-using-xgboost

Naive Bayes:

===============================
HELP AND TROUBLESHOOTING
===============================
TENSORFLOW ISSUES
Issue - accuracy is always zero: 
- https://stackoverflow.com/questions/45632549/why-is-the-accuracy-for-my-keras-model-always-0-when-training
- https://datascience.stackexchange.com/questions/46779/predict-gives-the-same-output-value-for-every-image-keras

Issue - same forecast for all points
- https://datascience.stackexchange.com/questions/46779/predict-gives-the-same-output-value-for-every-image-keras
- https://discuss.pytorch.org/t/why-am-i-getting-same-output-values-for-every-single-data-in-my-ann-model-for-multi-class-classification/57760
- https://github.com/keras-team/keras/issues/6447

Issue - inconsistent results on consecutive runs
- https://stackoverflow.com/questions/67316256/why-do-i-get-different-predictions-using-keras-sequential-neural-network-in-a-lo

OTHER
***DateTimeIndex: https://stackoverflow.com/questions/48248239/pandas-how-to-convert-rangeindex-into-datetimeindex
    - Periodicity: https://stackoverflow.com/questions/58510659/error-valuewarning-a-date-index-has-been-provided-but-it-has-no-associated-fr
    
Dataframe issue: https://stackoverflow.com/questions/64295560/how-to-use-statsmodels-tsa-seasonal-seasonal-decompose-with-a-pandas-dataframe
DateTimeIndex: https://statisticsglobe.com/set-datetimeindex-pandas-dataframe-python
DateTimeIndex: https://stackoverflow.com/questions/27032052/how-do-i-properly-set-the-datetimeindex-for-a-pandas-datetime-object-in-a-datafr

===================
FORECASTING
===================
--------------------
WHAT I TRIED
--------------------
SARIMAX - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
ARIMA - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
NAIVE BAYES - https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
NAIVE BAYES - https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#5naivebayesexamplebyhand
MULTIVARIATE - https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python

PLAYGROUND
https://www.programiz.com/python-programming/online-compiler/
https://programiz.pro/ide/python?utm_source=compiler-nav-save&utm_medium=referral&utm_campaign=programiz

KAGGLE - MANY EXAMPLES
Rainfall in India: https://www.kaggle.com/datasets/rajanand/rainfall-in-india/code
- https://www.kaggle.com/code/darsh79/starter-rainfall-in-india-99bfc809-4
Datasets: https://www.kaggle.com/datasets

SKLEARN
- All regressors: https://scikit-learn.org/stable/supervised_learning.html
- Random Forest vs Histogram Gradient Boost: https://scikit-learn.org/stable/auto_examples/ensemble/plot_forest_hist_grad_boosting_comparison.html

TYPES OF MACHINE LEARNING
https://www.projectpro.io/article/types-of-machine-learning/623

XGBOOST 
- Python XGBoost for classification/predictive maintenance - https://github.com/fernandodecastilla/Machine-Learning-for-Predictive-Maintenance/blob/master/Anomaly%20Prediction%20models/cls_balanced_models/best_model_code_precision_0.9082.py
- XGBoost - https://www.datacamp.com/tutorial/xgboost-in-python
- XGBoost regression/prediction - https://machinelearningmastery.com/xgboost-for-regression/

EVENT FORECAST 
- XGBoost: https://towardsdatascience.com/forecasting-of-periodic-events-with-ml-5081db493c46 --> DID NOT WORK VERY WELL FOR ST-PG DATA, NEED TO TRY AGAIN

NAIVE BAYES
- Theory: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
--> IMPORTANT - CORRECTION TO DENOMINATOR FOR MULTI-FACTOR: https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1

- Doc: Sklearn package GaussianNB: https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html
    - Research paper: http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf

- Research paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5203736/

- Good example with Python and R: https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#5naivebayesexamplebyhand

- Good example: https://www.geeksforgeeks.org/naive-bayes-classifiers/ (This eliminates denominator and normalizes the tiny fractional probability values obtained)

- Improve Naive Bayes 
    - https://www.baeldung.com/cs/naive-bayes-classification-performance
    - https://machinelearningmastery.com/better-naive-bayes/#Use%20Log%20Probabilities
    - https://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/

FAQ - https://machinelearningmastery.com/faq/single-faq/how-to-develop-forecast-models-for-multiple-sites/

MULTIVARIATE ANALYSIS - FORECASTING
https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python

SKLearn models: https://towardsdatascience.com/multiple-series-forecast-them-together-with-any-sklearn-model-96319d46269

With arimax: https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/

House price forecast (using SVM): https://www.geeksforgeeks.org/house-price-prediction-using-machine-learning-in-python/
- This turned out good with Random Forest Regressor mentioned in it

SAP multivariate model: https://blogs.sap.com/2021/05/06/a-multivariate-time-series-modeling-and-forecasting-guide-with-python-machine-learning-client-for-sap-hana/

Keras sequential:
- https://machinelearningmastery.com/deep-learning-models-for-multi-output-regression/

MULTIOUTPUT
- https://machinelearningmastery.com/deep-learning-models-for-multi-output-regression/

FORECASTING - 11 MODELS CHEAT SHEET
https://machinelearningmastery.com/time-series-forecasting-methods-in-python-cheat-sheet/

FORECASTING - ARIMA
- VERY GOOD - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
    statsmodels.tsa.arima.model.ARIMA -->
    statsmodels.tsa.arima.model.ARIMA.fit -->
    statsmodels.tsa.arima.model.ARIMAResults --> forecast, predict etc
    Another similar - https://stackoverflow.com/questions/31690134/python-statsmodels-help-using-arima-model-for-time-series
    Alpha is not available in statsmodels 14 arima forecast unlike in the example: https://stackoverflow.com/questions/64277905/statsmodels-arima-how-to-get-confidence-prediction-interval
    To find p and q - https://blog.devgenius.io/finding-optimal-p-d-and-q-values-for-your-arima-model-94669a909a35
    To plot forecast values - https://www.statsmodels.org/stable/examples/notebooks/generated/statespace_forecasting.html
- https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/
- Good - https://www.statsmodels.org/dev/examples/notebooks/generated/statespace_sarimax_stata.html
- ** Sending ARIMA forecasts to Grafana - https://anttihavanko.medium.com/time-series-forecasting-for-prometheus-grafana-with-bigquery-ml-2154f7cd48b5
- Arimax for multivariate - https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/
- PMDARIMA, AUTO_ARIMA - https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html

FORECASTING - SARIMA
- SARIMAX VERY GOOD - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
- SARIMA terminologies (PDQS) - https://365datascience.com/tutorials/python-tutorials/sarimax/
- PMDARIMA, AUTO_ARIMA - https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html

FORECASTING - SARIMA, SARIMA with AutoARIMA - also, uses a different package for the second one
- Detailed: https://mlpills.dev/time-series/how-to-train-a-sarima-model-step-by-step/

FORECASTING - PROPHET
https://machinelearningmastery.com/time-series-forecasting-with-prophet-in-python/

RANDOM FOREST - SKLEARN
- Forecast: Convert time series forecasting into supervised learning: https://machinelearningmastery.com/random-forest-for-time-series-forecasting/
- Forecast: House values (RF and other): https://www.geeksforgeeks.org/house-price-prediction-using-machine-learning-in-python/
- Forecast - univariate (forecast01 git): Univariate (not sure how this worked as there is no supervised learning input in it): https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
-- seems to be taken from: https://skforecast.org/0.10.1/user_guides/quick-start-skforecast

- Theory - https://cnvrg.io/random-forest-regression/
- Theory: Breakdown of internals with an exaple code: https://www.geeksforgeeks.org/random-forest-regression-in-python/
- Theory/Paper: https://cran.r-project.org/web/packages/MultivariateRandomForest/MultivariateRandomForest.pdf

SKFORECAST - FORECASTERAUTOREG
- https://skforecast.org/0.11.0/
-- https://skforecast.org/0.11.0/api/forecasterautoreg

- Older version, but same exist in v11 also
-- general: https://skforecast.org/0.8.0/api/forecasterautoreg
-- multiseries: https://skforecast.org/0.8.0/api/forecastermultiseries
-- multivariate: https://skforecast.org/0.8.0/api/forecastermultivariate
-- EXOGENOUS VARIABLES: https://skforecast.org/0.8.0/api/forecasterautoreg#skforecast.ForecasterAutoreg.ForecasterAutoreg.ForecasterAutoreg.fit
-- Sarimax: https://skforecast.org/0.8.0/api/forecastersarimax
-- SINGLE VARIABLE / univariate: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster.html
-- EXOGENOUS VARIABLES for single output: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster-exogenous.html

SEASONAL DECOMPOSITION
- https://machinelearningmastery.com/decompose-time-series-data-trend-seasonality/

ADFULLER TEST
- https://www.machinelearningplus.com/time-series/augmented-dickey-fuller-test/

FORECASTING USING R AND PYTHON - 2 PARTS (SEEMS VERY GOOD)
- https://pawarbi.github.io/blog/forecasting/r/python/rpy2/altair/2020/04/21/timeseries-part1.html
- https://pawarbi.github.io/blog/forecasting/r/python/rpy2/altair/fbprophet/ensemble_forecast/uncertainty/simulation/2020/04/21/timeseries-part2.html

SIMPLE FORECASTING
- Using SQL - https://towardsdatascience.com/basic-statistical-forecasting-in-postgresql-c1d38143bb41

AI-ML USE CASES
https://www.projectpro.io/article/machine-learning-use-cases/476
- Fraud/Anomaly detection, classification models: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-1

FAILURE PREDICTION
- https://github.com/fernandodecastilla/Machine-Learning-for-Predictive-Maintenance/tree/master
- https://github.com/abiodun-ayodeji/Predictive-Maintenance
- https://github.com/Impression2805/Awesome-Failure-Detection

- https://www.relataly.com/predictive-maintenance-predicting-machine-failure-with-python/10618/
    https://github.com/flo7up/relataly-public-python-tutorials/blob/master/02%20Classification/022%20Predicting%20Machine%20Malfunction%20of%20Milling%20Machines%20in%20Python.ipynb

- https://h2o.ai/blog/2019/predicting-failures-from-sensor-data-using-ai-ml-part-1/
    https://h2o.ai/blog/2019/predicting-failures-from-sensor-data-using-ai-ml-part-2/
    https://github.com/h2oai/driverlessai-recipes/tree/master/transformers
- https://medium.com/swlh/machine-learning-for-equipment-failure-prediction-and-predictive-maintenance-pm-e72b1ce42da1
- https://mipu.eu/en/case_study/predict-failures-with-machine-learning-real-case-studies/

** Book: Forecasting: Principles and Practice: https://otexts.com/fpp2/simple-methods.html

TEST DATA GENERATOR
Pandas, Numpy: https://stackoverflow.com/questions/56310849/generate-random-timeseries-data-with-dates
https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html

TIME SERIES FORECASTING
- sklearn good - Random Forest Regressor: https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
--> this is from: Examples of skforecast: https://skforecast.org/0.10.1/index.html  
    (or https://skforecast.org/0.4.3/examples/examples) --> https://skforecast.org/0.4.3/notebooks/save-load-forecaster.html

- sklearn good - Ridge Regressor: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster-exogenous.html
--> similar example as https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html from same author

- sklearn very good - Gradient Boosting: https://cienciadedatos.net/documentos/py39-forecasting-time-series-with-skforecast-xgboost-lightgbm-catboost
    - This predicts upto the end of the dataset itself
    - To actually predict future: https://stackoverflow.com/questions/71833774/how-to-forecast-actual-future-values-using-xgboost

- sklearn good: With seasonality - Ridge Regressor: sklearn, skforecast: https://cienciadedatos.net/documentos/py29-forecasting-electricity-power-demand-python.html
--> this is from: Examples of skforecast: https://skforecast.org/0.10.1/index.html  
    (or https://skforecast.org/0.4.3/examples/examples)

- Histogram Gradient Boost: https://machinelearningmastery.com/histogram-based-gradient-boosting-ensembles/

- Examples of skforecast: https://skforecast.org/0.4.3/examples/examples
- Examples with randomForestRegressor: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html#examples-using-sklearn-ensemble-randomforestregressor

- Keras supervised learning - https://machinelearningmastery.com/how-to-use-the-timeseriesgenerator-for-time-series-forecasting-in-keras/
- Unsupervised - https://builtin.com/data-science/unsupervised-learning-python
- sklearn - scikit learn, multiple types - https://machinelearningmastery.com/make-predictions-scikit-learn/
- Unsupervised various - https://www.askpython.com/python/examples/python-predict-function
- sklearn - https://stackoverflow.com/questions/48884782/how-to-forecast-future-dataframe-using-sklearn-python

======================================
DATA PRE-PROCESSING
======================================
OneHotEncoding - https://www.geeksforgeeks.org/ml-one-hot-encoding-of-datasets-in-python/?ref=lbp

======================================
ACCURACY METRICS FOR MODELS
======================================
Classification model accuracy:
- https://www.analyticsvidhya.com/blog/2021/07/metrics-to-evaluate-your-classification-model-to-take-the-right-decisions/

Regression model accuracy:
- https://www.geeksforgeeks.org/regression-metrics/

===================
CORRELATION
===================
Correlation - multiple models:  https://towardsdatascience.com/calculate-similarity-the-most-relevant-metrics-in-a-nutshell-9a43564f533e
Good basic coefficients using Python: https://realpython.com/numpy-scipy-pandas-correlation-python/
Datadog correlation: https://docs.datadoghq.com/dashboards/correlations/ - Datadog searches for other metrics that exhibited anomalous behavior in a time aligned with the area of interest.

To try correlation and then with LLM:
https://medium.com/@sebastiannorena/finding-correlation-between-many-variables-multidimensional-dataset-with-python-5deb3f39ffb3#
- Dataset: https://www.dropbox.com/s/4jgheggd1dak5pw/data_visualization.csv?raw=1%27

===================
EVENT CORRELATION
===================
- ARTICLES
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8588274/
https://wires.onlinelibrary.wiley.com/doi/10.1002/widm.1346
https://www.bigpanda.io/blog/event-correlation/
https://sciencelogic.com/blog/event-correlation-101-why-it-matters-and-why-its-not-enough
	- https://sciencelogic.com/blog/how-to-normalize-data
https://en.wikipedia.org/wiki/Event_correlation
Log reduction/compression: https://arxiv.org/pdf/2309.09479.pdf

Log parsng using LLM:
- https://www.zebrium.com/blog/using-gpt-3-with-zebrium-for-plain-language-incident-root-cause-from-logs
- https://arxiv.org/abs/2310.01796

Unstructured data: 
- https://www.analyticsvidhya.com/blog/2021/08/implementing-artificial-neural-network-on-unstructured-data/
	- Based on artifical neural network: https://www.analyticsvidhya.com/blog/2021/05/beginners-guide-to-artificial-neural-network/
- https://cloud.google.com/blog/products/data-analytics/how-to-apply-machine-learning-to-unstructured-data-using-bigqueryml/

- PAID TOOLS
Solarwinds: https://www.solarwinds.com/security-event-manager/use-cases/event-correlation
Splunk: https://www.splunk.com/en_us/pdfs/tech-brief/splunk-event-correlation-tech-brief.pdf

- PACKAGES
scikit-event-correlation 1.0.2 
	- https://pypi.org/project/scikit-event-correlation/
	- https://github.com/Intellia-SME/scikit-event-correlation/tree/main/example

========
LLM
========
(also see langchain, langsmith)

NLP understand:	
https://www.analyticsvidhya.com/blog/2017/01/ultimate-guide-to-understand-implement-natural-language-processing-codes-in-python

Quick tutorials:
- https://blog.streamlit.io/langchain-tutorial-1-build-an-llm-powered-app-in-18-lines-of-code/
- https://www.analyticsvidhya.com/blog/2023/03/an-introduction-to-large-language-models-llms/#h-what-is-a-large-language-model
- https://huggingface.co/learn/nlp-course/chapter1/3?fw=pt

Courses:
- Huggingface NLP course: https://huggingface.co/learn/nlp-course/chapter0/1

What is LLM:
Super theory: 
Vectors and Embeddings: https://medium.com/@saschametzger/what-are-tokens-vectors-and-embeddings-how-do-you-create-them-e2a3e698e037
Vectors and Embeddings: https://www.lesswrong.com/posts/pHPmMGEMYefk9jLeh/llm-basics-embedding-spaces-transformer-token-vectors-are

Embeddings: https://huggingface.co/blog/getting-started-with-embeddings
Embeddings: https://www.featureform.com/post/the-definitive-guide-to-embeddings
Embeddings (good explanation how they are created): https://digitate.com/blog/word2vec-what-are-word-embedding/
Embeddings (and creating): https://docs.llamaindex.ai/en/stable/module_guides/models/embeddings/

Very good: https://resources.nvidia.com/en-us-large-language-model-ebooks/llm-ebook-part1
           https://resources.nvidia.com/en-us-large-language-model-ebooks/llm-ebook-part2
https://www.analyticsvidhya.com/blog/2023/03/an-introduction-to-large-language-models-llms/#h-what-is-a-large-language-model (also has code)
Tokens and Parameters, Temperature etc: https://txt.cohere.com/llm-parameters-best-outputs-language-ai/
Parameters etc.: https://medium.com/@greg.broadhead/a-brief-guide-to-llm-numbers-parameter-count-vs-training-size-894a81c9258
Embeddings: https://pub.aimind.so/llm-embeddings-explained-simply-f7536d3d0e4b
Tokenizers: https://medium.com/@michaelhumor/understanding-tokens-and-tokenization-in-large-language-models-1058cd24b944
Tokenizers (with code): https://huggingface.co/docs/transformers/main/en/llm_tutorial
Tokenizers (with code): https://medium.com/@awaldeep/hugging-face-understanding-tokenizers-1b7e4afdb154
Chunking and overlapping: https://www.pinecone.io/learn/chunking-strategies/
RAG - Retrieval Augmented Generation: https://llmstack.ai/blog/retrieval-augmented-generation

LLM vs knowledge base:
- https://medium.com/@machangsha/llm-as-knowledge-base-v-s-llm-with-knowledge-retrieval-e5812d3f336

About Various Models:
- LLAMA:
	- https://ai.meta.com/blog/large-language-model-llama-meta-ai/
		- Model card: https://github.com/facebookresearch/llama/blob/main/MODEL_CARD.md
		- Paper: https://arxiv.org/abs/2302.13971 --> https://arxiv.org/pdf/2302.13971.pdf

Articles:
- Using GPT-J - https://towardsdatascience.com/how-you-can-use-gpt-j-9c4299dd8526

Chunk Size, Chunk Overlap, Tokens:
- https://github.com/hwchase17/langchain/issues/2026
- https://www.pinecone.io/learn/chunking-strategies/
- https://medium.com/@jeevanchavan143/nlp-tokenization-stemming-lemmatization-bag-of-words-tf-idf-pos-7650f83c60be

Context size:
- https://blendingbits.io/p/llm-engineering-context-windows

Free ones:
https://www.listendata.com/2023/03/open-source-chatgpt-models-step-by-step.html#id-06b2ce
https://www.simform.com/blog/open-source-llm/

Dalai - llama, alpaca:
- Tutorial: https://medium.com/@martin-thissen/llama-alpaca-chatgpt-on-your-local-computer-tutorial-17adda704c23
- Dalai repo: https://github.com/cocktailpeanut/dalai

Alpaca locally:
https://replicate.com/blog/replicate-alpaca

*** Private LLM: (free)
https://weaviate.io/blog/private-llm
- https://github.com/imartinez/privateGPT
    - Tutorial with venv: https://hackernoon.com/how-to-install-privategpt-a-local-chatgpt-like-instance-with-no-internet-required
    - Forked one with better documentation: https://github.com/vkrit/privateChatGPT
        Documentation is being updated:
        - ISSUE AND UPDATED DOC: https://github.com/imartinez/privateGPT/issues/1276
          PER THIS BEING-UPDATED DOCUMENTATION:
                    We are currently working on refactoring the documentation, but in a nutshell, to install this on macos:
        
                    # One liner to install
                    git clone https://github.com/imartinez/privateGPT && cd privateGPT && \
                    python3.11 -m venv .venv && source .venv/bin/activate && \
                    pip install --upgrade pip poetry && poetry install --with ui,local && ./scripts/setup
        
                    # Patch the version of `llama-cpp-python` installed to add metal support
                    # This have to run with inside your python venv !
                    CMAKE_ARGS="-DLLAMA_METAL=on" pip install --force-reinstall --no-cache-dir llama-cpp-python
        
                    c.f. https://privategpt-preview-8380d3f2-962a-400e-87d4-fd1c4636f174.docs.buildwithfern.com/overview/welcome/quickstart
                    python3.11 -m private_gpt

    More on how to use privategpt: https://www.reddit.com/r/LocalLLaMA/comments/155zclb/training_an_llm_on_multiple_documents_first_steps/

    Private GPT: (uses gpt4all)
    https://github.com/imartinez/privateGPT
    - Private GPT that uses gpt4all
    Tutorial: https://bdtechtalks.com/2023/06/01/create-privategpt-local-llm
    Training the model - https://levelup.gitconnected.com/training-your-own-llm-using-privategpt-f36f0c4f01ec
    Fine Tuning: https://medium.com/graphcore/fine-tune-gpt-j-a-cost-effective-gpt-4-alternative-for-many-nlp-tasks-67a42f02068d

H2OGPT:
https://github.com/h2oai/h2ogpt
- llama models: https://huggingface.co/TheBloke

GPT4ALL: (free)
https://gpt4all.io/index.html
- https://docs.gpt4all.io/
- Models (look for model explorer and dropdown): https://gpt4all.io/index.html
- Fine Tuning: https://medium.com/graphcore/fine-tune-gpt-j-a-cost-effective-gpt-4-alternative-for-many-nlp-tasks-67a42f02068d

GPT4All - running it:
Tutorial - https://docs.kanaries.net/articles/gpt4all.en
- https://github.com/nomic-ai/gpt4all

H2OAI
- https://github.com/h2oai/h2ogpt

Models:
- https://github.com/eugeneyan/open-llms

Download models (for Private GPT)
- Groovy: https://gpt4all.io/models/ggml-gpt4all-j-v1.3-groovy.bin (model type gpt4all)
- Snoozy:  https://huggingface.co/TheBloke/GPT4All-13B-snoozy-GGML/tree/main (model type gpt4all)
    (https://huggingface.co/TheBloke/GPT4All-13B-snoozy-GGML/blob/main/GPT4All-13B-snoozy.ggmlv3.q8_0.bin)
- Wizardlm: https://huggingface.co/TheBloke/WizardLM-13B-Uncensored-GGML/tree/main (model type gpt4all)

Convert pytorch files to ggml:
- https://github.com/ggerganov/llama.cpp/discussions/1394

GPT-J VS LLAMA:
https://sapling.ai/llm/gpt-j-vs-llama

LLAMA:
- https://github.com/ggerganov/llama.cpp
- https://github.com/openlm-research/open_llama

LLAMA Models to download (openllama):
- https://huggingface.co/TheBloke/open-llama-13b-open-instruct-GGML/tree/main (ggml)
- https://huggingface.co/SlyEcho/open_llama_7b_ggml/tree/main (ggml?)
- https://huggingface.co/openlm-research/open_llama_13b (pytorch)

MiniGPT:
https://github.com/karpathy/minGPT

LLM for AIOPS
- https://www.linkedin.com/pulse/bertops-large-language-model-aiops-debanjana-kar

Feedback Loops
- Good tutorial using openai: https://weaviate.io/blog/generative-feedback-loops-with-llms

==================================
DATASETS FOR LLM, FORECAST, PREDICT
===================================
https://dzone.com/articles/free-datasets-for-machine-learning-and-deep-learning

===================================
CREATE OWN LLM
===================================
Building/Training own LLM:
- From scratch - https://www.freecodecamp.org/news/how-to-build-a-large-language-model-from-scratch-using-python/
- Not fully from scratch: https://bdtechtalks.com/2023/05/01/customize-chatgpt-llm-embeddings/
- From scratch - video - https://huggingface.co/learn/nlp-course/chapter7/6 
- How to Create Your Local LLM Model: https://thomascherickal.medium.com/how-to-create-your-own-llm-model-2598615a039a

Gpt - build your own: https://jaketae.github.io/study/gpt/
--> Very from scratch, NOT COMPLETE either

LLAMA LOCALLY
https://medium.com/@zekaouinoureddine/bring-your-own-data-to-llms-using-langchain-llamaindex-3ddbac8cc9eb
https://medium.com/@fvanlitsenburg/building-a-private-gpt-with-haystack-part-3-using-llama-2-with-ggml-c2d994da40da
https://app.baseten.co/explore/llama_2_7b_chat
https://www.reddit.com/r/LocalLLaMA/comments/155zclb/training_an_llm_on_multiple_documents_first_steps/

PRIVATE LLM
https://bdtechtalks.com/2023/05/01/customize-chatgpt-llm-embeddings/ --> talks about langchain to develop from scratch
https://weaviate.io/blog/private-llm
https://www.superannotate.com/blog/llm-fine-tuning

Tuning 20B model: https://huggingface.co/blog/trl-peft
Custom Training of Large Language Models (LLMs): A Detailed Guide With Code Samples: https://dzone.com/articles/custom-training-of-large-language-models-a-compreh

MISTRAL LOCALLY
Mistral uses mistral-embed embeddings.
It may not be fully same as gpt-4all.
Concatenate embeddings to get hybrid model??

Run Mistral locally
- https://cheatsheet.md/llm-leaderboard/how-to-run-mistral-locally.en

RAG with mistral (official docs): 
- https://docs.mistral.ai/guides/basic-RAG/

The Mistral AI Embeddings API, specifically using the mistral-embed model, generates state-of-the-art text embeddings. These embeddings capture the semantic meaning of paragraphs by positioning them in a high-dimensional vector space1. However, it’s essential to note that Mistral is primarily a decoder language model, trained to predict following words from left to right only2.

On the other hand, GPT-4All embeddings are generated by the GPT-4All ecosystem, which includes models like Falcon LLaMA, MPT, and GPT-J3. These embeddings are contextually rich and adaptable, considering the entire context during their creation4.

While both Mistral and GPT-4All offer powerful embeddings, their compatibility depends on the specific use case and task alignment. If you plan to combine them, consider fine-tuning, hybrid approaches, and evaluation to ensure effective integration!


===================================
LANGCHAIN
===================================
QA: https://python.langchain.com/docs/use_cases/question_answering/
QA: https://python.langchain.com/docs/use_cases/question_answering/quickstart
Local LLMs: https://python.langchain.com/docs/guides/local_llms
Chroma DB: https://python.langchain.com/docs/integrations/vectorstores/chroma
QA Chain local LLM + local vectorstore: https://docs.smith.langchain.com/cookbook/hub-examples/retrieval-qa-chain
Javascript Vectorstore RetrievalQA: https://js.langchain.com/docs/modules/chains/popular/vector_db_qa

https://nanonets.com/blog/langchain/ 
Tutorial with openai: https://www.sitepoint.com/langchain-python-complete-guide/
Local LLMS: https://python.langchain.com/docs/guides/local_llms
Llama: https://python.langchain.com/docs/integrations/llms/llamacpp
RAG (doc ingestion):
- https://python.langchain.com/docs/use_cases/question_answering/
- https://python.langchain.com/docs/use_cases/question_answering/local_retrieval_qa
Vector Stores: 
- Chroma: https://python.langchain.com/docs/integrations/vectorstores/chroma
SQL: https://python.langchain.com/docs/use_cases/qa_structured/sql
API: https://python.langchain.com/docs/use_cases/apis
Tutorials: https://python.langchain.com/docs/additional_resources/tutorials
https://learn.deeplearning.ai/langchain-chat-with-your-data/lesson/1/introduction

Different LLLs with RAG: https://python.langchain.com/docs/use_cases/question_answering/local_retrieval_qa
Llama with RAG chatbot: https://medium.com/@madhur.prashant7/demo-langchain-rag-demo-on-llama-2-7b-embeddings-model-using-chainlit-559c10ce3fbf
Llama with RAG chatbot: https://blogs.oracle.com/ai-and-datascience/post/ai-chatbot-llama2-qdrant-rag-langchain-streamlit

===================================
Train with own dataset
===================================
https://www.mlexpert.io/machine-learning/tutorials/alpaca-fine-tuning
- https://github.com/tloen/alpaca-lora

https://medium.com/@zekaouinoureddine/bring-your-own-data-to-llms-using-langchain-llamaindex-3ddbac8cc9eb
- llamaindex, langchain, openai, various parameters for loading data

https://blog.langchain.dev/tutorial-chatgpt-over-your-data/
- langchain, chatgpt

https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed
- loading various formats,  very detailed in various parameters for loading data

===============================
LLM APPLICATIONS
===============================
Dify and flowiseai seemed good.
Chatlas may be good for customer service.

Lists: 
- https://topai.tools/browse?os=opensource
- https://topai.tools/browse?pricing=free
- https://klu.ai/blog/open-source-llm-models?ref=agilefirst.io

Dify (ysh) (open source and paid): https://dify.ai/
	- https://github.com/langgenius/dify

Private GPT: https://github.com/zylon-ai/private-gpt
- Doc: https://privategpt-preview-8380d3f2-962a-400e-87d4-fd1c4636f174.docs.buildwithfern.com/installation/getting-started/installation
- Doc: https://docs.privategpt.dev/installation/getting-started/installation

Klu (not free): https://klu.ai/

Dify (ysh) alternatives: https://topai.tools/alternatives/dify
- https://app.flow.ai/ (not free) 
- https://flowiseai.com/ (free) --> no-code with flow diagrams?
	-- https://docs.flowiseai.com/
	-- https://github.com/FlowiseAI/Flowise
	-- Local models: https://docs.flowiseai.com/integrations/langchain/chat-models/chatlocalai
		-- LocalAI API: https://localai.io/model-compatibility/index.html
			-- Manual local models: https://localai.io/docs/getting-started/manual/
			-- Manual local models: https://localai.io/docs/getting-started/run-other-models/
			-- Fine tune - train with dataset and save as gguf: https://localai.io/docs/advanced/fine-tuning/
- https://topai.tools/t/llmstack (free)
- https://topai.tools/t/bind-ai (free)
- https://topai.tools/t/open-gpt (free)
- https://topai.tools/t/aigpt-free (free)
- https://topai.tools/t/lmstudio-ai (free)

- For customer support: https://topai.tools/usecases/customer-support
	-- Looks like only this was free: https://topai.tools/t/chatlas
