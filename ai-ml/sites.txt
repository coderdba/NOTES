==============================
BEST SITES
==============================
https://www.machinelearningplus.com/

https://www.projectpro.io/article/machine-learning-use-cases/476
https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
https://www.projectpro.io/article/types-of-machine-learning/623
https://www.projectpro.io/article/why-you-should-learn-machine-learning/362
Naive Bayes: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
--> IMPORTANT - CORRECTION TO DENOMINATOR FOR MULTI-FACTOR: https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1

https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/
https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/

https://machinelearningmastery.com/better-naive-bayes/#Use%20Log%20Probabilities
https://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/
https://machinelearningmastery.com/difference-test-validation-datasets/

https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1
https://stats.stackexchange.com/questions/520866/on-the-denominator-of-bayes-and-naive-bayes
https://stats.stackexchange.com/questions/404487/naive-bayes-computation-of-denominator

https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python
https://www.analyticsvidhya.com/blog/2018/09/non-stationary-time-series-python/

==========================================================================================
WHAT I TRIED
--------------------
SARIMAX - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
ARIMA - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
NAIVE BAYES - https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
NAIVE BAYES - https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#5naivebayesexamplebyhand
MULTIVARIATE - https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python


==========================================================================================
PLAYGROUND
https://www.programiz.com/python-programming/online-compiler/
https://programiz.pro/ide/python?utm_source=compiler-nav-save&utm_medium=referral&utm_campaign=programiz

KAGGLE - MANY EXAMPLES
Rainfall in India: https://www.kaggle.com/datasets/rajanand/rainfall-in-india/code
- https://www.kaggle.com/code/darsh79/starter-rainfall-in-india-99bfc809-4
Datasets: https://www.kaggle.com/datasets

SKLEARN
- All regressors: https://scikit-learn.org/stable/supervised_learning.html
- Random Forest vs Histogram Gradient Boost: https://scikit-learn.org/stable/auto_examples/ensemble/plot_forest_hist_grad_boosting_comparison.html

TYPES OF MACHINE LEARNING
https://www.projectpro.io/article/types-of-machine-learning/623

XGBOOST 
- Python XGBoost for classification/predictive maintenance - https://github.com/fernandodecastilla/Machine-Learning-for-Predictive-Maintenance/blob/master/Anomaly%20Prediction%20models/cls_balanced_models/best_model_code_precision_0.9082.py
- XGBoost - https://www.datacamp.com/tutorial/xgboost-in-python
- XGBoost regression/prediction - https://machinelearningmastery.com/xgboost-for-regression/

NAIVE BAYES
- Theory: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
--> IMPORTANT - CORRECTION TO DENOMINATOR FOR MULTI-FACTOR: https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1

- Doc: Sklearn package GaussianNB: https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html
    - Research paper: http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf

- Research paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5203736/

- Good example with Python and R: https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#5naivebayesexamplebyhand

- Good example: https://www.geeksforgeeks.org/naive-bayes-classifiers/ (This eliminates denominator and normalizes the tiny fractional probability values obtained)

- Improve Naive Bayes 
    - https://www.baeldung.com/cs/naive-bayes-classification-performance
    - https://machinelearningmastery.com/better-naive-bayes/#Use%20Log%20Probabilities
    - https://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/

MULTIVARIATE ANALYSIS - FORECASTING
https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python
With arimax: https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/

FORECASTING - ARIMA
- VERY GOOD - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
    statsmodels.tsa.arima.model.ARIMA -->
    statsmodels.tsa.arima.model.ARIMA.fit -->
    statsmodels.tsa.arima.model.ARIMAResults --> forecast, predict etc
    Another similar - https://stackoverflow.com/questions/31690134/python-statsmodels-help-using-arima-model-for-time-series
    Alpha is not available in statsmodels 14 arima forecast unlike in the example: https://stackoverflow.com/questions/64277905/statsmodels-arima-how-to-get-confidence-prediction-interval
    To find p and q - https://blog.devgenius.io/finding-optimal-p-d-and-q-values-for-your-arima-model-94669a909a35
    To plot forecast values - https://www.statsmodels.org/stable/examples/notebooks/generated/statespace_forecasting.html
- https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/
- Good - https://www.statsmodels.org/dev/examples/notebooks/generated/statespace_sarimax_stata.html
- ** Sending ARIMA forecasts to Grafana - https://anttihavanko.medium.com/time-series-forecasting-for-prometheus-grafana-with-bigquery-ml-2154f7cd48b5
- Arimax for multivariate - https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/
- PMDARIMA, AUTO_ARIMA - https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html

FORECASTING - SARIMA
- SARIMAX VERY GOOD - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
- SARIMA terminologies (PDQS) - https://365datascience.com/tutorials/python-tutorials/sarimax/
- PMDARIMA, AUTO_ARIMA - https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html

FORECASTING USING R AND PYTHON - 2 PARTS (SEEMS VERY GOOD)
- https://pawarbi.github.io/blog/forecasting/r/python/rpy2/altair/2020/04/21/timeseries-part1.html
- https://pawarbi.github.io/blog/forecasting/r/python/rpy2/altair/fbprophet/ensemble_forecast/uncertainty/simulation/2020/04/21/timeseries-part2.html

SIMPLE FORECASTING
- Using SQL - https://towardsdatascience.com/basic-statistical-forecasting-in-postgresql-c1d38143bb41

AI-ML USE CASES
https://www.projectpro.io/article/machine-learning-use-cases/476
- Fraud/Anomaly detection, classification models: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-1

FAILURE PREDICTION
- https://github.com/fernandodecastilla/Machine-Learning-for-Predictive-Maintenance/tree/master
- https://github.com/abiodun-ayodeji/Predictive-Maintenance
- https://github.com/Impression2805/Awesome-Failure-Detection

- https://www.relataly.com/predictive-maintenance-predicting-machine-failure-with-python/10618/
    https://github.com/flo7up/relataly-public-python-tutorials/blob/master/02%20Classification/022%20Predicting%20Machine%20Malfunction%20of%20Milling%20Machines%20in%20Python.ipynb

- https://h2o.ai/blog/2019/predicting-failures-from-sensor-data-using-ai-ml-part-1/
    https://h2o.ai/blog/2019/predicting-failures-from-sensor-data-using-ai-ml-part-2/
    https://github.com/h2oai/driverlessai-recipes/tree/master/transformers
- https://medium.com/swlh/machine-learning-for-equipment-failure-prediction-and-predictive-maintenance-pm-e72b1ce42da1
- https://mipu.eu/en/case_study/predict-failures-with-machine-learning-real-case-studies/

CORRELATION
Correlation - multiple models:  https://towardsdatascience.com/calculate-similarity-the-most-relevant-metrics-in-a-nutshell-9a43564f533e
Datadog correlation: https://docs.datadoghq.com/dashboards/correlations/ - Datadog searches for other metrics that exhibited anomalous behavior in a time aligned with the area of interest.

** Book: Forecasting: Principles and Practice: https://otexts.com/fpp2/simple-methods.html

TEST DATA GENERATOR
Pandas, Numpy: https://stackoverflow.com/questions/56310849/generate-random-timeseries-data-with-dates
https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html

TIME SERIES FORECASTING
- sklearn good - Random Forest Regressor: https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
--> this is from: Examples of skforecast: https://skforecast.org/0.10.1/index.html  
    (or https://skforecast.org/0.4.3/examples/examples) --> https://skforecast.org/0.4.3/notebooks/save-load-forecaster.html

- sklearn good - Ridge Regressor: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster-exogenous.html
--> similar example as https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html from same author

- sklearn very good - Gradient Boosting: https://cienciadedatos.net/documentos/py39-forecasting-time-series-with-skforecast-xgboost-lightgbm-catboost
    - This predicts upto the end of the dataset itself
    - To actually predict future: https://stackoverflow.com/questions/71833774/how-to-forecast-actual-future-values-using-xgboost


- sklearn good: With seasonality - Ridge Regressor: sklearn, skforecast: https://cienciadedatos.net/documentos/py29-forecasting-electricity-power-demand-python.html
--> this is from: Examples of skforecast: https://skforecast.org/0.10.1/index.html  
    (or https://skforecast.org/0.4.3/examples/examples)

- Histogram Gradient Boost: https://machinelearningmastery.com/histogram-based-gradient-boosting-ensembles/

- Examples of skforecast: https://skforecast.org/0.4.3/examples/examples
- Examples with randomForestRegressor: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html#examples-using-sklearn-ensemble-randomforestregressor

- Keras supervised learning - https://machinelearningmastery.com/how-to-use-the-timeseriesgenerator-for-time-series-forecasting-in-keras/
- Unsupervised - https://builtin.com/data-science/unsupervised-learning-python
- sklearn - scikit learn, multiple types - https://machinelearningmastery.com/make-predictions-scikit-learn/
- Unsupervised various - https://www.askpython.com/python/examples/python-predict-function
- sklearn - https://stackoverflow.com/questions/48884782/how-to-forecast-future-dataframe-using-sklearn-python

LLM
What is LLM:
https://www.analyticsvidhya.com/blog/2023/03/an-introduction-to-large-language-models-llms/#h-what-is-a-large-language-model

Articles:
- Using GPT-J - https://towardsdatascience.com/how-you-can-use-gpt-j-9c4299dd8526

Chunk Size, Chunk Overlap, Tokens:
- https://github.com/hwchase17/langchain/issues/2026
- https://www.pinecone.io/learn/chunking-strategies/
- https://medium.com/@jeevanchavan143/nlp-tokenization-stemming-lemmatization-bag-of-words-tf-idf-pos-7650f83c60be

Context size:
- https://blendingbits.io/p/llm-engineering-context-windows

Free ones:
https://www.listendata.com/2023/03/open-source-chatgpt-models-step-by-step.html#id-06b2ce

Dalai - llama, alpaca:
- Tutorial: https://medium.com/@martin-thissen/llama-alpaca-chatgpt-on-your-local-computer-tutorial-17adda704c23
- Dalai repo: https://github.com/cocktailpeanut/dalai

Alpaca locally:
https://replicate.com/blog/replicate-alpaca

Train with own dataset:
https://www.mlexpert.io/machine-learning/tutorials/alpaca-fine-tuning
- https://github.com/tloen/alpaca-lora

Private LLM: (free)
https://weaviate.io/blog/private-llm
- https://github.com/imartinez/privateGPT
    - Tutorial with venv: https://hackernoon.com/how-to-install-privategpt-a-local-chatgpt-like-instance-with-no-internet-required
- https://github.com/h2oai/h2ogpt

GPT4ALL: (free)
https://gpt4all.io/index.html
- https://docs.gpt4all.io/
- Models (look for model explorer and dropdown): https://gpt4all.io/index.html
- Fine Tuning: https://medium.com/graphcore/fine-tune-gpt-j-a-cost-effective-gpt-4-alternative-for-many-nlp-tasks-67a42f02068d

GPT4All - running it:
Tutorial - https://docs.kanaries.net/articles/gpt4all.en
- https://github.com/nomic-ai/gpt4all

Private GPT: (uses gpt4all)
https://github.com/imartinez/privateGPT
- Private GPT that uses gpt4all
Tutorial: https://bdtechtalks.com/2023/06/01/create-privategpt-local-llm
Training the model - https://levelup.gitconnected.com/training-your-own-llm-using-privategpt-f36f0c4f01ec
Fine Tuning: https://medium.com/graphcore/fine-tune-gpt-j-a-cost-effective-gpt-4-alternative-for-many-nlp-tasks-67a42f02068d

Models:
- https://github.com/eugeneyan/open-llms

Download models (for Private GPT)
- Groovy: https://gpt4all.io/models/ggml-gpt4all-j-v1.3-groovy.bin (model type gpt4all)
- Snoozy:  https://huggingface.co/TheBloke/GPT4All-13B-snoozy-GGML/tree/main (model type gpt4all)
    (https://huggingface.co/TheBloke/GPT4All-13B-snoozy-GGML/blob/main/GPT4All-13B-snoozy.ggmlv3.q8_0.bin)
- Wizardlm: https://huggingface.co/TheBloke/WizardLM-13B-Uncensored-GGML/tree/main (model type gpt4all)

Convert pytorch files to ggml:
- https://github.com/ggerganov/llama.cpp/discussions/1394

H2OGPT:
https://github.com/h2oai/h2ogpt
- llama models: https://huggingface.co/TheBloke

GPT-J VS LLAMA:
https://sapling.ai/llm/gpt-j-vs-llama

LLAMA:
- https://github.com/ggerganov/llama.cpp
- https://github.com/openlm-research/open_llama

LLAMA Models to download (openllama):
- https://huggingface.co/TheBloke/open-llama-13b-open-instruct-GGML/tree/main (ggml)
- https://huggingface.co/SlyEcho/open_llama_7b_ggml/tree/main (ggml?)
- https://huggingface.co/openlm-research/open_llama_13b (pytorch)

MiniGPT:
https://github.com/karpathy/minGPT

Gpt - build your own:
https://jaketae.github.io/study/gpt/
