==============================
BEST SITES
==============================
ML Projects: https://www.geeksforgeeks.org/machine-learning-projects/?ref=lbp
READ THIS FULLY 
- Machine Learning Tutorial: https://www.geeksforgeeks.org/machine-learning/?ref=lbp
	- Random Forest Regressor (SKLearn): https://www.geeksforgeeks.org/random-forest-regression-in-python/
- Machine Learning Algorithms: https://www.geeksforgeeks.org/machine-learning-algorithms/?ref=lbp
	- Anomaly Detection: https://www.geeksforgeeks.org/machine-learning-for-anomaly-detection/?ref=lbp

https://www.machinelearningplus.com/

https://www.projectpro.io/article/machine-learning-use-cases/476
https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
https://www.projectpro.io/article/types-of-machine-learning/623
https://www.projectpro.io/article/why-you-should-learn-machine-learning/362
Naive Bayes: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
--> IMPORTANT - CORRECTION TO DENOMINATOR FOR MULTI-FACTOR: https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1

https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/
https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/

https://machinelearningmastery.com/better-naive-bayes/#Use%20Log%20Probabilities
https://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/
https://machinelearningmastery.com/difference-test-validation-datasets/

https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1
https://stats.stackexchange.com/questions/520866/on-the-denominator-of-bayes-and-naive-bayes
https://stats.stackexchange.com/questions/404487/naive-bayes-computation-of-denominator

https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python
https://www.analyticsvidhya.com/blog/2018/09/non-stationary-time-series-python/

===================
FORECASTING
===================
--------------------
WHAT I TRIED
--------------------
SARIMAX - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
ARIMA - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
NAIVE BAYES - https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
NAIVE BAYES - https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#5naivebayesexamplebyhand
MULTIVARIATE - https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python

PLAYGROUND
https://www.programiz.com/python-programming/online-compiler/
https://programiz.pro/ide/python?utm_source=compiler-nav-save&utm_medium=referral&utm_campaign=programiz

KAGGLE - MANY EXAMPLES
Rainfall in India: https://www.kaggle.com/datasets/rajanand/rainfall-in-india/code
- https://www.kaggle.com/code/darsh79/starter-rainfall-in-india-99bfc809-4
Datasets: https://www.kaggle.com/datasets

SKLEARN
- All regressors: https://scikit-learn.org/stable/supervised_learning.html
- Random Forest vs Histogram Gradient Boost: https://scikit-learn.org/stable/auto_examples/ensemble/plot_forest_hist_grad_boosting_comparison.html

TYPES OF MACHINE LEARNING
https://www.projectpro.io/article/types-of-machine-learning/623

XGBOOST 
- Python XGBoost for classification/predictive maintenance - https://github.com/fernandodecastilla/Machine-Learning-for-Predictive-Maintenance/blob/master/Anomaly%20Prediction%20models/cls_balanced_models/best_model_code_precision_0.9082.py
- XGBoost - https://www.datacamp.com/tutorial/xgboost-in-python
- XGBoost regression/prediction - https://machinelearningmastery.com/xgboost-for-regression/

EVENT FORECAST 
- XGBoost: https://towardsdatascience.com/forecasting-of-periodic-events-with-ml-5081db493c46 --> DID NOT WORK VERY WELL FOR ST-PG DATA, NEED TO TRY AGAIN

NAIVE BAYES
- Theory: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-11
--> IMPORTANT - CORRECTION TO DENOMINATOR FOR MULTI-FACTOR: https://stats.stackexchange.com/questions/66079/naive-bayes-classifier-gives-a-probability-greater-than-1

- Doc: Sklearn package GaussianNB: https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html
    - Research paper: http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf

- Research paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5203736/

- Good example with Python and R: https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#5naivebayesexamplebyhand

- Good example: https://www.geeksforgeeks.org/naive-bayes-classifiers/ (This eliminates denominator and normalizes the tiny fractional probability values obtained)

- Improve Naive Bayes 
    - https://www.baeldung.com/cs/naive-bayes-classification-performance
    - https://machinelearningmastery.com/better-naive-bayes/#Use%20Log%20Probabilities
    - https://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/

FAQ - https://machinelearningmastery.com/faq/single-faq/how-to-develop-forecast-models-for-multiple-sites/

MULTIVARIATE ANALYSIS - FORECASTING
https://www.analyticsvidhya.com/blog/2018/09/multivariate-time-series-guide-forecasting-modeling-python-codes/#Univariate_Vs._Multivariate_Time_Series_Forecasting_Python

SKLearn models: https://towardsdatascience.com/multiple-series-forecast-them-together-with-any-sklearn-model-96319d46269

With arimax: https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/

House price forecast (using SVM): https://www.geeksforgeeks.org/house-price-prediction-using-machine-learning-in-python/
- This turned out good with Random Forest Regressor mentioned in it

SAP multivariate model: https://blogs.sap.com/2021/05/06/a-multivariate-time-series-modeling-and-forecasting-guide-with-python-machine-learning-client-for-sap-hana/

Keras sequential:
- https://machinelearningmastery.com/deep-learning-models-for-multi-output-regression/

MULTIOUTPUT
- https://machinelearningmastery.com/deep-learning-models-for-multi-output-regression/

FORECASTING - 11 MODELS CHEAT SHEET
https://machinelearningmastery.com/time-series-forecasting-methods-in-python-cheat-sheet/

FORECASTING - ARIMA
- VERY GOOD - https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/
    statsmodels.tsa.arima.model.ARIMA -->
    statsmodels.tsa.arima.model.ARIMA.fit -->
    statsmodels.tsa.arima.model.ARIMAResults --> forecast, predict etc
    Another similar - https://stackoverflow.com/questions/31690134/python-statsmodels-help-using-arima-model-for-time-series
    Alpha is not available in statsmodels 14 arima forecast unlike in the example: https://stackoverflow.com/questions/64277905/statsmodels-arima-how-to-get-confidence-prediction-interval
    To find p and q - https://blog.devgenius.io/finding-optimal-p-d-and-q-values-for-your-arima-model-94669a909a35
    To plot forecast values - https://www.statsmodels.org/stable/examples/notebooks/generated/statespace_forecasting.html
- https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/
- Good - https://www.statsmodels.org/dev/examples/notebooks/generated/statespace_sarimax_stata.html
- ** Sending ARIMA forecasts to Grafana - https://anttihavanko.medium.com/time-series-forecasting-for-prometheus-grafana-with-bigquery-ml-2154f7cd48b5
- Arimax for multivariate - https://barnesanalytics.com/analyzing-multivariate-time-series-using-arimax-in-python-with-statsmodels/
- PMDARIMA, AUTO_ARIMA - https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html

FORECASTING - SARIMA
- SARIMAX VERY GOOD - https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/
- SARIMA terminologies (PDQS) - https://365datascience.com/tutorials/python-tutorials/sarimax/
- PMDARIMA, AUTO_ARIMA - https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html

FORECASTING - SARIMA, SARIMA with AutoARIMA - also, uses a different package for the second one
- Detailed: https://mlpills.dev/time-series/how-to-train-a-sarima-model-step-by-step/

FORECASTING - PROPHET
https://machinelearningmastery.com/time-series-forecasting-with-prophet-in-python/

RANDOM FOREST - SKLEARN
- Forecast: Convert time series forecasting into supervised learning: https://machinelearningmastery.com/random-forest-for-time-series-forecasting/
- Forecast: House values (RF and other): https://www.geeksforgeeks.org/house-price-prediction-using-machine-learning-in-python/
- Forecast - univariate (forecast01 git): Univariate (not sure how this worked as there is no supervised learning input in it): https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
-- seems to be taken from: https://skforecast.org/0.10.1/user_guides/quick-start-skforecast

- Theory - https://cnvrg.io/random-forest-regression/
- Theory: Breakdown of internals with an exaple code: https://www.geeksforgeeks.org/random-forest-regression-in-python/
- Theory/Paper: https://cran.r-project.org/web/packages/MultivariateRandomForest/MultivariateRandomForest.pdf

SKFORECAST - FORECASTERAUTOREG
- https://skforecast.org/0.11.0/
-- https://skforecast.org/0.11.0/api/forecasterautoreg

- Older version, but same exist in v11 also
-- general: https://skforecast.org/0.8.0/api/forecasterautoreg
-- multiseries: https://skforecast.org/0.8.0/api/forecastermultiseries
-- multivariate: https://skforecast.org/0.8.0/api/forecastermultivariate
-- EXOGENOUS VARIABLES: https://skforecast.org/0.8.0/api/forecasterautoreg#skforecast.ForecasterAutoreg.ForecasterAutoreg.ForecasterAutoreg.fit
-- Sarimax: https://skforecast.org/0.8.0/api/forecastersarimax
-- SINGLE VARIABLE / univariate: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster.html
-- EXOGENOUS VARIABLES for single output: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster-exogenous.html

SEASONAL DECOMPOSITION
- https://machinelearningmastery.com/decompose-time-series-data-trend-seasonality/

ADFULLER TEST
- https://www.machinelearningplus.com/time-series/augmented-dickey-fuller-test/

FORECASTING USING R AND PYTHON - 2 PARTS (SEEMS VERY GOOD)
- https://pawarbi.github.io/blog/forecasting/r/python/rpy2/altair/2020/04/21/timeseries-part1.html
- https://pawarbi.github.io/blog/forecasting/r/python/rpy2/altair/fbprophet/ensemble_forecast/uncertainty/simulation/2020/04/21/timeseries-part2.html

SIMPLE FORECASTING
- Using SQL - https://towardsdatascience.com/basic-statistical-forecasting-in-postgresql-c1d38143bb41

AI-ML USE CASES
https://www.projectpro.io/article/machine-learning-use-cases/476
- Fraud/Anomaly detection, classification models: https://www.projectpro.io/article/7-types-of-classification-algorithms-in-machine-learning/435#toc-1

FAILURE PREDICTION
- https://github.com/fernandodecastilla/Machine-Learning-for-Predictive-Maintenance/tree/master
- https://github.com/abiodun-ayodeji/Predictive-Maintenance
- https://github.com/Impression2805/Awesome-Failure-Detection

- https://www.relataly.com/predictive-maintenance-predicting-machine-failure-with-python/10618/
    https://github.com/flo7up/relataly-public-python-tutorials/blob/master/02%20Classification/022%20Predicting%20Machine%20Malfunction%20of%20Milling%20Machines%20in%20Python.ipynb

- https://h2o.ai/blog/2019/predicting-failures-from-sensor-data-using-ai-ml-part-1/
    https://h2o.ai/blog/2019/predicting-failures-from-sensor-data-using-ai-ml-part-2/
    https://github.com/h2oai/driverlessai-recipes/tree/master/transformers
- https://medium.com/swlh/machine-learning-for-equipment-failure-prediction-and-predictive-maintenance-pm-e72b1ce42da1
- https://mipu.eu/en/case_study/predict-failures-with-machine-learning-real-case-studies/

** Book: Forecasting: Principles and Practice: https://otexts.com/fpp2/simple-methods.html

TEST DATA GENERATOR
Pandas, Numpy: https://stackoverflow.com/questions/56310849/generate-random-timeseries-data-with-dates
https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html

TIME SERIES FORECASTING
- sklearn good - Random Forest Regressor: https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html
--> this is from: Examples of skforecast: https://skforecast.org/0.10.1/index.html  
    (or https://skforecast.org/0.4.3/examples/examples) --> https://skforecast.org/0.4.3/notebooks/save-load-forecaster.html

- sklearn good - Ridge Regressor: https://joaquinamatrodrigo.github.io/skforecast/guides/autoregresive-forecaster-exogenous.html
--> similar example as https://cienciadedatos.net/documentos/py27-time-series-forecasting-python-scikitlearn.html from same author

- sklearn very good - Gradient Boosting: https://cienciadedatos.net/documentos/py39-forecasting-time-series-with-skforecast-xgboost-lightgbm-catboost
    - This predicts upto the end of the dataset itself
    - To actually predict future: https://stackoverflow.com/questions/71833774/how-to-forecast-actual-future-values-using-xgboost

- sklearn good: With seasonality - Ridge Regressor: sklearn, skforecast: https://cienciadedatos.net/documentos/py29-forecasting-electricity-power-demand-python.html
--> this is from: Examples of skforecast: https://skforecast.org/0.10.1/index.html  
    (or https://skforecast.org/0.4.3/examples/examples)

- Histogram Gradient Boost: https://machinelearningmastery.com/histogram-based-gradient-boosting-ensembles/

- Examples of skforecast: https://skforecast.org/0.4.3/examples/examples
- Examples with randomForestRegressor: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html#examples-using-sklearn-ensemble-randomforestregressor

- Keras supervised learning - https://machinelearningmastery.com/how-to-use-the-timeseriesgenerator-for-time-series-forecasting-in-keras/
- Unsupervised - https://builtin.com/data-science/unsupervised-learning-python
- sklearn - scikit learn, multiple types - https://machinelearningmastery.com/make-predictions-scikit-learn/
- Unsupervised various - https://www.askpython.com/python/examples/python-predict-function
- sklearn - https://stackoverflow.com/questions/48884782/how-to-forecast-future-dataframe-using-sklearn-python

======================================
DATA PRE-PROCESSING
======================================
OneHotEncoding - https://www.geeksforgeeks.org/ml-one-hot-encoding-of-datasets-in-python/?ref=lbp

======================================
ACCURACY METRICS FOR MODELS
======================================
Classification model accuracy:
- https://www.analyticsvidhya.com/blog/2021/07/metrics-to-evaluate-your-classification-model-to-take-the-right-decisions/

Regression model accuracy:
- https://www.geeksforgeeks.org/regression-metrics/

===================
CORRELATION
===================
Correlation - multiple models:  https://towardsdatascience.com/calculate-similarity-the-most-relevant-metrics-in-a-nutshell-9a43564f533e
Good basic coefficients using Python: https://realpython.com/numpy-scipy-pandas-correlation-python/
Datadog correlation: https://docs.datadoghq.com/dashboards/correlations/ - Datadog searches for other metrics that exhibited anomalous behavior in a time aligned with the area of interest.

===================
EVENT CORRELATION
===================
- ARTICLES
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8588274/
https://wires.onlinelibrary.wiley.com/doi/10.1002/widm.1346
https://www.bigpanda.io/blog/event-correlation/
https://sciencelogic.com/blog/event-correlation-101-why-it-matters-and-why-its-not-enough
	- https://sciencelogic.com/blog/how-to-normalize-data
https://en.wikipedia.org/wiki/Event_correlation
Log reduction/compression: https://arxiv.org/pdf/2309.09479.pdf

Log parsng using LLM:
- https://www.zebrium.com/blog/using-gpt-3-with-zebrium-for-plain-language-incident-root-cause-from-logs
- https://arxiv.org/abs/2310.01796

Unstructured data: 
- https://www.analyticsvidhya.com/blog/2021/08/implementing-artificial-neural-network-on-unstructured-data/
	- Based on artifical neural network: https://www.analyticsvidhya.com/blog/2021/05/beginners-guide-to-artificial-neural-network/
- https://cloud.google.com/blog/products/data-analytics/how-to-apply-machine-learning-to-unstructured-data-using-bigqueryml/

- PAID TOOLS
Solarwinds: https://www.solarwinds.com/security-event-manager/use-cases/event-correlation
Splunk: https://www.splunk.com/en_us/pdfs/tech-brief/splunk-event-correlation-tech-brief.pdf

- PACKAGES
scikit-event-correlation 1.0.2 
	- https://pypi.org/project/scikit-event-correlation/
	- https://github.com/Intellia-SME/scikit-event-correlation/tree/main/example

========
LLM
========

NLP understand:	
https://www.analyticsvidhya.com/blog/2017/01/ultimate-guide-to-understand-implement-natural-language-processing-codes-in-python

Quick tutorials:
- https://blog.streamlit.io/langchain-tutorial-1-build-an-llm-powered-app-in-18-lines-of-code/
- https://www.analyticsvidhya.com/blog/2023/03/an-introduction-to-large-language-models-llms/#h-what-is-a-large-language-model
- https://huggingface.co/learn/nlp-course/chapter1/3?fw=pt

Courses:
- Huggingface NLP course: https://huggingface.co/learn/nlp-course/chapter0/1

What is LLM:
Super theory: 
https://medium.com/@saschametzger/what-are-tokens-vectors-and-embeddings-how-do-you-create-them-e2a3e698e037
https://www.lesswrong.com/posts/pHPmMGEMYefk9jLeh/llm-basics-embedding-spaces-transformer-token-vectors-are

Very good: https://resources.nvidia.com/en-us-large-language-model-ebooks/llm-ebook-part1
           https://resources.nvidia.com/en-us-large-language-model-ebooks/llm-ebook-part2
https://www.analyticsvidhya.com/blog/2023/03/an-introduction-to-large-language-models-llms/#h-what-is-a-large-language-model (also has code)
Tokens and Parameters, Temperature etc: https://txt.cohere.com/llm-parameters-best-outputs-language-ai/
Parameters etc.: https://medium.com/@greg.broadhead/a-brief-guide-to-llm-numbers-parameter-count-vs-training-size-894a81c9258
Embeddings: https://pub.aimind.so/llm-embeddings-explained-simply-f7536d3d0e4b
Tokenizers: https://medium.com/@michaelhumor/understanding-tokens-and-tokenization-in-large-language-models-1058cd24b944
Tokenizers (with code): https://huggingface.co/docs/transformers/main/en/llm_tutorial
Tokenizers (with code): https://medium.com/@awaldeep/hugging-face-understanding-tokenizers-1b7e4afdb154
Chunking and overlapping: https://www.pinecone.io/learn/chunking-strategies/
RAG - Retrieval Augmented Generation: https://llmstack.ai/blog/retrieval-augmented-generation

LLM vs knowledge base:
- https://medium.com/@machangsha/llm-as-knowledge-base-v-s-llm-with-knowledge-retrieval-e5812d3f336

About Various Models:
- LLAMA:
	- https://ai.meta.com/blog/large-language-model-llama-meta-ai/
		- Model card: https://github.com/facebookresearch/llama/blob/main/MODEL_CARD.md
		- Paper: https://arxiv.org/abs/2302.13971 --> https://arxiv.org/pdf/2302.13971.pdf

Articles:
- Using GPT-J - https://towardsdatascience.com/how-you-can-use-gpt-j-9c4299dd8526

Chunk Size, Chunk Overlap, Tokens:
- https://github.com/hwchase17/langchain/issues/2026
- https://www.pinecone.io/learn/chunking-strategies/
- https://medium.com/@jeevanchavan143/nlp-tokenization-stemming-lemmatization-bag-of-words-tf-idf-pos-7650f83c60be

Context size:
- https://blendingbits.io/p/llm-engineering-context-windows

Free ones:
https://www.listendata.com/2023/03/open-source-chatgpt-models-step-by-step.html#id-06b2ce
https://www.simform.com/blog/open-source-llm/

Dalai - llama, alpaca:
- Tutorial: https://medium.com/@martin-thissen/llama-alpaca-chatgpt-on-your-local-computer-tutorial-17adda704c23
- Dalai repo: https://github.com/cocktailpeanut/dalai

Alpaca locally:
https://replicate.com/blog/replicate-alpaca

Train with own dataset:
https://www.mlexpert.io/machine-learning/tutorials/alpaca-fine-tuning
- https://github.com/tloen/alpaca-lora

*** Private LLM: (free)
https://weaviate.io/blog/private-llm
- https://github.com/imartinez/privateGPT
    - Tutorial with venv: https://hackernoon.com/how-to-install-privategpt-a-local-chatgpt-like-instance-with-no-internet-required
    - Forked one with better documentation: https://github.com/vkrit/privateChatGPT
        Documentation is being updated:
        - ISSUE AND UPDATED DOC: https://github.com/imartinez/privateGPT/issues/1276
          PER THIS BEING-UPDATED DOCUMENTATION:
                    We are currently working on refactoring the documentation, but in a nutshell, to install this on macos:
        
                    # One liner to install
                    git clone https://github.com/imartinez/privateGPT && cd privateGPT && \
                    python3.11 -m venv .venv && source .venv/bin/activate && \
                    pip install --upgrade pip poetry && poetry install --with ui,local && ./scripts/setup
        
                    # Patch the version of `llama-cpp-python` installed to add metal support
                    # This have to run with inside your python venv !
                    CMAKE_ARGS="-DLLAMA_METAL=on" pip install --force-reinstall --no-cache-dir llama-cpp-python
        
                    c.f. https://privategpt-preview-8380d3f2-962a-400e-87d4-fd1c4636f174.docs.buildwithfern.com/overview/welcome/quickstart
                    python3.11 -m private_gpt

    More on how to use privategpt: https://www.reddit.com/r/LocalLLaMA/comments/155zclb/training_an_llm_on_multiple_documents_first_steps/

    Private GPT: (uses gpt4all)
    https://github.com/imartinez/privateGPT
    - Private GPT that uses gpt4all
    Tutorial: https://bdtechtalks.com/2023/06/01/create-privategpt-local-llm
    Training the model - https://levelup.gitconnected.com/training-your-own-llm-using-privategpt-f36f0c4f01ec
    Fine Tuning: https://medium.com/graphcore/fine-tune-gpt-j-a-cost-effective-gpt-4-alternative-for-many-nlp-tasks-67a42f02068d

H2OGPT:
https://github.com/h2oai/h2ogpt
- llama models: https://huggingface.co/TheBloke

GPT4ALL: (free)
https://gpt4all.io/index.html
- https://docs.gpt4all.io/
- Models (look for model explorer and dropdown): https://gpt4all.io/index.html
- Fine Tuning: https://medium.com/graphcore/fine-tune-gpt-j-a-cost-effective-gpt-4-alternative-for-many-nlp-tasks-67a42f02068d

GPT4All - running it:
Tutorial - https://docs.kanaries.net/articles/gpt4all.en
- https://github.com/nomic-ai/gpt4all

H2OAI
- https://github.com/h2oai/h2ogpt

Models:
- https://github.com/eugeneyan/open-llms

Download models (for Private GPT)
- Groovy: https://gpt4all.io/models/ggml-gpt4all-j-v1.3-groovy.bin (model type gpt4all)
- Snoozy:  https://huggingface.co/TheBloke/GPT4All-13B-snoozy-GGML/tree/main (model type gpt4all)
    (https://huggingface.co/TheBloke/GPT4All-13B-snoozy-GGML/blob/main/GPT4All-13B-snoozy.ggmlv3.q8_0.bin)
- Wizardlm: https://huggingface.co/TheBloke/WizardLM-13B-Uncensored-GGML/tree/main (model type gpt4all)

Convert pytorch files to ggml:
- https://github.com/ggerganov/llama.cpp/discussions/1394

GPT-J VS LLAMA:
https://sapling.ai/llm/gpt-j-vs-llama

LLAMA:
- https://github.com/ggerganov/llama.cpp
- https://github.com/openlm-research/open_llama

LLAMA Models to download (openllama):
- https://huggingface.co/TheBloke/open-llama-13b-open-instruct-GGML/tree/main (ggml)
- https://huggingface.co/SlyEcho/open_llama_7b_ggml/tree/main (ggml?)
- https://huggingface.co/openlm-research/open_llama_13b (pytorch)

MiniGPT:
https://github.com/karpathy/minGPT

LLM for AIOPS
- https://www.linkedin.com/pulse/bertops-large-language-model-aiops-debanjana-kar

==================================
DATASETS FOR LLM, FORECAST, PREDICT
===================================
https://dzone.com/articles/free-datasets-for-machine-learning-and-deep-learning

===================================
CREATE OWN LLM
===================================
Building/Training own LLM:
- From scratch - https://www.freecodecamp.org/news/how-to-build-a-large-language-model-from-scratch-using-python/
- Not fully from scratch: https://bdtechtalks.com/2023/05/01/customize-chatgpt-llm-embeddings/
- From scratch - video - https://huggingface.co/learn/nlp-course/chapter7/6 
- How to Create Your Local LLM Model: https://thomascherickal.medium.com/how-to-create-your-own-llm-model-2598615a039a

Gpt - build your own: https://jaketae.github.io/study/gpt/
--> Very from scratch, NOT COMPLETE either

LLAMA LOCALLY
https://medium.com/@zekaouinoureddine/bring-your-own-data-to-llms-using-langchain-llamaindex-3ddbac8cc9eb
https://medium.com/@fvanlitsenburg/building-a-private-gpt-with-haystack-part-3-using-llama-2-with-ggml-c2d994da40da
https://app.baseten.co/explore/llama_2_7b_chat
https://www.reddit.com/r/LocalLLaMA/comments/155zclb/training_an_llm_on_multiple_documents_first_steps/

PRIVATE LLM
https://bdtechtalks.com/2023/05/01/customize-chatgpt-llm-embeddings/ --> talks about langchain to develop from scratch
https://weaviate.io/blog/private-llm
https://www.superannotate.com/blog/llm-fine-tuning

Tuning 20B model: https://huggingface.co/blog/trl-peft
Custom Training of Large Language Models (LLMs): A Detailed Guide With Code Samples: https://dzone.com/articles/custom-training-of-large-language-models-a-compreh

===================================
LANGCHAIN
===================================
https://nanonets.com/blog/langchain/ 
Tutorial with openai: https://www.sitepoint.com/langchain-python-complete-guide/
Local LLMS: https://python.langchain.com/docs/guides/local_llms
Llama: https://python.langchain.com/docs/integrations/llms/llamacpp
RAG (doc ingestion):
- https://python.langchain.com/docs/use_cases/question_answering/
- https://python.langchain.com/docs/use_cases/question_answering/local_retrieval_qa
Vector Stores: 
- Chroma: https://python.langchain.com/docs/integrations/vectorstores/chroma
SQL: https://python.langchain.com/docs/use_cases/qa_structured/sql
API: https://python.langchain.com/docs/use_cases/apis
Tutorials: https://python.langchain.com/docs/additional_resources/tutorials
https://learn.deeplearning.ai/langchain-chat-with-your-data/lesson/1/introduction

Different LLLs with RAG: https://python.langchain.com/docs/use_cases/question_answering/local_retrieval_qa
Llama with RAG chatbot: https://medium.com/@madhur.prashant7/demo-langchain-rag-demo-on-llama-2-7b-embeddings-model-using-chainlit-559c10ce3fbf
Llama with RAG chatbot: https://blogs.oracle.com/ai-and-datascience/post/ai-chatbot-llama2-qdrant-rag-langchain-streamlit
