======================================
AWS CLI CONFIGURATION
======================================
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html

NOTE
Do not use the AWS account root user access keys for any task where it's not required. 
Instead, create a new administrator IAM user with access keys for yourself.

=====================
ACTUAL STEPS
=====================
# aws configure
AWS Access Key ID [****************MPLE]: AKIAUPH.......
AWS Secret Access Key [****************EKEY]: zABuly6.......................
Default region name [us-west-s]: ap-south-1 (mumbai)
Default output format [json]: json

# cd /root/.aws
# ls -l
total 8
-rw------- 1 root root  44 Oct  5 10:01 config
-rw------- 1 root root 116 Oct  5 10:01 credentials

# cat config
[default]
region = ap-south-1
output = json

# cat cre*
[default]
aws_access_key_id = AKIAUPH.......
aws_secret_access_key = zABuly6.......................


=====================
FROM AMAZON DOCUMENT
=====================

================
CREATE IAM USER
================
https://console.aws.amazon.com/iam
Username: iam1

Access type --> chose both
- Programmatic access
Enables an access key ID and secret access key for the AWS API, CLI, SDK, and other development tools.
- AWS Management Console access
Enables a password that allows users to sign-in to the AWS Management Console.

Console PW - custom pw 

Then some more stuff and you will have the user key and secret generated.

------------
CONFIGURE
------------
$ aws configure
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE
AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
Default region name [None]: us-west-2
Default output format [None]: json

Profiles
A collection of settings is called a profile. By default, the AWS CLI uses the default profile. 
You can create and use additional named profiles with varying credentials and settings by specifying the --profile option and assigning a name.

The following example creates a profile named produser.

$ aws configure --profile produser
AWS Access Key ID [None]: AKIAI44QH8DHBEXAMPLE
AWS Secret Access Key [None]: je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY
Default region name [None]: us-east-1
Default output format [None]: text
You can then specify a --profile profilename and use the credentials and settings stored under that name.

$ aws s3 ls --profile produser

To update these settings, run aws configure again (with or without the --profile parameter, depending on which profile you want to update) and enter new values as appropriate. The next sections contain more information about the files that aws configure creates, additional settings, and named profiles.

For more information on named profiles, see Named profiles.

Configuration settings and precedence
The AWS CLI uses credentials and configuration settings located in multiple places, such as the system or user environment variables, local AWS configuration files, or explicitly declared on the command line as a parameter. Certain locations take precedence over others. The AWS CLI credentials and configuration settings take precedence in the following order:

Command line options – Overrides settings in any other location. You can specify --region, --output, and --profile as parameters on the command line.

Environment variables – You can store values in your system's environment variables.

CLI credentials file – The credentials and config file are updated when you run the command aws configure. The credentials file is located at ~/.aws/credentials on Linux or macOS, or at C:\Users\USERNAME\.aws\credentials on Windows. This file can contain the credential details for the default profile and any named profiles.

CLI configuration file – The credentials and config file are updated when you run the command aws configure. The config file is located at ~/.aws/config on Linux or macOS, or at C:\Users\USERNAME\.aws\config on Windows. This file contains the configuration settings for the default profile and any named profiles.

Container credentials – You can associate an IAM role with each of your Amazon Elastic Container Service (Amazon ECS) task definitions. Temporary credentials for that role are then available to that task's containers. For more information, see IAM Roles for Tasks in the Amazon Elastic Container Service Developer Guide.

Instance profile credentials – You can associate an IAM role with each of your Amazon Elastic Compute Cloud (Amazon EC2) instances. Temporary credentials for that role are then available to code running in the instance. The credentials are delivered through the Amazon EC2 metadata service. For more information, see IAM Roles for Amazon EC2 in the Amazon EC2 User Guide for Linux Instances and Using Instance Profiles in the IAM User Guide.

=======================
ENVIRONMENT VARIABLES
=======================
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html

Linux
$ export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
$ export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
$ export AWS_DEFAULT_REGION=us-west-2

Windows
C:\> setx AWS_ACCESS_KEY_ID AKIAIOSFODNN7EXAMPLE
C:\> setx AWS_SECRET_ACCESS_KEY wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
C:\> setx AWS_DEFAULT_REGION us-west-2

=========================
MORE TOPICS/SETTINGS
=========================
Configuration files: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html
Named profiles: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html
Single Signon: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html
Command line options: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html

Powershell
PS C:\> $Env:AWS_ACCESS_KEY_ID="AKIAIOSFODNN7EXAMPLE"
PS C:\> $Env:AWS_SECRET_ACCESS_KEY="wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
PS C:\> $Env:AWS_DEFAULT_REGION="us-west-2"

