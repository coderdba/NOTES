eBPF
IoVisor company - gobpf?
Many are writing wrappers around ebpf/bpf

eBPF Probes:
	- User probe - u-probe
	- Kernel probe - k-probe
	- Static - http/uhttp?
	- Trace Point

From Oreilly book:
	- Kernel probes
		○ These give you dynamic access to internal components in the kernel.
	- Tracepoints
		○ These provide static access to internal components in the kernel.
	- User-space probes
		○ These give you dynamic access to programs running in user-space.
	- User statically defined tracepoints
		○ These allow static access to programs running in user-space.


JMX - open that port in the docker container of java programs and do profiling remotely

Tracee - another tracer tooling


About BPF:
	- https://ebpf.io/what-is-ebpf/ --> official
	- https://en.wikipedia.org/wiki/Berkeley_Packet_Filter
	- https://en.wikipedia.org/wiki/OSI_model
	- https://en.wikipedia.org/wiki/Data_link_layer
	- https://en.wikipedia.org/wiki/Promiscuous_mode

Go-BPF:
	- https://github.com/iovisor/gobpf
	- https://pkg.go.dev/golang.org/x/net/bpf#pkg-overview

Books/Resources:
	- 
	- https://www.oreilly.com/library/view/linux-observability-with/9781492050193/ch04.html
	- https://www.linuxjournal.com/content/bpf-observability-getting-started-quickly
	- https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/network-tracing-using-the-bpf-compiler-collection_configuring-and-managing-networking --> many quick practical commands of bcc
        - https://ebpf.io/what-is-ebpf/ --> installing bcc-tools
	- ivisor bcc: https://github.com/iovisor/bcc/blob/master/INSTALL.md#centos---source --> Install bcc from source

Tutorial of bcc commands: https://github.com/iovisor/bcc/blob/master/docs/tutorial.md
Many commands: https://github.com/iovisor/bcc
