================================================
WORKING WITH ELASTIC DATABASE
================================================

https://mindmajix.com/elasticsearch/curl-syntax-with-examples
https://mindmajix.com/elasticsearch/curl-syntax-with-examples#node-js-example
https://mindmajix.com/elasticsearch/retrieving-multiple-documents-elasticsearch-multi-get

https://kb.objectrocket.com/elasticsearch/how-to-return-all-documents-from-an-index-in-elasticsearch
https://stackoverflow.com/questions/8829468/elasticsearch-query-to-return-all-records

https://www.elastic.co/guide/en/welcome-to-elastic/8.8/getting-started-general-purpose.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.17/getting-started.html 

================================================
ADD A DOCUMENT USING POSTMAN
================================================
NOTE: This only creates a document definition - like a table definition.  Later need to add data.

https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started.html#add-single-document

---------------------
NEW EMPTY INDEX
---------------------
PUT https://localhost:9200/my1 --> my1 is the new index
Disable ssl in settings
Choose Basic Auth in Authorization and enter username and password
Body: None

Response:
{
    "acknowledged": true,
    "shards_acknowledged": true,
    "index": "my1"
}

-VERIFY
Note that it is showing yellow status because it does not have shards/replicas defined etc
- https://www.elkman.io/blog/elasticsearch-index-red-yellow-why

https://localhost:9200/_cat/indices
green  open .internal.alerts-observability.metrics.alerts-default-000001 gjPOSbkfT2On56ESZODaWw 1 0 0 0 247b 247b
green  open .internal.alerts-observability.logs.alerts-default-000001    -TobPedKTbSKDTTRYQSW5A 1 0 0 0 247b 247b
yellow open my1                                                          bUp-tbkWThu5S2WwFhVX0w 1 1 0 0 225b 225b
green  open .internal.alerts-observability.uptime.alerts-default-000001  ECu_dbgeQ3iGsQq1o-Ti_Q 1 0 0 0 247b 247b
green  open .fleet-file-data-agent-000001                                7AK6FRBiSteiyQ90EBHaJg 1 0 0 0 247b 247b
green  open .fleet-files-agent-000001                                    2_7IscO1TcGX15vgHC7yDg 1 0 0 0 247b 247b

---------------------------------------
NEW INDEX WITH DATA
---------------------------------------
NOTE- THIS DID NOT WORK YET
https://stackoverflow.com/questions/22882927/how-to-insert-data-into-elasticsearch
curl -H "Content-Type: application/json" -XPOST "http://localhost:9200/indexname/typename/optionalUniqueId" -d "{ \"field\" : \"value\"}"

------------------------------------------
NEW INDEX WITH TYPE _doc
------------------------------------------
NOTE: Use of types like _doc is deprecated: https://stackoverflow.com/questions/35747862/what-does-doc-represents-in-elasticsearch
      https://stackoverflow.com/questions/60907746/when-creating-an-index-what-is-the-point-of-doc-when-defining-the-mapping-of

However, if _doc is not used in the URL, got error - TO OVERCOME, REMOVE _doc from the BODY and also use PUT and not POST
{
    "error": {
        "root_cause": [
            {
                "type": "illegal_argument_exception",
                "reason": "The mapping definition cannot be nested under a type [_doc] unless include_type_name is set to true."
            }
        ],
        "type": "illegal_argument_exception",
        "reason": "The mapping definition cannot be nested under a type [_doc] unless include_type_name is set to true."
    },
    "status": 400
}


Used example from here: https://kb.objectrocket.com/elasticsearch/guide-how-to-add-documents-to-an-index-in-elasticsearch

POST https://localhost:9200/car/_doc --> POST, not PUT
Disable ssl in settings
Choose Basic Auth in Authorization and enter username and password
Body: Raw --> JSON
{
"mappings":{
"_doc": {
"properties": {
"model" : { "type" : "text" },
"year": {"type" : "integer"},
"engine": {"type": "text"},
"star": {"type": "text"}
}
}
}
}

Response:
{
    "_index": "car",
    "_id": "8MxwNYkBd5krLIuUAfMP",
    "_version": 1,
    "result": "created",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 0,
    "_primary_term": 1
}

- VERIFY

green  open .internal.alerts-observability.metrics.alerts-default-000001 gjPOSbkfT2On56ESZODaWw 1 0 0 0  247b  247b
green  open .internal.alerts-observability.logs.alerts-default-000001    -TobPedKTbSKDTTRYQSW5A 1 0 0 0  247b  247b
yellow open my1                                                          bUp-tbkWThu5S2WwFhVX0w 1 1 0 0  247b  247b
yellow open car                                                          ENRUVxZUSIai0PS9EEnfMw 1 1 1 0 6.8kb 6.8kb
green  open .internal.alerts-observability.uptime.alerts-default-000001  ECu_dbgeQ3iGsQq1o-Ti_Q 1 0 0 0  247b  247b
green  open .fleet-file-data-agent-000001                                7AK6FRBiSteiyQ90EBHaJg 1 0 0 0  247b  247b
green  open .fleet-files-agent-000001                                    2_7IscO1TcGX15vgHC7yDg 1 0 0 0  247b  247b
green  open .internal.alerts-security.alerts-default-000001              Hsw68VSsR92IlYLlUUkpOA 1 0 0 0  247b  247b
green  open .internal.alerts-observability.slo.alerts-default-000001     53b80geUTbuiFPaFMu_PgQ 1 0 0 0  247b  247b
green  open .internal.alerts-observability.apm.alerts-default-000001     CY1LJOhySO-7LKi8CZ1vmA 1 0 0 0  247b  247b

------------------------------------------
NEW INDEX without TYPE _doc
------------------------------------------
NOTE: Use of types like _doc is deprecated: https://stackoverflow.com/questions/35747862/what-does-doc-represents-in-elasticsearch
      https://stackoverflow.com/questions/60907746/when-creating-an-index-what-is-the-point-of-doc-when-defining-the-mapping-of

However, if _doc is not used in the URL, got error - TO OVERCOME, REMOVE _doc from the BODY and also use PUT not POST
{
    "error": {
        "root_cause": [
            {
                "type": "illegal_argument_exception",
                "reason": "The mapping definition cannot be nested under a type [_doc] unless include_type_name is set to true."
            }
        ],
        "type": "illegal_argument_exception",
        "reason": "The mapping definition cannot be nested under a type [_doc] unless include_type_name is set to true."
    },
    "status": 400
}


Used example from here: https://kb.objectrocket.com/elasticsearch/guide-how-to-add-documents-to-an-index-in-elasticsearch

PUT https://localhost:9200/bus --> PUT not POST
Disable ssl in settings
Choose Basic Auth in Authorization and enter username and password
Body: Raw --> JSON
{
"mappings":{
"properties": {
"busModel" : { "type" : "text" },
"year": {"type" : "integer"},
"engine": {"type": "text"},
"star": {"type": "text"}
}
}
}

Response:
{
    "acknowledged": true,
    "shards_acknowledged": true,
    "index": "bus"
}

Rerunning PUT causes error:
{
    "error": {
        "root_cause": [
            {
                "type": "resource_already_exists_exception",
                "reason": "index [bus/ywDq3aqRS2uzRfPj4D5Skw] already exists",
                "index_uuid": "ywDq3aqRS2uzRfPj4D5Skw",
                "index": "bus"
            }
        ],
        "type": "resource_already_exists_exception",
        "reason": "index [bus/ywDq3aqRS2uzRfPj4D5Skw] already exists",
        "index_uuid": "ywDq3aqRS2uzRfPj4D5Skw",
        "index": "bus"
    },
    "status": 400
}

- VERIFY
https://localhost:9200/_cat/indices

yellow open bus                                                          ywDq3aqRS2uzRfPj4D5Skw 1 1 0 0  225b  225b
green  open .internal.alerts-observability.metrics.alerts-default-000001 gjPOSbkfT2On56ESZODaWw 1 0 0 0  247b  247b
green  open .internal.alerts-observability.logs.alerts-default-000001    -TobPedKTbSKDTTRYQSW5A 1 0 0 0  247b  247b
yellow open my1                                                          bUp-tbkWThu5S2WwFhVX0w 1 1 0 0  247b  247b
yellow open car                                                          ENRUVxZUSIai0PS9EEnfMw 1 1 1 0 6.9kb 6.9kb
green  open .internal.alerts-observability.uptime.alerts-default-000001  ECu_dbgeQ3iGsQq1o-Ti_Q 1 0 0 0  247b  247b
green  open .fleet-file-data-agent-000001                                7AK6FRBiSteiyQ90EBHaJg 1 0 0 0  247b  247b
green  open .fleet-files-agent-000001                                    2_7IscO1TcGX15vgHC7yDg 1 0 0 0  247b  247b
green  open .internal.alerts-security.alerts-default-000001              Hsw68VSsR92IlYLlUUkpOA 1 0 0 0  247b  247b
green  open .internal.alerts-observability.slo.alerts-default-000001     53b80geUTbuiFPaFMu_PgQ 1 0 0 0  247b  247b
green  open .internal.alerts-observability.apm.alerts-default-000001     CY1LJOhySO-7LKi8CZ1vmA 1 0 0 0  247b  247b

- VERIFY 
https://localhost:9200/bus/

{
    "bus": {
        "aliases": {},
        "mappings": {
            "properties": {
                "busmodel": {
                    "type": "text"
                },
                "engine": {
                    "type": "text"
                },
                "star": {
                    "type": "text"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "settings": {
            "index": {
                "routing": {
                    "allocation": {
                        "include": {
                            "_tier_preference": "data_content"
                        }
                    }
                },
                "number_of_shards": "1",
                "provided_name": "bus",
                "creation_date": "1688822663267",
                "number_of_replicas": "1",
                "uuid": "nwQPQv9XS4yHNJKpBAraqw",
                "version": {
                    "created": "8080299"
                }
            }
        }
    }
}

================================================
ADD DATA TO A DOCUMENT USING POSTMAN
================================================
https://kb.objectrocket.com/elasticsearch/guide-how-to-add-documents-to-an-index-in-elasticsearch

---------------------------
THE INDEX WITH _doc
---------------------------

POST https://localhost:9200/car/_doc
Authorization - basic, with user/pass
Settings - disable ssl to avoid self signed cert exception
Body - raw-->json
{
"model": "sedan",
"year": 2000,
"engine": "1200CC",
"star": "4"
}

Response:
{
    "_index": "car",
    "_id": "9cyXNYkBd5krLIuUJPNr",
    "_version": 1,
    "result": "created",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 1,
    "_primary_term": 1
}

NOTE: Without _doc NEEDS PUT and not POST, and also gives this error:
{
    "error": {
        "root_cause": [
            {
                "type": "parse_exception",
                "reason": "unknown key [star] for create index"
            }
        ],
        "type": "parse_exception",
        "reason": "unknown key [star] for create index"
    },
    "status": 400
}

- VERIFY
https://stackoverflow.com/questions/70176735/query-elasticsearch-index-with-postman-returns-schema

https://localhost:9200/car/_search
{
    "took": 2,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 3,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "car",
                "_id": "9MyUNYkBd5krLIuU8_O_",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car",
                "_id": "9cyXNYkBd5krLIuUJPNr",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4"
                }
            },
            {
                "_index": "car",
                "_id": "9syYNYkBd5krLIuUMvP9",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 3000,
                    "engine": "3200CC",
                    "star": "4"
                }
            }
        ]
    }
}

---------------------------
THE INDEX WITHOUT _doc
---------------------------
PUT https://localhost:9200/bus --> This fails
POST https://localhost:9200/bus/_doc/1 --> This works (POST and adding an id)
POST https://localhost:9200/bus/_doc --> This works (POST and without adding an id --> gives a system generated ID)
Body:
{
"busmodel": "mini bus",
"year": 1980,
"engine": "4200cc",
"star": "3"
}

Response: with PUT
{
    "error": {
        "root_cause": [
            {
                "type": "parse_exception",
                "reason": "unknown key [busmodel] for create index"
            }
        ],
        "type": "parse_exception",
        "reason": "unknown key [busmodel] for create index"
    },
    "status": 400
}

Response: with POST, _doc and added ID 
{
    "_index": "bus",
    "_id": "1",
    "_version": 1,
    "result": "created",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 0,
    "_primary_term": 1
}

Response: with POST, _doc and NO added ID 
{
    "_index": "bus",
    "_id": "_syzNYkBd5krLIuUE_O_",
    "_version": 1,
    "result": "created",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 6,
    "_primary_term": 1
}

- UPDATE A RECORD
PUT https://localhost:9200/bus/_doc/1 --> where 1 is the ID

Response:
{
    "_index": "bus",
    "_id": "1",
    "_version": 3,
    "result": "updated",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 7,
    "_primary_term": 1
}

===================================
DELETE AN INDEX WITH POSTMAN
===================================
DELETE https://localhost:9200/car
DELETE https://localhost:9200/bus

================================================
ADD MORE FIELDS USING POSTMAN - with _doc
================================================
NOTE - CAUTION - DOING POST WITHOUT AN ID WILL CREATE ANOTHER INDEX OF THE SAME NAME 
- same index, but different ID --> AND, THE PREVIOUSLY CREATED INDEX IS ALSO KEPT
- even if the fields are the same

Look the previous ID's and new ID up using: https://localhost:9200/car/_search

---------------------------------------------
ADDING ANOTHER INDEX-ID IN THE SAME INDEX
---------------------------------------------
POST https://localhost:9200/car/_doc
Body: 
{
"mappings":{
"_doc": {
"properties": {
"model" : { "type" : "text" },
"year": {"type" : "integer"},
"engine": {"type": "text"},
"star": {"type": "text"},
"something": {"type": "text"}
}
}
}
}
Response: --> same index, but different ID --> AND, THE PREVIOUSLY CREATED INDEX IS ALSO KEPT
{
    "_index": "car",
    "_id": "BMzoNYkBd5krLIuU6_TR",
    "_version": 1,
    "result": "created",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 14,
    "_primary_term": 1
}

- VERIFY: https://localhost:9200/car/_search
{
    "took": 76,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 9,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "car",
                "_id": "AMzgNYkBd5krLIuULPR4",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "manufacturer": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car",
                "_id": "AczgNYkBd5krLIuU9fTM",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "manufacturer": {
                                    "type": "text"
                                },
                                "showroom": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car",
                "_id": "9MyUNYkBd5krLIuU8_O_",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car",
                "_id": "A8zhNYkBd5krLIuUivQ6",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car",
                "_id": "9cyXNYkBd5krLIuUJPNr",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4"
                }
            },
            {
                "_index": "car",
                "_id": "9syYNYkBd5krLIuUMvP9",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 3000,
                    "engine": "3200CC",
                    "star": "4"
                }
            },
            {
                "_index": "car",
                "_id": "-MyiNYkBd5krLIuUovOJ",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 3000,
                    "engine": "3200CC",
                    "star": "4"
                }
            },
            {
                "_index": "car",
                "_id": "1",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 3000,
                    "engine": "3200CC",
                    "star": "4"
                }
            },
            {
                "_index": "car",
                "_id": "BMzoNYkBd5krLIuU6_TR",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            }
        ]
    }
}

-----------------------
ADD MORE FIELDS
-----------------------
PUT (OR POST) https://localhost:9200/car/_doc/A8zhNYkBd5krLIuUivQ6 --> the last value is the ID of the index
Body:
{
"mappings":{
"_doc": {
"properties": {
"model" : { "type" : "text" },
"year": {"type" : "integer"},
"engine": {"type": "text"},
"star": {"type": "text"},
"manufacturer": {"type": "text"}, --> new field
"country": {"type": "text"} --> new field
}
}
}
}

-----------------------
REMOVE A FIELD
-----------------------
PUT (OR POST) https://localhost:9200/car/_doc/A8zhNYkBd5krLIuUivQ6 --> the last value is the ID of the index
Body:
{
"mappings":{
"_doc": {
"properties": {
"model" : { "type" : "text" },
"year": {"type" : "integer"},
"engine": {"type": "text"},
"star": {"type": "text"},
"manufacturer": {"type": "text"} --> new field previously added kept, and the other one removed
}
}
}
}

==========================================
ADD DATA TO INDEX WITH MULTIPLE INDEX-ID'S
==========================================

-------------------------------
WITHOUT SPECIFYING INDEX ID
-------------------------------
POST https://localhost:9200/car/_doc
Body:
{
    "_index": "car",
    "_id": "BcztNYkBd5krLIuUR_Ss",
    "_version": 1,
    "result": "created",
    "_shards": {
        "total": 2,
        "successful": 1,
        "failed": 0
    },
    "_seq_no": 15,
    "_primary_term": 1
}

Result: 
- It will find the index-id with the correct fields and insert there

Verify:
            {
                "_index": "car",
                "_id": "BMzoNYkBd5krLIuU6_TR",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car",
                "_id": "BcztNYkBd5krLIuUR_Ss",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 3000,
                    "engine": "3200CC",
                    "star": "4",
                    "something": "abc"
                }
            }



=======================================
PECULIAR CASES
=======================================
If a 'car' is created again with POST with mappings, with the same mappings as an existing mapping
- It creates another index-id (_id)
- It shows up in  GET car/_search (but, it sometimes did not seem to show up)
- GET on https://localhost:9200/car does not show the individual _IDs but will show various fields in different _ID's together

- You can add data to specific _ID - but only one record gets created
- Subsequent POST/PUT will only update that record and not add new records under that ID
- However, it will not accept child records - any more PUT/POST will only update that one record

- THIS IS REALLY CRAZY:
- Though created with "mappings" first with each field with a datatype etc 
-- later to the same 'id' adding another record will replace those 'mappings' (when queried with _search) and will show up just as a record. 
-- So, the thought that 'child' record gets created is wrong!!

-- LATER, suppose we add a new record, with no mappings, but additional fields, it shows up in _search
--> BUT, THOSE FIELDS ALSO GO TO MAPPINGS!!

- HOWEVER, https://localhost:9200/car3/_mapping shows all such various stuff we did in MAPPINGS!!!

--> SO, PROBABLY, ALL MAPPINGS are stored for a given index, so that we can search based on those mappings
--> HOWEVER, some fields are mentioned twice, some only once - though multiple versions of same index were created

--> EVEN IF FIELDS ARE COMPLETELY DIFFERENT, IT IS OK TO STORE IN THE SAME INDEX!

https://localhost:9200/car3/_mapping
{
    "car3": {
        "mappings": {
            "properties": {
                "a1": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "a2": {
                    "type": "long"
                },
                "a3": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "a4": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "crazything": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "engine": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "mappings": {
                    "properties": {
                        "_doc": {
                            "properties": {
                                "properties": {
                                    "properties": {
                                        "crazy1": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "engine": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "model": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "onemorething": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "something": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "star": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "year": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "yetanotherthing": {
                                            "properties": {
                                                "type": {
                                                    "type": "text",
                                                    "fields": {
                                                        "keyword": {
                                                            "type": "keyword",
                                                            "ignore_above": 256
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "model": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "onemorething": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "something": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "star": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "whatisthisthing": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                },
                "year": {
                    "type": "long"
                },
                "yetanotherthing": {
                    "type": "text",
                    "fields": {
                        "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                        }
                    }
                }
            }
        }
    }
}

----
https://localhost:9200/car3/_search

{
    "took": 0,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 6,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "car3",
                "_id": "F8wLNokBd5krLIuU4PTd",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "abcd",
                    "onemorething": "abcd",
                    "yetanotherthing": "abcd"
                }
            },
            {
                "_index": "car3",
                "_id": "GMwSNokBd5krLIuUJ_Qk",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                },
                                "onemorething": {
                                    "type": "text"
                                },
                                "yetanotherthing": {
                                    "type": "text"
                                },
                                "crazy1": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car3",
                "_id": "FcwKNokBd5krLIuU8fTl",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "whatisthisthing": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GcwWNokBd5krLIuUZ_TW",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "crazything": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GswaNokBd5krLIuUDvST",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "G8wbNokBd5krLIuUVfTN",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            }
        ]
    }
}

-- ADD ANOTHER RECORD EXACTLY AS A MAPPING
AND, AGAIN GET _search

{
    "took": 857,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 7,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "car3",
                "_id": "F8wLNokBd5krLIuU4PTd",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "abcd",
                    "onemorething": "abcd",
                    "yetanotherthing": "abcd"
                }
            },
            {
                "_index": "car3",
                "_id": "GMwSNokBd5krLIuUJ_Qk",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                },
                                "onemorething": {
                                    "type": "text"
                                },
                                "yetanotherthing": {
                                    "type": "text"
                                },
                                "crazy1": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car3",
                "_id": "FcwKNokBd5krLIuU8fTl",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "whatisthisthing": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GcwWNokBd5krLIuUZ_TW",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "crazything": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GswaNokBd5krLIuUDvST",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "G8wbNokBd5krLIuUVfTN",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "HMwdNokBd5krLIuUS_T-",
                "_score": 1.0,
                "_source": {
                    "model": "a",
                    "year": 1,
                    "engine": "a",
                    "star": "a",
                    "something": "a",
                    "onemorething": "a",
                    "yetanotherthing": "a",
                    "crazy1": "a"
                }
            }
        ]
    }
}

--- NOW, CHANGE MAPPING
{
"mappings":{
"_doc": {
"properties": {
"model" : { "type" : "text" },
"year": {"type" : "integer"},
"engine": {"type": "text"},
"star": {"type": "text"},
"something": {"type": "text"},
"onemorething": {"type": "text"},
"crazy2": {"type": "text"}
}
}
}
}

------ MAPPING SHOWS with _search
{
    "took": 1168,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 9,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "car3",
                "_id": "F8wLNokBd5krLIuU4PTd",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "abcd",
                    "onemorething": "abcd",
                    "yetanotherthing": "abcd"
                }
            },
            {
                "_index": "car3",
                "_id": "GMwSNokBd5krLIuUJ_Qk",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                },
                                "onemorething": {
                                    "type": "text"
                                },
                                "yetanotherthing": {
                                    "type": "text"
                                },
                                "crazy1": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car3",
                "_id": "FcwKNokBd5krLIuU8fTl",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "whatisthisthing": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GcwWNokBd5krLIuUZ_TW",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "crazything": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GswaNokBd5krLIuUDvST",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "G8wbNokBd5krLIuUVfTN",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "HMwdNokBd5krLIuUS_T-",
                "_score": 1.0,
                "_source": {
                    "model": "a",
                    "year": 1,
                    "engine": "a",
                    "star": "a",
                    "something": "a",
                    "onemorething": "a",
                    "yetanotherthing": "a",
                    "crazy1": "a"
                }
            },
            {
                "_index": "car3",
                "_id": "HcwfNokBd5krLIuUAfTG",
                "_score": 1.0,
                "_source": {
                    "model": "a",
                    "year": 1,
                    "engine": "a",
                    "star": "a",
                    "something": "a",
                    "onemorething": "a",
                    "yetanotherthing": "a",
                    "crazy1": "a"
                }
            },
            {
                "_index": "car3",
                "_id": "HswfNokBd5krLIuUEPSr",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                },
                                "onemorething": {
                                    "type": "text"
                                },
                                "crazy2": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            }
        ]
    }
}

---  ADD A RECORD WITH THE NEW MAPPING
                {
"model" : "b",
"year": 1,
"engine": "b",
"star": "b",
"something": "b",
"onemorething": "b",
"yetanotherthing": "b",
"crazy2": "b"
                }

-- and do _search --> both mappings and record show
{
    "took": 181,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 10,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "car3",
                "_id": "F8wLNokBd5krLIuU4PTd",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "abcd",
                    "onemorething": "abcd",
                    "yetanotherthing": "abcd"
                }
            },
            {
                "_index": "car3",
                "_id": "GMwSNokBd5krLIuUJ_Qk",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                },
                                "onemorething": {
                                    "type": "text"
                                },
                                "yetanotherthing": {
                                    "type": "text"
                                },
                                "crazy1": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car3",
                "_id": "FcwKNokBd5krLIuU8fTl",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "whatisthisthing": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GcwWNokBd5krLIuUZ_TW",
                "_score": 1.0,
                "_source": {
                    "model": "sedan",
                    "year": 2000,
                    "engine": "1200CC",
                    "star": "4",
                    "something": "pqrs",
                    "onemorething": "pqrs",
                    "yetanotherthing": "pqrs",
                    "crazything": "dddd"
                }
            },
            {
                "_index": "car3",
                "_id": "GswaNokBd5krLIuUDvST",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "G8wbNokBd5krLIuUVfTN",
                "_score": 1.0,
                "_source": {
                    "a1": "sedan",
                    "a2": 2000,
                    "a3": "1200CC",
                    "a4": "4"
                }
            },
            {
                "_index": "car3",
                "_id": "HMwdNokBd5krLIuUS_T-",
                "_score": 1.0,
                "_source": {
                    "model": "a",
                    "year": 1,
                    "engine": "a",
                    "star": "a",
                    "something": "a",
                    "onemorething": "a",
                    "yetanotherthing": "a",
                    "crazy1": "a"
                }
            },
            {
                "_index": "car3",
                "_id": "HcwfNokBd5krLIuUAfTG",
                "_score": 1.0,
                "_source": {
                    "model": "a",
                    "year": 1,
                    "engine": "a",
                    "star": "a",
                    "something": "a",
                    "onemorething": "a",
                    "yetanotherthing": "a",
                    "crazy1": "a"
                }
            },
            {
                "_index": "car3",
                "_id": "HswfNokBd5krLIuUEPSr",
                "_score": 1.0,
                "_source": {
                    "mappings": {
                        "_doc": {
                            "properties": {
                                "model": {
                                    "type": "text"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine": {
                                    "type": "text"
                                },
                                "star": {
                                    "type": "text"
                                },
                                "something": {
                                    "type": "text"
                                },
                                "onemorething": {
                                    "type": "text"
                                },
                                "crazy2": {
                                    "type": "text"
                                }
                            }
                        }
                    }
                }
            },
            {
                "_index": "car3",
                "_id": "H8wgNokBd5krLIuU7_Qh",
                "_score": 1.0,
                "_source": {
                    "model": "b",
                    "year": 1,
                    "engine": "b",
                    "star": "b",
                    "something": "b",
                    "onemorething": "b",
                    "yetanotherthing": "b",
                    "crazy2": "b"
                }
            }
        ]
    }
}

