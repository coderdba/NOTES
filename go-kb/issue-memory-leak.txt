REFERENCE: http://golang50shad.es/

=====================
ORIGINAL CODE 
=====================

    client := &http.Client{
        Timeout: time.Second * time.Duration(timeout),
    }
    response, err := client.Do(req)
    if err != nil {
        log.Println("ERR - CallPostMortemAPI(): API Call failed: "+api_url.String(), err.Error())
        w.WriteHeader(http.StatusInternalServerError)
        w.Header().Set("Content-Type", "application/json")
        resp := make(map[string]string)
        resp["message"] = "API Call failed: " + api_url.String()
        jsonResp, err := json.Marshal(resp)
        if err != nil {
            log.Println("WARN - CallPostMortemAPI(): Error happened in JSON marshal for Unauthorized response. Err: %s", err)
        }
        //tbd - handle error condition
        w.Write(jsonResp)
        return
    }
    w.WriteHeader(response.StatusCode)
    defer response.Body.Close()

    w.Header().Set("Content-Type", "application/json")

    log.Println("INFO - GetPostMortemDiag(): Response code from URL: ", response.StatusCode)
    b, err := io.ReadAll(response.Body)
    // fmt.Fprint(w, string(b))
    w.Write(b)
}

=====================
MODIFIED CODE
=====================
    client := &http.Client{
        Timeout: time.Second * time.Duration(timeout),
    }
    response, err := client.Do(req)
        
        if response != nil {
        defer response.Body.Close() // memory leak fix: place this here to avoid memory leaks
    }

    if err != nil {
        log.Println("ERR - CallPostMortemAPI(): API Call failed: "+api_url.String(), err.Error())
        w.WriteHeader(http.StatusInternalServerError)
        w.Header().Set("Content-Type", "application/json")
        resp := make(map[string]string)
        resp["message"] = "API Call failed: " + api_url.String()
        jsonResp, err := json.Marshal(resp)
        if err != nil {
            log.Println("WARN - CallPostMortemAPI(): Error happened in JSON marshal for Unauthorized response. Err: %s", err)
        }
        //tbd - handle error condition
        w.Write(jsonResp)
        return
    }

    w.WriteHeader(response.StatusCode)

    //defer response.Body.Close() //  memory leak fix: moved this to right after getting respose 

    w.Header().Set("Content-Type", "application/json")

    log.Println("INFO - GetPostMortemDiag(): Response code from URL: ", response.StatusCode)

    b, err := io.ReadAll(response.Body)

        _, err = io.Copy(ioutil.Discard, response.Body) //  memory leak fix: added this line to clear old responses in reused http connection

    // fmt.Fprint(w, string(b))
    w.Write(b)
}
