===============================================
AZURE KEY VAULT READER
===============================================

NOTE: Needs golang version 18+
### Needs Golang 18.x - to avoid errors like the following:  
```
imports github.com/Azure/azure-sdk-for-go/sdk/azidentity: build constraints exclude all Go files in C:\Users\GSM078\go\pkg\mod\github.com\!azure\azure-sdk-for-go\sdk\azidentity@v1.0.0
```

From mrk trial:

DOCKERFILE:
# https://www.bacancytechnology.com/blog/dockerize-golang-application

# First pull Golang image
#FROM golang:1.17.6 as build-env
FROM golang:1.18.2-alpine3.15 as build-env

# Set environment variable
ENV APP_NAME kvreader
ENV CMD_PATH main.go

# Copy application data into image
COPY . $GOPATH/src/$APP_NAME
WORKDIR $GOPATH/src/$APP_NAME

#go mod tidy

# Build application
RUN CGO_ENABLED=0 go build -v -o /$APP_NAME $GOPATH/src/$APP_NAME/$CMD_PATH

# Run Stage
FROM alpine:3.15


    REFERENCES
    https://thecodeblogger.com/2020/06/03/azure-web-app-and-managed-identity-to-access-key-vault/
    https://docs.microsoft.com/en-us/azure/app-service/app-service-key-vault-references?tabs=azure-cli
    --> Do not configure the "authorized application" or applicationId settings, as this is not compatible with a managed identity.
    https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/howto-assign-access-portal

    ERROR
    --> this error went away once managed-identity was assigned to azure-app and access was provided to it in keyvault access policy
    /home/LogFiles/2022_06_06_lw1sdlwk00001A_default_docker.log  (https://my-kvreader.scm.azurewebsites.net/api/vfs/LogFiles/2022_06_06_lw1sdlwk00001A_default_docker.log)
    2022-06-06T11:33:42.715332365Z 2022/06/06 11:33:42 INFO - showdbname(): Endpoint Hit: showdbname
    2022-06-06T11:33:43.881987308Z 2022/06/06 11:33:43 ERR - showdbname(): Failed to obtain PG-DBNAME from keyvault: %v DefaultAzureCredential: failed to acquire a token.
    2022-06-06T11:33:43.882035208Z Attempted credentials:
    2022-06-06T11:33:43.882042108Z 	EnvironmentCredential: missing environment variable AZURE_TENANT_ID
    2022-06-06T11:33:43.882047408Z 	ManagedIdentityCredential: IMDS token request timed out
    2022-06-06T11:33:43.882052008Z 	AzureCLICredential: Azure CLI not found on path

===============================================
WRAPPER API TO OBTAIN JWT AND CALL BACKEND API
===============================================
Using github.com/dgrijalva/jwt-go:
https://blog.boot.dev/golang/jwts-in-golang/

Other examples:
https://codesource.io/how-to-setup-golang-authentication-with-jwt-token/
https://www.bacancytechnology.com/blog/golang-jwt

Request enconding in golang:
- x-www-form-urlencoded
  https://golangbyexample.com/http-client-urlencoded-body-go/

Print request/response body:
https://gosamples.dev/print-http-request-response

Accessing rest api using golang:
https://www.golanglearn.com/golang-tutorials/http-get-rest-example-using-golang/
https://golangexample.com/http-client-call-for-golang-http-api-calls/

Unmarshal json body from rest api call:
https://stackoverflow.com/questions/41815909/is-there-a-way-to-extract-json-from-an-http-response-without-having-to-build-str
https://stackoverflow.com/questions/48081530/map-response-to-a-struct-using-golang
https://stackoverflow.com/questions/61077483/unable-to-unmarshal-golang-response

HTTP response to string:
https://freshman.tech/snippets/go/http-response-to-string/

HTTP 401 response creation:
https://golangbyexample.com/401-http-status-response-go/

Marshal, Unmarshall
https://webdamn.com/marshal-and-unmarshal-in-golang/

Copy one response (incoming) into another response (outgoing)
https://stackoverflow.com/questions/64610203/golang-read-https-response-body
https://stackoverflow.com/questions/35015084/how-to-make-a-copy-of-response-of-http-geturl-request-in-golang

Token local storage
https://stackoverflow.com/questions/27515421/is-is-possible-in-go-to-access-jwt-token-stored-in-client-localstorage

Query parameters reading from request
https://golangbyexample.com/net-http-package-get-query-params-golang/

Map to query parameter conversion and adding to url
https://groups.google.com/g/golang-nuts/c/hbNCHMIA05g

Epoch conversion of Time
https://www.epochconvert.com/programming/go

String to int
https://appdividend.com/2022/03/20/how-to-convert-string-to-int64-in-golang/

Int to string
https://golangdocs.com/golang-int64-to-string-conversion
https://yourbasic.org/golang/convert-int-to-string/

Get request header values:
https://golangbyexample.com/headers-http-request-golang

JWT decoding:
https://newbedev.com/decoding-jwt-token-in-golang --> example

Online JWT decoders:
https://adfshelp.microsoft.com/JwtDecoder/GetToken
https://www.jstoolset.com/jwt

https://pkg.go.dev/github.com/golang-jwt/jwt --> official package
- https://stackoverflow.com/questions/51874945/decode-jwt-in-golang-jwt-go

==========================
USAGE NOTES
==========================
Single cert check = http://localhost:10003/cert/url?url=www.google.com
