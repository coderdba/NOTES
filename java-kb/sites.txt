BEST TUTORIALS
http://www.mkyong.com/
http://www.tutorialspoint.com
https://www.tutorialspoint.com/restful/restful_quick_guide.htm
https://www.tutorialspoint.com/restful/restful_methods.htm
http://java.boot.by/ocewsd6-guide/ch02.html (more like book)
http://www.codejava.net/frameworks/spring/14-tips-for-writing-spring-mvc-controller
http://www.javawebtutor.com/articles/web-services/rest/creating-web-service-with-maven-jersey.php
https://dennis-xlc.gitbooks.io/restful-java-with-jax-rs-2-0-2rd-edition/en/part1/chapter7/complex_responses.html

Creating a background service:
https://techvidvan.com/tutorials/java-executorservice/

Service annotation in Spring:
https://www.journaldev.com/21435/spring-service-annotation

===================================================================================
Factory methods:
http://www.javatpoint.com/factory-method-design-pattern

ANNOTATIONS:
https://docs.oracle.com/javase/tutorial/java/annotations/basics.html

REST APIs:

http://stackoverflow.com/questions/29015175/jersey-the-servlet-context-path-and-or-the-servlet-path-contain-characters-tha
(jersy simple api)

BOOK - Good - http://java.boot.by/ocewsd6-guide/ch02.html

JAX-RS - https://en.wikipedia.org/wiki/Java_API_for_RESTful_Web_Services

Tutorial - http://www.tutorialspoint.com/restful/
Tutorial - http://www.mkyong.com/webservices/jax-rs/jax-rs-path-uri-matching-example/
            http://www.mkyong.com/webservices/jax-rs/jax-rs-pathparam-example/
            http://www.mkyong.com/webservices/jax-rs/jax-rs-formparam-example/
            (various possibilities - http://www.mkyong.com/tutorials/jax-rs-tutorials/)
            
Other tutorials:
REST API with Jersey, Jackson, Ajax - http://coenraets.org/blog/2011/12/restful-services-with-jquery-and-java-using-jax-rs-and-jersey/
REST API with Jersey, Jackson, DB - https://www.nabisoft.com/tutorials/java-ee/producing-and-consuming-json-or-xml-in-java-rest-services-with-jersey-and-jackson
Older version Jersey, Jackson example - https://examples.javacodegeeks.com/enterprise-java/rest/jersey/json-example-with-jersey-jackson/
Older version Jersey, Jackson example - http://www.java4s.com/web-services/restful-web-service-jax-rs-json-example-using-jersey/

Jersey:
Doc - https://jersey.java.net/documentation/latest/
Doc - Application class, deployment options - https://jersey.java.net/nonav/documentation/2.0/deployment.html
Doc - JSON, JAXB etc - https://jersey.java.net/documentation/latest/media.html#d0e7963
Pojo support - https://jersey.java.net/documentation/1.19.1/json.html#json.pojo.approach.section
Maven dependencies - https://jersey.java.net/documentation/latest/modules-and-dependencies.html
Maven Jersey specific archetype - https://jersey.java.net/documentation/latest/user-guide.html#new-from-archetype
Starter project - https://jersey.java.net/documentation/latest/user-guide.html#new-from-archetype

Building RESTful Web Services with JAX-RS and Jersey - https://docs.oracle.com/cd/E19226-01/820-7627/6nisfjmk8/index.html

Jackson:
Basic example - http://xrmsoftware.blogspot.in/2012/09/jersey-consume-json-example-test-with.html 
    Do it with - http://stackoverflow.com/questions/30423776/post-to-jersey-rest-service-getting-error-415-unsupported-media-type
    https://jersey.java.net/project-info/2.17/jersey/project/jersey-media-json-jackson/dependencies.html
    
http://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/
http://www.mkyong.com/webservices/jax-rs/integrate-jackson-with-resteasy/
http://stackoverflow.com/questions/19083873/jersey-consume-json-on-post
http://stackoverflow.com/questions/25736819/no-injection-source-found-error-when-using-multiple-pathparms-in-restful-resour
http://www.davismol.net/2014/12/17/json-serialization-and-deserialization-of-java-objects-with-jackson-a-concrete-example/
http://www.studytrails.com/java/json/jackson-create-json.jsp
https://examples.javacodegeeks.com/enterprise-java/rest/resteasy/json-example-with-resteasy-jackson/
Combine pathParam with POJO - http://stackoverflow.com/questions/10357041/jersey-post-method-is-receiving-null-values-as-parameters

Jax-RS:
Jax-rs vs Jersey - http://stackoverflow.com/questions/17888757/what-difference-between-jersey-vs-jax-rs
    Jersey just a interface to use JAX-rs in more easier way. JAX-RS does not provide servlet but Jersey does. 
    Jersey provides a library to implement Restful webservices in a Java servlet container, Jersey provides 
    a servlet implementation which scans predefined classes to identify RESTful resources. In your web.xml 
    configuration file your register this servlet for your web application. 
Why we need Jersey - http://stackoverflow.com/questions/16624057/java-deploy-restful-web-service-without-jersey
Jax-RS + RestEasy - http://docs.jboss.org/resteasy/docs/2.0.0.GA/userguide/html_single/index.html
REST Jax-RS - tutorials - http://www.mkyong.com/tutorials/jax-rs-tutorials/
    With Jersey - http://www.mkyong.com/webservices/jax-rs/jersey-hello-world-example/
    With RestEasy - http://www.mkyong.com/webservices/jax-rs/resteasy-hello-world-example/

Moxy:
Moxy vs Jackson - http://jersey.576304.n2.nabble.com/Jackson-vs-MOXy-td7581625.html
Tutorial with Jersey and Moxy - http://javapapers.com/java/java-restful-web-services-with-json-and-jersey/

Rest without Jersey?? - http://stackoverflow.com/questions/16913866/creating-a-restful-webservice-without-using-jersey-or-any-other-libs

@GET vs doGet, @POST vs doPost: http://stackoverflow.com/questions/11314418/httpservlet-using-path-path-with-post-versus-dopost
    The annotation @GET, @PUT, @POST, @DELETE and @HEAD are part of JAX-RS: Java API for RESTful Web Services specification 
    to specify the HTTP request type of a resource and are implemented in Web Service frameworks like Jersey and Apache CXF 
    and you won't be using them until you actually use those frameworks.
    
RPC VS REST - https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/

Calling REST APIs in Java:
http://camel.apache.org/cxfrs.html
http://www.mkyong.com/webservices/jax-rs/restfull-java-client-with-java-net-url/
https://vaadin.com/blog/-/blogs/consuming-rest-services-from-java-applications
With JSON input - https://www.javacodegeeks.com/2012/09/simple-rest-client-in-java.html
With JSON input - http://crunchify.com/create-very-simple-jersey-rest-service-and-send-json-data-from-java-client/  (good)
Via camel - https://wiki.eclipse.org/Stardust/Knowledge_Base/Integration/Camel/Calling_RESTful_Service_Through_Camel_Route
Via camel - https://dzone.com/articles/rest-endpoint-integration
Via camel - http://www.rubix.nl/blogs/implementing-cxfrs-client-jboss-fuse
Via camel - http://stackoverflow.com/questions/25255011/can-anyone-point-me-to-a-working-example-camel-route-using-a-cxfrs-client-produc

Camel message examples - http://www.programcreek.com/java-api-examples/index.php?api=org.apache.camel.Message

Calling REST APIs in Spring:
https://spring.io/guides/gs/consuming-rest/

POJO Serialization to JSON and JAXB, Moxy : http://www.adam-bien.com/roller/abien/entry/jaxb_json_pojo_serialization_example
POJO JSON Java8 and Java7 EE: http://www.adam-bien.com/roller/abien/entry/java_8_java_ee_7

JAVA EE 7 REST APIS:
https://www.javacodegeeks.com/2014/11/java-ee-7-jax-rs-2-0-cors-on-rest.html
http://www.developerscrappad.com/1814/java/java-ee/rest-jax-rs/java-ee-7-jax-rs-2-0-simple-rest-api-authentication-authorization-with-custom-http-header/

===================================================================================

Request/Response:
https://www.mkyong.com/java/how-to-get-http-response-header-in-java/
http://stackoverflow.com/questions/19552543/how-to-set-a-header-in-an-http-response


===================================================================================
===================================================================================
SERVLETS
Servlet mapping - http://javapapers.com/servlet/what-is-servlet-mapping/
Servlet with annotations - http://www.javatpoint.com/servlet-with-annotation

===================================================================================
===================================================================================
Virtualbox API examples: 
http://www.virtualbox.org/svn/vbox/trunk/src/VBox/Main/webservice/samples/
http://www.virtualbox.org/svn/vbox/trunk/src/VBox/Main/webservice/samples/java/jax-ws/
===================================================================================

Oracle data handler - https://github.com/ginere/ginere-jdbc-oracle
Oracle XML-SQL query - http://docs.oracle.com/html/B28369_04/xdb13gen.htm 
OracleXMLQuery - getting XML from regular resultset - https://docs.oracle.com/cd/A87860_01/doc/appdev.817/a86030/adx04x11.htm 
                  (uses xsu12.jar in $ORACLE_HOME/lib)
OracleResultSet - https://docs.oracle.com/cd/B14117_01/java.101/b10979/datacc.htm

Oracle JDBC driver classpath setting: http://stackoverflow.com/questions/20224222/how-to-register-oracle-jdbc-driver-on-tomcat-7-0-47-startup
Oracle JDBC driver classpath setting: https://community.oracle.com/thread/934054?start=0&tstart=0

Data handler java programs - 
    http://www.programcreek.com/java-api-examples/index.php?source_dir=BusinessCore-master/src/main/java/me/beastman3226/bc/data/DataHandler.java
    http://www.programcreek.com/java-api-examples/index.php?source_dir=BusinessCore-master/src/main/java/me/beastman3226/bc/db/Database.java
    http://www.programcreek.com/java-api-examples/index.php?source_dir=BusinessCore-master/src/main/java/me/beastman3226/bc/db/Table.java

Database class prototype: http://www.programcreek.com/2009/06/prototype-of-database-class/

MySQL model code:
Model code:
http://www.programcreek.com/java-api-examples/index.php?source_dir=BusinessCore-master/src/main/java/code/husky/Database.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=BusinessCore-master/src/main/java/code/husky/mysql/MySQL.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=BusinessCore-master/src/main/java/me/beastman3226/bc/db/Database.java (this is a different Database.java than the one above)

MySQLi database class - https://github.com/joshcam/PHP-MySQLi-Database-Class

Salesforce Apex database class - https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_database.htm#apex_System_Database_insert

Json Ignore - http://www.baeldung.com/jackson-deserialize-json-unknown-properties

OracleDataSource issue - https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/pool/OracleDataSource.html
      A DataSource object is a factory for Connection objects. An object that implements the DataSource interface will typically 
      be registered with a JNDI service provider. A JDBC driver that is accessed via the 
      DataSource API does not automatically register itself with the DriverManager
      ----------------------------------------------------------------
      
OracleDataSource issue - http://stackoverflow.com/questions/12088068/oracle-jdbc-drivermanager-or-oracledatasource

OracleDataSource issue - JNDI - Tomcat - https://tomcat.apache.org/tomcat-7.0-doc/jndi-resources-howto.html
        http://tomcat.apache.org/tomcat-7.0-doc/jndi-datasource-examples-howto.html#Oracle_8i,_9i_&_10g
        
OracleDataSource - TOMCAT-ECLIPSE- VERY GOOD - http://viralpatel.net/blogs/database-connection-pooling-tomcat-eclipse-db/

OracleDataSource - Tomcat can have connection pool to only one db at a time: http://www.theserverside.com/news/thread.tss?thread_id=41550

Tomcat JNDI examples - http://geoserver.geo-solutions.it/edu/en/adv_gsconfig/db_pooling.html

Random String Generator - http://stackoverflow.com/questions/41107/how-to-generate-a-random-alpha-numeric-string
Random String Generator UUID and other methods - http://www.javapractices.com/topic/TopicAction.do?Id=56

Various help: http://www.java2s.com/Code/Java/Database-SQL-JDBC/GetObjectFromOracleDatabaseUsingSTRUCT.htm

JDBC driver - alternative coding method - http://www.mkyong.com/jdbc/connect-to-oracle-db-via-jdbc-driver-java/

LDAP query example: http://www.adamretter.org.uk/blog/entries/LDAPTest.java
LDAP query example: http://www.deepakgaikwad.net/index.php/2009/09/24/retrieve-basic-user-attributes-from-active-directory-using-ldap-in-java.html

LDAP SSL certificates: http://stackoverflow.com/questions/17348821/ssl-connection-to-ldap-via-java


Widget for weather: http://developerlife.com/tutorials/?p=230

Import certificates: https://docs.oracle.com/javase/tutorial/security/toolsign/rstep2.html
Import certificates: https://docs.oracle.com/cd/E19509-01/820-3399/ggfrj/index.html

Appending 'objects' to file: http://stackoverflow.com/questions/6578973/appending-to-objectoutputstream-writing-multiple-objects-w-o-closing-stream

JDBC security/encryption - http://docs.oracle.com/cd/E11882_01/java.112/e16548/clntsec.htm#JJDBC28306

Password encryption in network/wire - https://community.oracle.com/thread/2609207?start=0&tstart=0
Password encryption in network/wire - http://stackoverflow.com/questions/12284970/does-the-oracle-jdbc-client-encrypt-password-when-you-make-a-connection

Password encryption - http://stackoverflow.com/questions/6592010/encrypt-and-decrypt-a-password-in-java
Password encryption - http://www.rgagnon.com/javadetails/java-0400.html

Servlets with annotation (web.xml not required with this) - http://www.javatpoint.com/servlet-with-annotation
Servlets with annotation (with initialization parameters) -http://www.mastertheboss.com/javaee/servlet-30/servlet-30-tutorial

Response giving 500 - 
http://stackoverflow.com/questions/40885307/returning-a-list-of-javax-ws-rs-core-response-resulting-in-500
http://stackoverflow.com/questions/36152231/how-set-response-body-in-javax-ws-rs-core-response
http://www.programcreek.com/java-api-examples/index.php?api=javax.ws.rs.core.Response.ResponseBuilder
http://stackoverflow.com/questions/19846577/messagebodyreader-not-found-for-media-type-application-octet-stream

Good general example
http://stackoverflow.com/questions/28725946/messagebodyreader-not-found-for-media
http://stackoverflow.com/questions/40885307/returning-a-list-of-javax-ws-rs-core-response-resulting-in-500
http://stackoverflow.com/questions/19846577/messagebodyreader-not-found-for-media-type-application-octet-stream
=============================
Drivers, JARs and WARs needed
=============================

Oracle JDBC Thin driver - odbc7.jar (used 12c version here)
Oracle xsu12.jar - For OracleXMLQuery etc (found in $ORACLE_HOME/lib - used 12c version here)
Oracle xmlparserv2.jar - For xml exceptions (found in $ORACLE_HOME/lib - used 12c version here)

Strings - initcap capitalilze first letters - http://stackoverflow.com/questions/1892765/capitalize-first-char-of-each-word-in-a-string-java

======
Shopping cart with Spring MVC:  https://o7planning.org/en/10605/create-a-java-shopping-cart-web-application-using-spring-mvc-and-hibernate

Shopping cart with cookies, session id: https://way2java.com/servlets/servlet-cookies-simple-shopping-cart-example/

Cookie in servlet example - https://way2java.com/servlets/servlet-cookies-simple-shopping-cart-example/
Cookie to save session data - http://www.java2s.com/Code/Java/Servlets/Usecookietosavesessiondata.htm
Cookie for Session Id, username, httprequest - https://www.journaldev.com/1907/java-session-management-servlet-httpsession-url-rewriting
Cookies - tutorial - https://www.tutorialspoint.com/servlets/servlets-cookies-handling.htm
            (pre req - https://www.tutorialspoint.com/servlets/servlets-form-data.htm)

Session Id - https://www.codeproject.com/questions/419377/how-to-create-session-id-and-how-to-store-session
Session Id - https://stackoverflow.com/questions/13969672/difference-between-request-getsession-getid-and-request-getsessionfalse
Session Id - https://www.journaldev.com/1907/java-session-management-servlet-httpsession-url-rewriting

Session management in spring-boot - https://stackoverflow.com/questions/32358816/springboot-session-management
Session tracking - https://www.tutorialspoint.com/servlets/servlets-session-tracking.htm

== 
music:

Synthesiser, midi tutorial:
https://docs.oracle.com/javase/tutorial/sound/MIDI-synth.html
https://docs.oracle.com/javase/tutorial/sound/overview-MIDI.html

Frequencies: https://www.seventhstring.com/resources/notefrequencies.html
             https://en.wikipedia.org/wiki/Vocal_range

Make a sound (good one):  https://stackoverflow.com/questions/1932490/java-generating-sound     
Modeling a sound (good one):  http://digitalsoundandmusic.com/2-3-13-modeling-sound-in-java/
                              https://groups.google.com/forum/#!topic/comp.lang.java.help/7vR_AWw1AwQ   
                              https://stackoverflow.com/questions/32347274/how-to-play-record-sound-on-from-a-javax-sound-sampled-line

Sine wave:  https://stackoverflow.com/questions/8632104/sine-wave-sound-generator-in-java
            https://github.com/drshriveer/sinewave/blob/master/sinewave/Sine.java

Triangle wave: https://math.stackexchange.com/questions/1828184/triangle-wave-equation

Piano wave formula:  https://dsp.stackexchange.com/questions/46598/mathematical-equation-for-the-sound-wave-that-a-piano-makes?rq=1
                        --> https://www.desmos.com/calculator/v5wrctppk1
Playing sounds for a game:  https://www.ntu.edu.sg/home/ehchua/programming/java/J8c_PlayingSound.html
Piano app - with pre-recorded sounds:  https://quickgrid.wordpress.com/2015/08/14/java-awt-piano-button-click-sound/
Piano app - with generated sounds MIDI: https://codereview.stackexchange.com/questions/58439/very-basic-java-piano
Piano app - with generated sounds Sine: https://www.developer.com/java/other/article.php/2226701/Java-Sound-Creating-Playing-and-Saving-Synthetic-Sounds.htm

Free sound files: https://freesound.org/people/Goup_1/sounds/176449/

http://www.softsynth.com/jsyn/ - apis with frequency etc settings

https://stackoverflow.com/questions/26574326/how-to-calculate-the-level-amplitude-db-of-audio-signal-in-java#26576548

Generate and play a sound:  https://stackoverflow.com/questions/297070/how-to-generate-sound-effects-in-java#11974521

http://www.oracle.com/technetwork/java/index-139508.html
https://docs.oracle.com/javase/tutorial/sound/MIDI-synth.html - midi

https://stackoverflow.com/questions/3850688/reading-midi-files-in-java --> simple midi example

Sound java tutorial:  http://archive.oreilly.com/oreillyschool/courses/data-structures-algorithms/soundFiles.html
===

Maps:  https://stackoverflow.com/questions/3110547/java-how-to-create-new-entry-key-value#3110563

Springboot hello world:  https://www.mkyong.com/spring-boot/spring-boot-hello-world-example-jsp/

====

File IO:  
https://stackoverflow.com/questions/19844649/java-read-file-and-store-text-in-an-array

=======================
PASSWORD RESET PROGRAMS
=======================
http://gauravinfoarena.blogspot.in/2013/05/forget-password-module-using-jsp-and.html
https://chiragshah007.wordpress.com/2014/02/28/change-password-using-servlet-and-jsp-page/
https://code.google.com/p/webagenda/source/browse/trunk/WebContent/wa_settings/changePassword.jsp?r=592 
http://www.roseindia.net/jsp/change-password-code-in-jsp.shtml

=======================
ANNOTATIONS
=======================
Jackson/json annotations - https://www.tutorialspoint.com/jackson_annotations/jackson_annotations_jsoncreator.htm

=======================================
Object Mapping - JSON, XML, Mappers
=======================================
ObjectMapper - to Json
- https://www.codota.com/code/java/methods/com.fasterxml.jackson.databind.ObjectMapper/writeValueAsString
- com.fasterxml.jackson.databind.ObjectMapper
- com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString

ObjectMapper Tutorial - to Json
- https://www.baeldung.com/jackson-object-mapper-tutorial

XMLMapper - to XML
- import com.fasterxml.jackson.dataformat.xml.XmlMapper
- https://stackify.com/java-xml-jackson/
- https://www.programcreek.com/java-api-examples/?api=com.fasterxml.jackson.dataformat.xml.XmlMapper
- Json to XML - https://gist.github.com/leolin310148/e108cd8cf79a19ae8800 (jsonslurper, json to xml)


=================================
CONCURRENCY - PARLLEL EXECUTION, BLOCK, FORK
=================================
Tutorial on concurrency:
https://www.tutorialspoint.com/java_concurrency
            Fork-Join, Concurrency: https://www.tutorialspoint.com/java_concurrency/concurrency_fork_join.htm (very good example)

Executor Services, ManagedBlocker
ManagedBlocker -- the way to signal to the ForkJoinPool that it should extend its parallelism, to compensate for potential blocked worker threads.
https://www.jrebel.com/blog/using-java-executors (very good to read)
