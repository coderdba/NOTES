==============================
ENABLE DATA PUSH TO PROMETHEUS
==============================
https://k6.io/docs/results-visualization/prometheus
https://github.com/grafana/xk6-output-prometheus-remote

================================================
CREATE A NEW K6 IMAGE WITH PROMETHEUS EXTENSION
================================================
--------------
DOCKERFILE
--------------
Dockerfile - https://github.com/grafana/xk6-output-prometheus-remote/blob/main/Dockerfile
==> This dockerfile has a typo error. Correct it as follows:

# Multi-stage build to generate custom k6 with extension
FROM golang:1.17-alpine as builder
WORKDIR $GOPATH/src/go.k6.io/k6
ADD . .
RUN apk --no-cache add git
RUN CGO_ENABLED=0 go install go.k6.io/xk6/cmd/xk6@latest

# the "with" line below has a typo
#RUN CGO_ENABLED=0 xk6 build \
#    --with github.com/grafana/xk6-output-prometheus-remote=. \
#    --output /tmp/k6

RUN CGO_ENABLED=0 xk6 build \
    --with github.com/grafana/xk6-output-prometheus-remote \
    --output /tmp/k6

# Create image for running k6 with output for Prometheus Remote Write
FROM alpine:3.15
RUN apk add --no-cache ca-certificates \
    && adduser -D -u 12345 -g 12345 k6
COPY --from=builder /tmp/k6 /usr/bin/k6

USER 12345
WORKDIR /home/k6

ENTRYPOINT ["k6"]

------------------------
BUILD IMAGE
------------------------
docker build -t xk6 .

--------------------------------
RUN A TEST - WITH SCREEN OUTPUT
--------------------------------
Running a test with screen output only is same as how we run K6

docker run --rm -i xk6 run - <script1.js

And, it gives the same screen-output as plain k6 - nothing special for Prometheus "on-screen"

==========================
INSTALL PROMETHEUS DOCKER
==========================
-------------------
PULL AND RUN BASIC
-------------------
docker pull prom/prometheus:v2.34.0
docker run -d -p 9090:9090 --name prometheus prom/prometheus:v2.34.0
Access it in http://localhost:9090

- FROM SGR
docker run -p 9090:9090 --name prometheus \
  -v "/tmp/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml" prom/prometheus:v2.34.0 \
  --config.file=/etc/prometheus/prometheus.yml \
  --storage.tsdb.path=/prometheus \
  --web.console.libraries=/usr/share/prometheus/console_libraries \
  --web.console.templates=/usr/share/prometheus/consoles \
  --enable-feature=remote-write-receiver
  
------------------------------
/tmp/prometheus.yml (from sgr)
------------------------------
global:
scrape_interval: 1s

rule_files:
scrape_configs:
- job_name: "k6"

metrics_path: /v1/metrics
static_configs:
- targets: ["localhost:6565"]

remote_write:
- url: http://localhost:9009/api/v1/push
  
========================
SEND TO PROMETHEUS
========================
K6_PROMETHEUS_REMOTE_URL=http://host.docker.internal:9090/api/v1/write 
./k6 run script.js -o output-prometheus-remote


===============================================
REFERENCE - DOCKER-COMPOSE.YAML
===============================================
https://github.com/grafana/xk6-output-prometheus-remote/blob/main/docker-compose.yml

version: '3.8'

networks:
  k6:
  grafana:
  prometheus:

services:
  prometheus:
    image: prom/prometheus:v2.33.5
    command: --web.enable-remote-write-receiver --config.file=/etc/prometheus/prometheus.yml
    networks:
      - k6
      - grafana
      - prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.2.6
    networks:
      - grafana
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./example/config-datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./example/config-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./example/dashboards:/var/lib/grafana/dashboards

  k6:
    build: .
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_PROMETHEUS_REMOTE_URL=http://prometheus:9090/api/v1/write
      - K6_OUT=output-prometheus-remote
