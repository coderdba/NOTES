====================================
KAFKA ON DOCKER
====================================

========================
REFERENCES
========================

CONFLUENT KAFKA
Quick start with docker: https://docs.confluent.io/platform/current/platform-quickstart.html
- docker-compose.yml: https://github.com/confluentinc/cp-all-in-one/blob/7.5.2-post/cp-all-in-one-kraft/docker-compose.yml

https://www.baeldung.com/ops/kafka-docker-setup
https://www.baeldung.com/kafka-docker-connection
https://www.confluent.io/blog/kafka-listeners-explained/ 
Persist Kafka data - docker volumes: https://docs.confluent.io/platform/current/installation/docker/operations/external-volumes.html

BITNAMI KAFKA
https://bitnami.com/stack/kafka/containers
https://github.com/bitnami/containers/tree/main/bitnami/kafka#how-to-use-this-image
- Docker-compose: https://github.com/bitnami/containers/blob/main/bitnami/kafka/docker-compose.yml
https://docs.bitnami.com/general/infrastructure/kafka/get-started/understand-default-config/
https://docs.bitnami.com/kubernetes/infrastructure/kafka/administration/external-access/

https://stackoverflow.com/questions/73382919/what-is-the-difference-between-bitnami-kafka-and-confluentinc-cp-kafka

NON-CONFLUENT KAFKA
https://betterdatascience.com/how-to-install-apache-kafka-using-docker-the-easy-way/


========================
DOCKER-COMPOSE
========================

=========================
CONFLUENT KAFKA 
=========================
https://www.baeldung.com/ops/kafka-docker-setup

To start an Apache Kafka server, we’d first need to start a Zookeeper server.

We can configure this dependency in a docker-compose.yml file, which will ensure that the 
Zookeeper server always starts before the Kafka server and stops after it.

Let’s create a simple docker-compose.yml file with two services, namely zookeeper and kafka:

-------------------------
MODIFIED FROM ORIGNAL
-------------------------
Using the baeldung article and the model docker-compose.yml of bitnami.
  Quick start with docker: https://docs.confluent.io/platform/current/platform-quickstart.html
  - docker-compose.yml: https://github.com/confluentinc/cp-all-in-one/blob/7.5.2-post/cp-all-in-one-kraft/docker-compose.yml
  https://www.baeldung.com/ops/kafka-docker-setup

-- NOTES
Kafka ports are up to us to set up. 9092 is generally the default Kafka port.  Let us keep it for within-docker-network access.
Kafka Port 9092   - connections within docker network, that is, container to container without having to use host network
Kafka Port 29092  - connections from an app on the host to docker container
Kafka Port 29093  - controller listener
Kafka Port 29094  - connections from an app completely outside of the host itself (like, running on another VM/machine)
Kafka host-port mappings:
- In the port-mappings, 9092 mapping may not be necessary as it is for docker internal network.
- Other ports are mapped to same numbered port on host though hostport could be made different.

Zookeeper listens on 2181, and it is mapped to 22181 hostport (can be other hostport also)

-- docker-compose.yml

version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - D:\data\Kafka-Confluent-Docker\zk-data:/var/lib/zookeeper/data 
      - D:\data\Kafka-Confluent-Docker\zk-txn-logs:/var/lib/zookeeper/log 
  
  kafka:
    image: confluentinc/cp-kafka:7.5.2
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
      - 29093:29093
    volumes:
      - D:\data\Kafka-Confluent-Docker\kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: 'LISTNER_INTERNAL://kafka:29092,LISTENER_CONTROLLER://kafka:29093,LISTENER_HOST://localhost:9092,LISTENER_EXTERNAL://192.168.29.195:29094'
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INTERNAL://kafka:9092,LISTENER_HOST://localhost:29092,LISTENER_EXTERNAL://192.168.29.195:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INTERNAL:PLAINTEXT,LISTENER_HOST:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: 'D:\data\Kafka-Confluent-Docker\kraft-combined-logs'


-------------------------
ORIGINAL
-------------------------
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.5.2
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

==================================
DID NOT USE THIS - BITNAMI KAFKA
==================================
docker pull bitnami/kafka:3.6.0
docker pull bitnami/zookeeper:3.9.1

- Docker-compose: https://github.com/bitnami/containers/blob/main/bitnami/kafka/docker-compose.yml

NOTES
- Provides only one port 9092
- Use it for inter-docker-container as well as from host by mapping to host port

----------------------------
ORIGINAL
----------------------------
# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
volumes:
  kafka_data:
    driver: local



