====================================
EXTERNAL SECRETS
====================================

Reference: https://blog.container-solutions.com/tutorialexternal-secrets-with-hashicorp-vault

1. Set up Hashicorp Vault

2. Configure Hashicorp Vault Authentication:

a. Create a policy;
b. Configure Kubernetes authentication endpoint;
c. Create a role;
d. Bind the role to kubernetes authentication endpoint;

3. Configure External-Secrets

=====================================
INSTALL HELM
=====================================
https://phoenixnap.com/kb/install-helm
Download from: https://github.com/helm/helm/releases
Unzip to a folder
Add the folder to PATH

=====================================
Set up Hashicorp Vault
=====================================
This is to setup a hashicorp vault locally on the laptop.

- ADD REPO
helm repo add hashicorp https://helm.releases.hashicorp.com

- INSTALL
helm install vault hashicorp/vault -n vault --create-namespace
  NAME: vault
  LAST DEPLOYED: Tue Nov  8 12:52:33 2022
  NAMESPACE: vault
  STATUS: deployed
  REVISION: 1
  NOTES:
  Thank you for installing HashiCorp Vault!

  Now that you have deployed Vault, you should look over the docs on using
  Vault with Kubernetes available here:

  https://www.vaultproject.io/docs/

  Your release is named vault. To learn more about the release, try:

    $ helm status vault
    $ helm get manifest vault

  C:\Users\GSM078>helm status vault
  Error: release: not found

  C:\Users\GSM078>helm get manifest vault
  Error: release: not found

- VERIFY
kubectl get pods --all-namespaces
NAMESPACE     NAME                                     READY   STATUS    RESTARTS       AGE
kube-system   coredns-78fcd69978-w7fkj                 1/1     Running   0              171m
kube-system   coredns-78fcd69978-xsfk4                 1/1     Running   0              171m
kube-system   etcd-docker-desktop                      1/1     Running   0              171m
kube-system   kube-apiserver-docker-desktop            1/1     Running   0              171m
kube-system   kube-controller-manager-docker-desktop   1/1     Running   0              171m
kube-system   kube-proxy-ctttm                         1/1     Running   0              171m
kube-system   kube-scheduler-docker-desktop            1/1     Running   0              171m
kube-system   storage-provisioner                      1/1     Running   0              170m
kube-system   vpnkit-controller                        1/1     Running   13 (15m ago)   170m
vault         vault-0                                  0/1     Running   0              58s
vault         vault-agent-injector-8fdbb58b6-4l54t     1/1     Running   0              59s

- VERIFY
kubectl get services --all-namespaces
NAMESPACE     NAME                       TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE
default       kubernetes                 ClusterIP   10.96.0.1       <none>        443/TCP                  3h3m
kube-system   kube-dns                   ClusterIP   10.96.0.10      <none>        53/UDP,53/TCP,9153/TCP   3h3m
vault         vault                      ClusterIP   10.101.9.95     <none>        8200/TCP,8201/TCP        12m
vault         vault-agent-injector-svc   ClusterIP   10.105.167.40   <none>        443/TCP                  12m
vault         vault-internal             ClusterIP   None            <none>        8200/TCP,8201/TCP        12m

======================================
EXPOSE VAULT SERVICE
======================================
After vault is deployed, the next step is to expose its service so we can configure it using vault cli. 
Then, we are going to use vault cli to initialize vault and unseal it

- IN LINUX
export VAULT_ADDR=http://127.0.0.1:8200
kubectl port-forward svc/vault -n vault 8200:8200 &
vault operator init

- IN WINDOWS
set VAULT_ADDR=http://127.0.0.1:8200

-- run in foreground itself
kubectl port-forward svc/vault -n vault 8200:8200
  Forwarding from 127.0.0.1:8200 -> 8200
  Forwarding from [::1]:8200 -> 8200
