================================================================================
INSTALL AS PODS - SEPARATELY INSTALL EACH POD - NOT WITH INIT
================================================================================

Kubernetes version: 1.21
Docker version:

================
OWN REFERENCES
================

Earlier attempt: https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/install-vbox/WIP-install-as-pods-separately.txt

Configuration files, shell scripts: https://github.com/coderdba-coding-org/k8s-multinode-vm-as-pods-1
Some basic stuff: https://github.com/coderdba-coding-org/ansible/tree/master/various01/k8s-deploy01
Ansible single node: https://github.com/coderdba-coding-org/code1/tree/master/kubernetes/kube-vbox-ans-singlenode-1
Ansible single node: https://github.com/coderdba-coding-org/code1/tree/master/kubernetes/kube-vbox-ans-singlenode-15.5

VM Setup: 
- https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/k8s-model-vm.txt
- https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/install-vbox/WIP-install-as-pods-separately.txt
- https://github.com/coderdba/NOTES/blob/master/docker-kb/install-config-oel-2019.txt

================
OTHER REFERENCES
================
Ansible modules: 
- Shell: https://www.middlewareinventory.com/blog/ansible-shell-examples/#Example_1_Execute_a_Single_Command_with_Ansible_Shell
- Shell: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html
- Shell: https://www.middlewareinventory.com/blog/ansible-shell-examples/#Example_7_Execute_multiple_commands_in_a_Single_Shell_Play
- Shell - multiple commands: https://stackoverflow.com/questions/24851575/ansible-how-to-pass-multiple-commands

- Yum: https://docs.ansible.com/ansible/2.3/yum_module.html#examples

Sed:
- http://www.yourownlinux.com/2015/04/sed-command-in-linux-append-and-insert-lines-to-file.html
- https://stackoverflow.com/questions/17998763/sed-commenting-a-line-matching-a-specific-string-and-that-is-not-already-comme/17999003
- https://www.cyberciti.biz/faq/how-to-use-sed-to-find-and-replace-text-in-files-in-linux-unix-shell/

Ansible playbooks:
- Docker: https://faun.pub/configuring-docker-using-ansible-8dc1d9df3f69
- Docker: https://gist.github.com/yonglai/d4617d6914d5f4eb22e4e5a15c0e9a03

==============
PREP MODEL VM
==============

----------------------------
VM BASIC SETTINGS
----------------------------
VM hostname: k9sv112model
Memory: 2048 MB (2GB)
Vbox network: vboxnet0
Adapter type: host-only
Adapter name in VM: enp0s8
IP: 192.168.88.100 (pingable from laptop) (set using nmtui command in VM)

----------------------------
COPY SSH PUBLIC KEY TO VM
----------------------------
Copy SSH public key to vm for passwordless logon for manual and Ansible work from laptop.

laptop$ scp id_rsa.pub.gdby root@192.168.99.100:/root/.ssh/authorized-keys
--> asks for root password and then copies it

Try logon now without password:
laptop$ ssh-add ~/.ssh/id_rsa.gdby (the private key)
laptop$ ssh root@192.168.99.100
[root@k9sv112model ~]# 

---------------------------------
DISABLE SELINUX
---------------------------------
# setenforce 0

Edit the file /etc/sysconfig/selinux (or /etc/selinux/config) and set enforcing as disabled

---------------------------------
DISABLE SWAP
---------------------------------
# swapoff -a

Edit /etc/fstab and comment out line of swap
#/dev/mapper/ol-swap     swap                    swap    defaults        0 0

---------------------------------
ENABLE br_netfilter
---------------------------------
# modprobe br_netfilter
# echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

Also, put it in /etc/sysctl.conf as follows:
net.bridge.bridge-nf-call-iptables = 1

And, make it persistent:
# sysctl -p

---------------------------------------
INSTALL DOCKER-CE (community edition)
---------------------------------------
- FIRST INSTALL CONTAINER-SELINUX > v2.9 --> say, 2.119
http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.119.1-1.c57a6f9.el7.noarch.rpm
(perviously had used in 2019: http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.68-1.el7.noarch.rpm)

--> Download this, and then do: (dont do rpm -ivh container-selinux-2.74-1.el7.noarch.rpm)
# yum install -y container-selinux-2.119.1-1.c57a6f9.el7.noarch.rpm

- INSTALL DOCKER
Check, and install if needed - dependencies with the following command:
# yum install -y yum-utils device-mapper-persistent-data lvm2

Next, add the Docker-ce repository with the command:
# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

Install Docker-ce with the command:
# yum install -y docker-ce

- ENABLE DOCKER SERVICE
# systemctl enable docker

- START DOCKER
# service docker start

- CHECK CGROUP
# docker info | grep -i cgroup
Cgroup Driver: cgroupfs

----------------------------------------
INSTALL CFSSL - TO GENERATE CERTIFICATES
----------------------------------------
https://blog.inkubate.io/deploy-kubernetes-1-9-from-scratch-on-vmware-vsphere/

Installation of cfssl
1- Download the binaries.

$ wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
$ wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
2- Add the execution permission to the binaries.

$ chmod +x cfssl*
3- Move the binaries to /usr/local/bin.

$ sudo mv cfssl_linux-amd64 /usr/local/bin/cfssl
$ sudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson
4- Verify the installation.

$ cfssl version

-----------------------------------
FIREWALL - FOR MASTER NODES
-----------------------------------
firewall-cmd --permanent --add-port=6443/tcp
firewall-cmd --permanent --add-port=2379-2380/tcp
firewall-cmd --permanent --add-port=10250/tcp
firewall-cmd --permanent --add-port=10251/tcp
firewall-cmd --permanent --add-port=10252/tcp
firewall-cmd --permanent --add-port=10255/tcp
firewall-cmd --reload

-----------------------------------
FIREWALL - FOR WORKER NODES
-----------------------------------
firewall-cmd --permanent --add-port=10251/tcp
firewall-cmd --permanent --add-port=10255/tcp
firewall-cmd --reload

--------
VERIFY
--------
# firewall-cmd --list-all
public (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s3 enp0s8
  sources: 
  services: ssh dhcpv6-client
  ports: 6443/tcp 2379-2380/tcp 10250/tcp 10251/tcp 10252/tcp 10255/tcp
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 

==========================================
PULL DOCKER IMAGES NEEDED FOR KUBERNETES
==========================================

----------------------------------------------------------------------
LIST OF IMAGES FROM CLUSTER WITH KUBEADM-INIT
----------------------------------------------------------------------
[root@ks1 etc]# docker images
REPOSITORY                               TAG        IMAGE ID       CREATED         SIZE
nginx                                    latest     08b152afcfae   2 weeks ago     133MB
nginx                                    <none>     4f380adfc10f   6 weeks ago     133MB
istio/proxyv2                            1.10.2     704d8c3c91a4   6 weeks ago     282MB
istio/pilot                              1.10.2     8c8ea32730d4   6 weeks ago     217MB
k8s.gcr.io/kube-apiserver                v1.21.2    106ff58d4308   7 weeks ago     126MB
k8s.gcr.io/kube-controller-manager       v1.21.2    ae24db9aa2cc   7 weeks ago     120MB
k8s.gcr.io/kube-proxy                    v1.21.2    a6ebd1c1ad98   7 weeks ago     131MB
k8s.gcr.io/kube-scheduler                v1.21.2    f917b8c8f55b   7 weeks ago     50.6MB
calico/node                              v3.19.1    c4d75af7e098   2 months ago    168MB
calico/pod2daemon-flexvol                v3.19.1    5660150975fb   2 months ago    21.7MB
calico/cni                               v3.19.1    5749e8b276f9   2 months ago    146MB
calico/kube-controllers                  v3.19.1    5d3d5ddc8605   2 months ago    60.6MB
k8s.gcr.io/pause                         3.4.1      0f8457a4c2ec   6 months ago    683kB
k8s.gcr.io/coredns/coredns               v1.8.0     296a6d5035e2   9 months ago    42.5MB
busybox                                  latest     f0b02e9d092d   9 months ago    1.23MB
nginx                                    <none>     f35646e83998   9 months ago    133MB
k8s.gcr.io/etcd                          3.4.13-0   0369cf4303ff   11 months ago   253MB
istio/examples-bookinfo-reviews-v3       1.16.2     83e6a8464b84   13 months ago   694MB
istio/examples-bookinfo-reviews-v2       1.16.2     39cff5d782e1   13 months ago   694MB
istio/examples-bookinfo-reviews-v1       1.16.2     181be23dc1af   13 months ago   694MB
istio/examples-bookinfo-ratings-v1       1.16.2     99ce598b98cf   13 months ago   161MB
istio/examples-bookinfo-details-v1       1.16.2     edf6b9bea3db   13 months ago   149MB
istio/examples-bookinfo-productpage-v1   1.16.2     7f1e097aad6d   13 months ago   207MB

-----------------------------------
PULL IMAGES
-----------------------------------

- ETCD
# docker pull quay.io/coreos/etcd:latest
or
# docker pull quay.io/coreos/etcd:v3.3

- MASTER (with additional components for workers also)
--- FOR SPECIFIC VERSIONS
https://kubernetes.io/docs/setup/release/notes/
gcr.io/google_containers/kube-proxy-amd64(and such)

docker pull gcr.io/google_containers/kube-apiserver-amd64:v1.21.2
docker pull gcr.io/google_containers/kube-scheduler-amd64:v1.21.2 
docker pull gcr.io/google_containers/kube-controller-manager-amd64:v1.21.2 
docker pull gcr.io/google_containers/kube-proxy-amd64:v1.21.2
docker pull quay.io/calico/node:v3.19.1 (https://hub.docker.com/r/calico/node/tags)
docker pull quay.io/calico/pod2daemon-flexvol:v3.19.1
docker pull quay.io/calico/cni:v3.19.1
docker pull quay.io/calico/kube-controllers:v3.19.1
docker pull k8s.gcr.io/pause:3.4.1
docker pull k8s.gcr.io/coredns/coredns:v1.8.0


-- FOR LATER
docker pull gcr.io/google-containers/kube-addon-manager-amd64:v9.0.1  (gcr.io/google_containers/kube-proxy-amd64)
docker pull gcr.io/google_containers/metrics-server-amd64:v0.3.3 
docker pull gcr.io/google-containers/rescheduler:v0.4.0 (is there a later one)
docker pull k8s.gcr.io/pause-amd64:3.1 (https://console.cloud.google.com/gcr/images/google-containers/GLOBAL/pause-amd64?gcrImageListsize=30)
docker pull coredns/coredns

# Add this to make a common image for master and woker
docker pull quay.io/jcmoraisjr/haproxy-ingress:v0.7.2
