====================================
KUBERNETES ON 3 NODES WITH PODS
====================================
OCT-NOV 2020

==========
REFERENCES
==========
Configure Centos7 Machine for Kubernetes:
https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/k8s-model-vm.txt

Ansible scripts for single-node installation:
https://github.com/coderdba-coding-org/code1/tree/master/kubernetes/kube-vbox-ans-singlenode-15.5

Past notes on 3 node cluster creation manually:
https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/install-vbox/WIP-install-as-pods-separately.txt

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- REAL MAIN DOCS
https://blog.inkubate.io/deploy-kubernetes-1-9-from-scratch-on-vmware-vsphere/  (3-node with certs -BUT WITH BINARIES)
--> Use this for concepts and CERTS 

https://medium.com/containerum/4-ways-to-bootstrap-a-kubernetes-cluster-de0d5150a1e4 (simple docker-image based cluster)
--> Includes setting up using images in 'Option 2 - self hosted'

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/container.md
  (old doc https://coreos.com/etcd/docs/latest/v2/docker_guide.html)
https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/security.md
  
--> ETCD with docker images
(ETCD Config - https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/)
(for ETCD certificates - https://blog.inkubate.io/deploy-kubernetes-1-9-from-scratch-on-vmware-vsphere/)

Also, another ETCD docker document:
https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/clustering.md
https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/clustering.md#static

https://github.com/kelseyhightower/kubernetes-the-hard-way
--> Very good with binary installs (AS IN COMPANIES)

https://blog.inkubate.io/deploy-kubernetes-1-9-from-scratch-on-vmware-vsphere/
--> Very good with binary installs (AS IN COMPANIES - NOW I AM ADAPTING THIS FOR POD BASED INSTALLS - 3 NODE)
--> on VMs (using binary installs - not docker images), separated services - like in companies
--> multiple master nodes

=======================
WHAT ALL TO INSTALL
=======================

kubelet
kubedam
kubectl

ETCD
MASTER
WORKER
FLANNEL/CALICO

======================
CIDRS
=======================

------------------------------------------------------------
CIDR FOR PODS - IS DEFINED IN CONTROLLER-MANAGER MANIFEST
------------------------------------------------------------
https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/

NOTE: This is the "--pod-network-cidr=172.16.0.0/16" in kubeadm init method
(also see https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/)

--cluster-cidr string
CIDR Range for Pods in cluster. Requires --allocate-node-cidrs to be true

------------------------------------------------------------
CIDR FOR SERVICS - IS DEFINED IN APISERVER MANIFEST
------------------------------------------------------------
https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/

NOTE: This is the "--service-cidr string" in kubeadm init method
(also see https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/)

--service-cluster-ip-range ipNet     Default: 10.0.0.0/24
A CIDR notation IP range from which to assign service cluster IPs. This must not overlap with any IP ranges assigned to nodes for pods.

------------------------------------------------------------
CAUTION (from some past learning)
------------------------------------------------------------
What is this ?????
 redo this whole thing - redo this - changing CIDR to something different from VM IPs
 (SEE CALICO NOTES FILE)
 
=================
VM REQUIREMENTS (actual setup covered later below)
=================

-------------------
VM OS, SIZING
-------------------
OS: Centos 7.6
# cat centos-release
CentOS Linux release 7.6.1810 (Core) 

Memory: 3GB (or 2GB may work too)
Disk: 50GB

-----------
MACHINES
-----------
K0 - HA Proxy for master (optional)
K1, K2, K3 - etcd, master, worker - all in one

----------------------
IP ADDRESSES
----------------------
K0 - 192.168.40.100 (optional machine)
K1 - 192.168.40.101
K2 - 192.168.40.102
K3 - 192.168.40.103

------------------------------------
K8S SOFTWARE & DOCKER IMAGES
------------------------------------
- SOFTWRAE
kubectl-1.15.5-0
kubelet-1.15.5-0
kubeadm-1.15.5-0
kubernetes-cni-0.7.5-0

- DOCKER IMAGES
Reference: https://github.com/coderdba-coding-org/code1/blob/master/kubernetes/kube-vbox-ans-singlenode-15.5/group_vars/all/vars
docker pull gcr.io/google_containers/kube-apiserver-amd64:v1.15.5
docker pull gcr.io/google_containers/kube-controller-manager-amd64:v1.15.5
docker pull gcr.io/google_containers/kube-scheduler-amd64:v1.15.5
docker pull gcr.io/google-containers/kube-proxy-amd64:v1.15.5
docker pull k8s.gcr.io/k8s-dns-kube-dns:1.14.13
docker pull k8s.gcr.io/k8s-dns-dnsmasq-nanny:1.14.13
docker pull k8s.gcr.io/k8s-dns-sidecar:1.14.13
docker pull quay.io/coreos/etcd:v3.3.10 
docker pull quay.io/coreos/flannel:v0.11.0-amd64

============================
CONFIGURE THE MODEL MACHINE
============================
REFERENCE:
Configure Centos7 Machine for Kubernetes:
https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/k8s-model-vm.txt

------------------
CONFIGURE MACHINE
------------------
- HOSTNAME
# hostnamectl set-hostname k8s155

- IP ADDRESS (to be used by Kubernetes)
NOTE: If editing existing wired connection (of enp0s8) using nmtui becomes messy, 
	Remove the file /etc/sysconfig/network-scripts/ifcfg-Wired_connection_1 (or move it out of its folder)
	Stop the vm, change mac address of the second adapter in Virtualbox console
	Start the vm, and then edit the connection newly - it would have gotten a dhcp automatic address - make it 'manual' and change the IP
	
Use 'nmtui' command
Edit enp0s8 or "Wired Connection 1" (or other) that point to enp0s8

Set IP for = enp0s8 192.168.40.100 netmask 255.255.255.0

Add the IP to /etc/hosts
# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
192.168.40.100 k8s155
192.168.40.101 k1
192.168.40.102 k2
192.168.40.103 k3
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

Restart the machine and ensure hostname and IPs show up.
# hostname
# ifconfig enp0s8

-----------------------------------
FIREWALL - FOR MASTER NODES
-----------------------------------
firewall-cmd --permanent --add-port=6443/tcp
firewall-cmd --permanent --add-port=2379-2380/tcp
firewall-cmd --permanent --add-port=10250/tcp
firewall-cmd --permanent --add-port=10251/tcp
firewall-cmd --permanent --add-port=10252/tcp
firewall-cmd --permanent --add-port=10255/tcp
firewall-cmd --reload

-----------------------------------
FIREWALL - FOR WORKER NODES
-----------------------------------
firewall-cmd --permanent --add-port=10251/tcp
firewall-cmd --permanent --add-port=10255/tcp
firewall-cmd --reload

------------------------
UPDATE CA CERTIFICATES
------------------------
https://github.com/kubernetes/kubernetes/issues/43924
# yum check-update ca-certificates; (($?==100)) && yum update ca-certificates || yum reinstall ca-certificates 
# update-ca-trust extract

--------------------
INSTALL DOCKER
--------------------
Follow: https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/k8s-model-vm.txt
Then, for docker, Follow: https://github.com/coderdba/NOTES/edit/master/docker-kb/install-config-oel-2019.txt

      Add sslverify=0 to /etc/yum.conf to prevent "Peer's Certificate issuer is not recognized."
      # yum install -y yum-utils device-mapper-persistent-data lvm2
      # yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      
      # yum install -y http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.74-1.el7.noarch.rpm
      
      # yum install docker-ce-18.03.1.ce-1.el7.centos
            This may install a new version of container-selinux

            Dependencies Resolved

            ========================================================================================================================
             Package                      Arch              Version                               Repository                   Size
            ========================================================================================================================
            Installing:
             docker-ce                    x86_64            18.03.1.ce-1.el7.centos               docker-ce-stable             35 M
            Installing for dependencies:
             container-selinux            noarch            2:2.119.2-1.911c772.el7_8             extras                       40 k
             pigz                         x86_64            2.3.3-1.el7.centos                    extras                       68 k

            Transaction Summary
            ========================================================================================================================
            Install  1 Package (+2 Dependent packages)

	# systemctl enable docker
	# systemctl start docker
	# systemctl status docker

----------------------------------------
INSTALL cfssl to generate certificates
----------------------------------------
Follow: https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/k8s-model-vm.txt

------------------------------------------------------
INSTALL KUBERNETES SOFTWARE AND DOCKER IMAGES
------------------------------------------------------
Scripts: 
- Yum Installs: https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/1.15.5/kube-installs.sh
- Docker Pulls: https://github.com/coderdba/NOTES/blob/master/kubernetes-kb/kub-machines/1.15.5/image-pulls.sh

- ADD KUBERNETES YUM REPO
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg 
	https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

- INSTALL SOFTWARE
echo INFO - installing kubelet
yum install -y kubelet-1.15.5-0

echo INFO - installing kubectl
yum install -y kubectl-1.15.5-0

echo INFO - installing kubeadm
yum install -y kubeadm-1.15.5-0

echo INFO - installing kubernetes-cni
yum install kubernetes-cni-0.7.5-0

echo
echo
echo verifying
echo
rpm -qa |grep kube
which kubelet
which kubectl
which kubeadm

- PULL DOCKER IMAGES
docker pull quay.io/coreos/etcd:v3.3.10
docker pull quay.io/coreos/etcd:v3.2.24

docker pull gcr.io/google_containers/kube-apiserver-amd64:v1.15.5
docker pull gcr.io/google_containers/kube-scheduler-amd64:v1.15.5 
docker pull gcr.io/google_containers/kube-controller-manager-amd64:v1.15.5
docker pull gcr.io/google_containers/kube-proxy-amd64:v1.15.5
docker pull k8s.gcr.io/pause-amd64:3.1 

docker pull k8s.gcr.io/k8s-dns-kube-dns:1.14.13
docker pull k8s.gcr.io/k8s-dns-dnsmasq-nanny:1.14.13
docker pull k8s.gcr.io/k8s-dns-sidecar:1.14.13

# being used with kubernetes 1.12.8
docker pull quay.io/coreos/flannel:v0.9.0-amd64 

# latest as in kube-flannel.yml 
docker pull quay.io/coreos/flannel:v0.11.0-amd64 

# some other images for testing and utility
docker pull busybox
docker pull nginx

echo
echo
echo VERIFY
echo
docker images

REPOSITORY                                               TAG                 IMAGE ID            CREATED             SIZE
busybox                                                  latest              f0b02e9d092d        6 weeks ago         1.23MB
nginx                                                    latest              f35646e83998        6 weeks ago         133MB
gcr.io/google_containers/kube-controller-manager-amd64   v1.15.5             1399a72fa1a9        13 months ago       159MB
gcr.io/google_containers/kube-proxy-amd64                v1.15.5             cbd7f21fec99        13 months ago       82.4MB
gcr.io/google_containers/kube-apiserver-amd64            v1.15.5             e534b1952a0d        13 months ago       207MB
gcr.io/google_containers/kube-scheduler-amd64            v1.15.5             fab2dded59dd        13 months ago       81.1MB
quay.io/coreos/flannel                                   v0.11.0-amd64       ff281650a721        22 months ago       52.6MB
quay.io/coreos/etcd                                      v3.3.10             643c21638c1c        2 years ago         39.5MB
k8s.gcr.io/k8s-dns-sidecar                               1.14.13             4b2e93f0133d        2 years ago         42.9MB
k8s.gcr.io/k8s-dns-kube-dns                              1.14.13             55a3c5209c5e        2 years ago         51.2MB
k8s.gcr.io/k8s-dns-dnsmasq-nanny                         1.14.13             6dc8ef8287d3        2 years ago         41.4MB
quay.io/coreos/etcd                                      v3.2.24             1ca16a54d196        2 years ago         37.3MB
k8s.gcr.io/pause-amd64                                   3.1                 da86e6ba6ca1        2 years ago         742kB
quay.io/coreos/flannel                                   v0.9.0-amd64        4c600a64a18a        3 years ago         51.3MB

===================
===================


