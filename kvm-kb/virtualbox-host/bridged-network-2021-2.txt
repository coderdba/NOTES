===========================================
CREATE A BRIDGED NETWORK AND A VM USING IT
===========================================

Main Reference: https://linuxconfig.org/how-to-use-bridged-networking-with-libvirt-and-kvm
- has virsh net-define step also

============================
REMOVE EXISTING BRIDGE 
============================
https://unix.stackexchange.com/questions/31763/bring-down-and-delete-bridge-interface-thats-up

---------------------
CHECK
---------------------
# brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.080027fd2ba9	yes		enp0s9
							vnet0
virbr0		8000.52540008e8f5	yes		virbr0-nic

# virsh net-list
Name                 State      Autostart     Persistent
----------------------------------------------------------
 br0                  active     yes           yes
 default              active     yes           yes

# ifconfig br0
br0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet6 fe80::a00:27ff:fefd:2ba9  prefixlen 64  scopeid 0x20<link>
        ether 08:00:27:fd:2b:a9  txqueuelen 1000  (Ethernet)
        RX packets 4429  bytes 365896 (357.3 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 8  bytes 656 (656.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

# ip a
4: enp0s9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::a00:27ff:fefd:2ba9/64 scope link 
       valid_lft forever preferred_lft forever
5: enp0s10: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 08:00:27:36:af:81 brd ff:ff:ff:ff:ff:ff
    inet 192.168.40.101/24 brd 192.168.40.255 scope global noprefixroute enp0s10
       valid_lft forever preferred_lft forever
    inet6 fe80::e148:ad98:75ab:9718/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
6: br0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::a00:27ff:fefd:2ba9/64 scope link 

---------------------
BACKUP STUFF
--------------------- 
# mkdir /root/bak

# cd /etc/libvirt/qemu/networks
# cp -p br0.xml /root/bak/br0.xml.bak
# cp -p br0.xml /root/bak/br0.xml

# cd /etc/sysconfig/network-scripts
# cp ifcfg-br0 /root/bak
# cp ifcfg-bridge-br0 /root/bak

---------------------
REMOVE
---------------------    
# ip link set br0 down
# brctl delbr br0
# ip link delete br0 type bridge (not sure if this is required or syntax is correct)

- VERIFY
# brctl show
bridge name	bridge id		STP enabled	interfaces
virbr0		8000.52540008e8f5	yes		virbr0-nic

# ip a
--> initially br0 appeared - and then it went away
4: enp0s9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::a00:27ff:fefd:2ba9/64 scope link 
       valid_lft forever preferred_lft forever
6: br0: <BROADCAST,MULTICAST> mtu 1500 qdisc noqueue state DOWN group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff

===========================
CREATE BRIDGED NETWORK
===========================
https://linuxconfig.org/how-to-use-bridged-networking-with-libvirt-and-kvm#h3-1-creating-a-new-bridge

- CREATE BRIDGE
# ip link add br0 type bridge

- VERIFY
# ip a
12: br0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether 9e:e3:9a:64:f2:42 brd ff:ff:ff:ff:ff:ff
    
# ip link show type bridge
7: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default qlen 1000
    link/ether 52:54:00:08:e8:f5 brd ff:ff:ff:ff:ff:ff
12: br0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 9e:e3:9a:64:f2:42 brd ff:ff:ff:ff:ff:ff
    
# brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.000000000000	no		
virbr0		8000.52540008e8f5	yes		virbr0-nic

- Adding a physical ethernet interface to the bridge
Here, to the bridge, we associate a physical network card.
Using enp0s9 which is one of the virtual network card of the Vbox VM 'host'.

-- Bring up the card
# ip link set enp0s9 up

# ip a
4: enp0s9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::a00:27ff:fefd:2ba9/64 scope link 

-- Add the interface to the bridge
# ip link set enp0s9 master br0

--  Verify the interface was added to the bridge, instead:
# ip link show master br0
--> Now you can see 'br0' associated with enp0s9 - which was not showing up earlier
4: enp0s9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast master br0 state UP mode DEFAULT group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff

-- Verify with 'ip a'
# ip a
--> Now you can see 'br0' associated with enp0s9 - which was not showing up earlier
4: enp0s9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::a00:27ff:fefd:2ba9/64 scope link 
       valid_lft forever preferred_lft forever
12: br0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff

-- Verify with brctl show
# brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.080027fd2ba9	no		enp0s9
virbr0		8000.52540008e8f5	yes		virbr0-nic

- Assign IP Address to br0
-- Check before
# ip addr show br0
12: br0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff

-- List the settings of the Virtualbox network and dhcp server for this enp0s9 card
192.168.98.0/24 --> vboxnet3 has 192.168.98.1/24 as its IP Address and Mask
Its dhcp server:
Server IP 192.168.98.2
Server mask 255.255.255.0
Lower address bound 192.168.98.3
Upper address bound 192.168.98.254

-- Verify connecting to vboxnet3 and its dhcp server (from within the host VM)
[root@kvm202101 network-scripts]# ping 192.168.98.1
PING 192.168.98.1 (192.168.98.1) 56(84) bytes of data.
64 bytes from 192.168.98.1: icmp_seq=1 ttl=63 time=0.438 ms
64 bytes from 192.168.98.1: icmp_seq=2 ttl=63 time=0.322 ms

[root@kvm202101 network-scripts]# ping 192.168.98.2
PING 192.168.98.2 (192.168.98.2) 56(84) bytes of data.
64 bytes from 192.168.98.2: icmp_seq=1 ttl=63 time=0.384 ms
64 bytes from 192.168.98.2: icmp_seq=2 ttl=63 time=0.413 ms

-- Now, Assign a static IP address to the bridge
# ip address add dev br0 192.168.98.171/24

# ip a
12: br0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether 08:00:27:fd:2b:a9 brd ff:ff:ff:ff:ff:ff
    inet 192.168.98.171/24 scope global br0
       valid_lft forever preferred_lft forever

- Make changes persistent
# cd /etc/sysconfig/network-scripts
# vi ifcfg-br0
DEVICE=br0
TYPE=Bridge
BOOTPROTO=none
IPADDR=192.168.98.171
GATEWAY=192.168.98.1
NETMASK=255.255.255.0
ONBOOT=yes
DELAY=0
NM_CONTROLLED=0

# vi ifcfg-enp0s9
TYPE=ethernet
BOOTPROTO=none
NAME=enp0s9
DEVICE=enp0s9
ONBOOT=yes
BRIDGE=br0
DELAY=0
NM_CONTROLLED=0

-- Enable network service
# systemctl enable network
# chkconfig network on
# systemctl restart network --> this 'failed' - not sure what all failed

- Disabling netfilter for the bridge
Disabling netfilter for the bridge
To allow all traffic to be forwarded to the bridge, and therefore to the virtual machines connected to it, we need to disable netfilter. 
This is necessary, for example, for DNS resolution to work in the guest machines attached to the bridge. 
To do this we can create a file with the .conf extension inside the /etc/sysctl.d directory, letâ€™s call it 99-netfilter-bridge.conf. 
Inside of it we write the following content.


# vi /etc/sysctl.d/99-netfilter-bridge.conf
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0

Also, should we add another line: (per https://serverfault.com/questions/562871/kvm-guest-can-not-connect-to-outside-of-host-vice-versa)
net.ipv4.ip_forward = 1

# modprobe br_netfilter

# vi /etc/modules-load.d/br_netfilter.conf
br_netfilter

- Creating a new virtual network
-- Remove any existing virtual network of the same name
# virsh net-list
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 br0                  active     yes           yes
 default              active     yes           yes
 
# virsh net-destroy br0
Network br0 destroyed

# virsh net-undefine  br0
Network br0 has been undefined

# virsh net-list
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 default              active     yes           yes

-- Create config file
# vi /etc/libvirt/qemu/networks/br0.xml
<network>
    <name>br0</name>
    <forward mode="bridge" />
    <bridge name="br0" />
</network>

-- Create the virtual network
# virsh net-define /etc/libvirt/qemu/networks/br0.xml
Network br0 defined from /etc/libvirt/qemu/networks/br0.xml

# virsh net-start br0
Network br0 started

# virsh net-autostart br0
Network br0 marked as autostarted

# virsh net-list
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 br0                  active     yes           yes
 default              active     yes           yes

# cat /etc/libvirt/qemu/networks/br0.xml
--> You can see that this file now has a UUID and some comments

<!--
WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE
OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:
  virsh net-edit br0
or other application using the libvirt API.
-->

<network>
  <name>br0</name>
  <uuid>dc5745f2-8114-4f75-ba74-7e683f8d5b68</uuid>
  <forward mode='bridge'/>
  <bridge name='br0'/>
</network>

===================================
CREATE A KVM VM
===================================
virt-install --import --name centos71 \
--memory 256 --vcpus 1 --cpu host \
--disk /disk1/kvm-vms/centos71/centos71-root.qcow2,format=qcow2,bus=virtio \
--disk /disk1/kvm-vms/centos71/centos71-seed.iso,device=cdrom \
--network bridge=br0,model=virtio \
--os-type=linux \
--os-variant=rhel7 \
--noautoconsole \

- other examples
$ sudo virt-install \
  --vcpus=1 \
  --memory=1024 \
  --cdrom=debian-10.8.0-amd64-DVD-1.iso \
  --disk size=7 \
  --os-variant=debian10 \
  --network network=bridged-network


# virsh console centos71
username: root
password: secret (or other that has been set)

Then, inside the vm
# cd /etc/sysconfig/network-scripts
# cp -p ifcfg-eth0 ifcfg-eth0.0
# cat ifcfg-eth0
# Created by cloud-init on instance boot automatically, do not edit.
#
BOOTPROTO=dhcp
DEVICE=eth0
HWADDR=52:54:00:e9:e4:c9
ONBOOT=yes
TYPE=Ethernet
USERCTL=no

# vi ifcfg-eth0
--> Remove HWADDR=52:54:00:e9:e4:c9
--> Otherwise, ifup eth0 gives error "unexpected mac address" or something
# Created by cloud-init on instance boot automatically, do not edit.
#
BOOTPROTO=dhcp
DEVICE=eth0
ONBOOT=yes
TYPE=Ethernet
USERCTL=no

# ifup eth0

# ip a
[root@centos71 network-scripts]# ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 52:54:00:5a:a5:70 brd ff:ff:ff:ff:ff:ff
    inet 192.168.98.10/24 brd 192.168.98.255 scope global dynamic eth0
       valid_lft 456sec preferred_lft 456sec
    inet6 fe80::5054:ff:fe5a:a570/64 scope link 
       valid_lft forever preferred_lft forever

[root@centos71 network-scripts]# ifup eth0

Determining IP information for eth0... done.

[root@centos71 network-scripts]# ip a
--> Note that it has gotten the IP 192.168.98.10 of range of the br0's enps09 interface which is tied to vmnet3 of vbox which gives ip range of 192.168.98.x

1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 52:54:00:5a:a5:70 brd ff:ff:ff:ff:ff:ff
    inet 192.168.98.10/24 brd 192.168.98.255 scope global dynamic eth0
       valid_lft 595sec preferred_lft 595sec
    inet6 fe80::5054:ff:fe5a:a570/64 scope link 
       valid_lft forever preferred_lft forever

- Logon to VM using ssh keys
On host:
# cd ~/.ssh
# ssh-add <private key file>

[root@kvm202101 .ssh]# ssh gm@192.168.98.10
[gm@centos71 ~]$ 
[gm@centos71 ~]$ 
[gm@centos71 ~]$ 
[gm@centos71 ~]$ id
uid=1000(gm) gid=1000(gm) groups=1000(gm),0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023

- Check pings from VM
[gm@centos71 ~]$ ping 192.168.98.171
--> the host's bridge br0's IP
PING 192.168.98.171 (192.168.98.171) 56(84) bytes of data.
64 bytes from 192.168.98.171: icmp_seq=1 ttl=64 time=0.381 ms
64 bytes from 192.168.98.171: icmp_seq=2 ttl=64 time=0.442 ms

[gm@centos71 ~]$ ping 192.168.98.1 
--> the vbox vmnet3 ip
[gm@centos71 ~]$ ping 192.168.98.1
PING 192.168.98.1 (192.168.98.1) 56(84) bytes of data.
From 192.168.98.10 icmp_seq=1 Destination Host Unreachable
From 192.168.98.10 icmp_seq=2 Destination Host Unreachable

[gm@centos71 ~]$ ping 192.168.98.2
--> the vbox dhcp server IP
PING 192.168.98.2 (192.168.98.2) 56(84) bytes of data.
From 192.168.98.10 icmp_seq=1 Destination Host Unreachable
From 192.168.98.10 icmp_seq=2 Destination Host Unreachable

[gm@centos71 ~]$ ping 192.168.40.101
--> Host's other IP of the other card enp0s8 or enp0s10
connect: Network is unreachable

- TBD
Still the VM centos71 is not pinging outside world, or VBOX's vmnet3 IP or dhcp server IP or www.google.com

======================================================================
FIX ETH0 TO BE ABLE TO PING OUTSIDE WORLD (TBD - STILL TRYING)
======================================================================
On the VM:
# vi ifcfg-eth0
--> Add GATEWAY=<IP of bridge network on host>
# Created by cloud-init on instance boot automatically, do not edit.
#
BOOTPROTO=dhcp
DEVICE=eth0
ONBOOT=yes
TYPE=Ethernet
USERCTL=no
GATEWAY=192.168.98.171

[root@centos71 network-scripts]# ping 192.168.40.101
--> ping the IP of other network card of the host
PING 192.168.40.101 (192.168.40.101) 56(84) bytes of data.
64 bytes from 192.168.40.101: icmp_seq=1 ttl=64 time=0.311 ms
64 bytes from 192.168.40.101: icmp_seq=2 ttl=64 time=0.385 ms

On host:
# [root@kvm202101 ~]# arp -n
Address                  HWtype  HWaddress           Flags Mask            Iface
192.168.98.10            ether   52:54:00:5a:a5:70   C                     br0
10.0.2.3                 ether   52:54:00:12:35:03   C                     enp0s3
192.168.99.1             ether   0a:00:27:00:00:00   C                     enp0s8
192.168.98.1             ether   0a:00:27:00:00:03   C                     br0

- Still, cannot ping outside hosts like Vbox vmnet or google.com etc

- IPTABLES of HOST
[root@kvm202101 etc]# iptables -vnL
Chain INPUT (policy ACCEPT 1079 packets, 188K bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     udp  --  virbr0 *       0.0.0.0/0            0.0.0.0/0            udp dpt:53
    0     0 ACCEPT     tcp  --  virbr0 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:53
    0     0 ACCEPT     udp  --  virbr0 *       0.0.0.0/0            0.0.0.0/0            udp dpt:67
    0     0 ACCEPT     tcp  --  virbr0 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:67

Chain FORWARD (policy ACCEPT 53 packets, 3910 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     all  --  *      virbr0  0.0.0.0/0            192.168.122.0/24     ctstate RELATED,ESTABLISHED
    0     0 ACCEPT     all  --  virbr0 *       192.168.122.0/24     0.0.0.0/0           
    0     0 ACCEPT     all  --  virbr0 virbr0  0.0.0.0/0            0.0.0.0/0           
    0     0 REJECT     all  --  *      virbr0  0.0.0.0/0            0.0.0.0/0            reject-with icmp-port-unreachable
    0     0 REJECT     all  --  virbr0 *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-port-unreachable

Chain OUTPUT (policy ACCEPT 1153 packets, 113K bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     udp  --  *      virbr0  0.0.0.0/0            0.0.0.0/0            udp dpt:68

- CONSOLE OUTPUT OF VM BUILD
--> See the route info 192.168.98.0

         Starting Postfix Mail Transport Agent...
[  130.053260] cloud-init[838]: Cloud-init v. 18.2 running 'init' at Fri, 11 Jun 2021 14:50:08 +0000. Up 129.62 seconds.
[  132.442446] cloud-init[838]: ci-info: +++++++++++++++++++++++++++++++Net device info+++++++++++++++++++++++++++++++
[  132.504955] cloud-init[838]: ci-info: +--------+------+---------------+---------------+-------+-------------------+
[  132.612498] cloud-init[838]: ci-info: | Device |  Up  |    Address    |      Mask     | Scope |     Hw-Address    |
[  132.700006] cloud-init[838]: ci-info: +--------+------+---------------+---------------+-------+-------------------+
[  132.800736] cloud-init[838]: ci-info: | eth0:  | True | 192.168.98.11 | 255.255.255.0 |   .   | 52:54:00:4f:8a:2e |
[  132.887308] cloud-init[838]: ci-info: | eth0:  | True |       .       |       .       |   d   | 52:54:00:4f:8a:2e |
[  132.982262] cloud-init[838]: ci-info: |  lo:   | True |   127.0.0.1   |   255.0.0.0   |   .   |         .         |
[  133.085758] cloud-init[838]: ci-info: |  lo:   | True |       .       |       .       |   d   |         .         |
[  133.189834] cloud-init[838]: ci-info: +--------+------+---------------+---------------+-------+-------------------+
[  133.278693] cloud-init[838]: ci-info: +++++++++++++++++++++++++++Route IPv4 info++++++++++++++++++++++++++++
[  133.360774] cloud-init[838]: ci-info: +-------+--------------+---------+---------------+-----------+-------+
[  133.447429] cloud-init[838]: ci-info: | Route | Destination  | Gateway |    Genmask    | Interface | Flags |
[  133.545462] cloud-init[838]: ci-info: +-------+--------------+---------+---------------+-----------+-------+
[  133.638972] cloud-init[838]: ci-info: |   0   | 169.254.0.0  | 0.0.0.0 |  255.255.0.0  |    eth0   |   U   |
[  133.732508] cloud-init[838]: ci-info: |   1   | 192.168.98.0 | 0.0.0.0 | 255.255.255.0 |    eth0   |   U   |
[  133.824144] cloud-init[838]: ci-info: +-------+--------------+---------+---------------+-----------+-------+
[  136.487445] cloud-init[838]: 2021-06-11 14:50:15,446 - main.py[WARNING]: Stdout, stderr changing to (>> /var/log/cloud-init.log, >> /var/log/cloud-init.log)
[  OK  ] Started Dynamic System Tuning Daemon.
         Starting Hostname Service...
[  OK  ] Started Hostname Service.
[  OK  ] Started Postfix Mail Transport Agent.
