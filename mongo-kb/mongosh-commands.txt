===========================
MONGOSH
===========================
https://www.w3schools.com/mongodb/mongodb_mongosh_create_collection.php
https://www.mongodb.com/docs/mongodb-shell/run-commands/

C:\Windows\system32>mongosh
Current Mongosh Log ID: 63db5dc658eb2496b30ac780
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.1.9
Using MongoDB:          5.0.6
Using Mongosh:          1.1.9

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting:
   2023-01-30T10:22:13.449+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> 
test> db
test

CREATE DB
test> use osquery1
switched to db osquery1

osquery1> db
osquery1

CREATE COLLECTION (NOW DB ACTUALLY GETS CREATED)
osquery1> db.createCollection("cpuUsage")
{ ok: 1 }

osquery1> show collections;
cpuUsage

osquery1> db.cpuUsage.findOne()
null

INSERT WITH TIMESTAMP FIELD
Example: 
db.addCurrentDateTimeDemo.update( { _id: 1 }, { $set: { StudentName: "Robert" }, $setOnInsert: { StudentAdmissiondate: new Date() } }, { upsert: true } );

NOTE: This $setOnInsert is not for "insert" statements - it is more for upsert statements
      So, this will insert a field $setOnInsert rather than setting TimeStamp upon insert
osquery1> db.cpuUsage.insertOne({Server: "server1", $setOnInsert: {TimeStamp: new Date()}, busyPercent: 80});
{
  acknowledged: true,
  insertedId: ObjectId("63db7d0f94e4374b2ba7fbe6")
}

osquery1> db.cpuUsage.findOne();
{
  _id: ObjectId("63db7d0f94e4374b2ba7fbe6"),
  Server: 'server1',
  '$setOnInsert': { TimeStamp: ISODate("2023-02-02T09:06:23.954Z") },
  busyPercent: 80
}

This is an insert statement
osquery1> db.cpuUsage.insertOne({Server: "server1", TimeStamp: new Date(), busyPercent: 80});


