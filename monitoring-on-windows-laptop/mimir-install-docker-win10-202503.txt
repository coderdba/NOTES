========================================================
MIMIR INSTALL ON DOCKER ON WINDOWS 10 - 202503
========================================================
https://grafana.com/docs/mimir/latest/get-started/
https://grafana.com/docs/mimir/latest/references/http-api/#index-page

docker pull grafana/mimir:2.15.1

Create a config file: D:\etc\mimir\demo.yaml:

# Do not use this configuration in production.
# It is for demonstration purposes only.
multitenancy_enabled: false

blocks_storage:
  backend: filesystem
  bucket_store:
    sync_dir: D:\etc\mimir\tsdb-sync
  filesystem:
    dir: D:\etc\mimir\data\tsdb
  tsdb:
    dir: D:\etc\mimir\tsdb

compactor:
  data_dir: D:\etc\mimir\compactor
  sharding_ring:
    kvstore:
      store: memberlist

distributor:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist

ingester:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist
    replication_factor: 1

ruler_storage:
  backend: filesystem
  filesystem:
    dir: D:\etc\mimir\rules

server:
  http_listen_port: 9009
  log_level: error

store_gateway:
  sharding_ring:
    replication_factor: 1

- LINUX (from doc)
# Do not use this configuration in production.
# It is for demonstration purposes only.
multitenancy_enabled: false

blocks_storage:
  backend: filesystem
  bucket_store:
    sync_dir: /tmp/mimir/tsdb-sync
  filesystem:
    dir: /tmp/mimir/data/tsdb
  tsdb:
    dir: /tmp/mimir/tsdb

compactor:
  data_dir: /tmp/mimir/compactor
  sharding_ring:
    kvstore:
      store: memberlist

distributor:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist

ingester:
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: memberlist
    replication_factor: 1

ruler_storage:
  backend: filesystem
  filesystem:
    dir: /tmp/mimir/rules

server:
  http_listen_port: 9009
  log_level: error

store_gateway:
  sharding_ring:
    replication_factor: 1

limits:
  # Delete from storage metrics data older than 1 year.
  #compactor_blocks_retention_period: 1y
  # Delete from storage metrics data older than 1 year.
  compactor_blocks_retention_period: 1d

-----------------
START
-----------------
docker network create grafanet

docker run ^
  -d ^
  --name mimir ^
  --network grafanet ^
  --publish 9009:9009 ^
  --volume D:\etc\mimir\demo.yaml:/etc/mimir/demo.yaml ^
  grafana/mimir:2.15.1 ^
  --config.file=/etc/mimir/demo.yaml

- LINUX
docker run \
  --rm \
  --name mimir \
  --network grafanet \
  --publish 9009:9009 \
  --volume "$(pwd)"/demo.yaml:/etc/mimir/demo.yaml grafana/mimir:latest \
  --config.file=/etc/mimir/demo.yaml

----------------------
WEB ACCESS
----------------------
http://localhost:9009
http://mimir:9009 --> using docker network's identifier for mimir container
http://localhost:9009/config --> view config settings - cannot exec -ti to container to view config file

------------------------------------------------------------------
Configure Prometheus to write to Grafana Mimir
------------------------------------------------------------------
Add the following YAML snippet to your Prometheus configuration file and restart the Prometheus server:

remote_write:
  - url: http://localhost:9009/api/v1/push

------------------------------------------------------------------
Configure Grafana agent to write to Grafana Mimir
------------------------------------------------------------------

In Grafana agent's config file, add the remote_write section under metrics-->global section and restart the service/container.

server:
  log_level: warn
metrics:
  wal_directory: C:\ProgramData\grafana-agent-wal
  global:
    scrape_interval: 1m
    remote_write:
      - url: http://localhost:9009/api/v1/push
  configs:
    - name: integrations

integrations:
  windows_exporter:
    enabled: true

------------------------------------------------------------------
Configure Grafana UI to read from mimir
------------------------------------------------------------------
Add Grafana Mimir as a Prometheus data source:

In a browser, go to the Grafana server at http://localhost:3000/datasources.
Sign in using the default username admin and password admin.

Configure a new Prometheus data source to query the local Grafana Mimir server using the following settings:
Name	Mimir
URL	http://mimir:9009/prometheus if you used Docker / http://localhost:9009/prometheus if you used local binary
