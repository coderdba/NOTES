===============
TUNING SQLs
===============
https://git.target.com/Data-Performance-and-Efficiency/Oracle-perf-dashboards/blob/master/oracle_metrics_rac.py
v$sysmetric  --> select METRIC_NAME,VALUE,METRIC_UNIT from v$sysmetric where group_id=2
v$osstat --> select STAT_NAME,VALUE from v$osstat
v$eventmetric, v$event_name
v$waitclassmetric, v$system_wait_class 

High IO on node1 on 4 Aug 2021 at around 1;45 AM CT
	- Due to hot backup of datafiles
	- select inst_id, opname, target, username from gv$session_longops where opname = 'RMAN: incremental datafile backup'

Full Table Scan (FTS) from v$session_longops
SQL> select distinct OPNAME from gv$session_longops;

OPNAME
----------------------------------------------------------------
Table Scan
Rowid Range Scan
Sort Output
Hash Join
RMAN: incremental datafile backup

select inst_id, sid, serial#, opname, totalwork, elapsed_seconds, time_remaining, username, sql_address, sql_id, sql_plan_hash_value
from gv$session_longops where opname = 'Table Scan'
/


  1  select inst_id, totalwork,
  2  --sid, serial#, opname, totalwork,
  3  elapsed_seconds, time_remaining, username, sql_address, sql_id, sql_plan_hash_value
  4  from gv$session_longops where opname = 'Table Scan'
  5* order by totalwork desc
SQL> /



  1  select inst_id, totalwork,
  2  --sid, serial#, opname, totalwork,
  3  elapsed_seconds, time_remaining, username, sql_address, sql_id, sql_plan_hash_value
  4  from gv$session_longops where opname = 'Table Scan'
  5* order by elapsed_seconds + time_remaining desc
SQL> /

  1* select a.sql_id, a.sql_text, b.elapsed_seconds, b.time_remaining from gv$sql a, gv$session_longops b where a.sql_id = b.sql_id and b.opname = 'Table Scan' and a.inst_id = b.inst_id


  1  select a.username, sum(b.BLOCK_GETS), sum(b.CONSISTENT_GETS), sum(b.PHYSICAL_READS), sum(b.BLOCK_CHANGES), sum(b.CONSISTENT_CHANGES)
  2* from gv$session a, gv$sess_io b where a.inst_id = b.inst_id and a.sid = b.sid group by a.username
  
  Physical_Write_Total_Bytes_Per_Sec and such: oracle_sysmetric
https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:2415309000346312489

• new 11g metric - I/O Megabytes per second
Question and Answer

Thanks for the question, Chris.
Asked: March 02, 2010 - 11:58 pm UTC
Last updated: March 03, 2010 - 8:21 am UTC
Version: 11.2.0
Viewed 1000+ times
You Asked
Tom,
Thanks again for all your contributions to the Oracle community. This site is truly invaluable.I have a question about a new metric I stumbled upon named "I/O Megabytes per Second". You can find this in the metric_name column of dba_hist_sysmetric_summary, and in the docs here:
http://download.oracle.com/docs/html/E16282_01/oracle_database_help/oracle_database_instance_throughput_iombs_ps.html

In any case, I ran a query like this on a dev machine:

col metric_name format a34
col snap_id format 99999
col begin_time format a20
col end_time format a20
select metric_name, maxval, snap_id, begin_time, end_time
from dba_hist_sysmetric_summary
where metric_name = 'I/O Megabytes per Second'
 and maxval = (select max(maxval)
   from dba_hist_sysmetric_summary
   where metric_name = 'I/O Megabytes per Second')
union all
select metric_name, maxval, snap_id, begin_time, end_time
from dba_hist_sysmetric_summary
where metric_name = 'Physical Read Total Bytes Per Sec'
 and maxval = (select max(maxval)
   from dba_hist_sysmetric_summary
   where metric_name = 'Physical Read Total Bytes Per Sec')
union all
select metric_name, maxval, snap_id, begin_time, end_time
from dba_hist_sysmetric_summary
where metric_name = 'Physical Write Total Bytes Per Sec'
 and maxval = (select max(maxval)
   from dba_hist_sysmetric_summary
  where metric_name = 'Physical Write Total Bytes Per Sec')
/



-- Block changes
select a.inst_id, b.username, sum(a.BLOCK_CHANGES) block_changes 
from gv$sess_io a, gv$session b
where a.sid = b.sid and a.inst_id = b.inst_id 
group by a.inst_id, b.username
order by a.inst_id, block_changes;

-- Write IO Requests
https://techgoeasy.com/what-is-iops-and-how-to-calculate-it-in/
https://docs.oracle.com/cd/B19306_01/server.102/b14237/stats002.htm#i375475 --> statistics descriptions (v$statname 'name')
http://www.dba-oracle.com/t_v_sesstat.htm --> v$sesstat how to use
http://www.dba-oracle.com/oracle_tips_top_session.htm --> v$sesstat session hogs

select a.inst_id, b.username, b.command, sum(a.value)
from   gv$sesstat a, gv$session b, v$statname c
where  a.sid = b.sid
and    a.inst_id = b.inst_id
and    c.statistic# = a.statistic#
and    c.name = 'physical write IO requests'
group by a.inst_id, b.username, b.command
order by 1, 3 desc, 2;

select a.inst_id, b.username, c.name, b.command, sum(a.value)
from   gv$sesstat a, gv$session b, v$statname c
where  a.sid = b.sid
and    a.inst_id = b.inst_id
and    c.statistic# = a.statistic#
and    (c.name = 'physical write IO requests' or c.name = 'physical write total bytes')
group by a.inst_id, b.username, c.name, b.command
order by 1, 3 desc, 2;

Findings:
'command 0' of username = null (presumably oracle) is taking much physical write IO requests
To find which command number means what command: SELECT command_name FROM v$sqlcommand WHERE command_type = n;
https://docs.oracle.com/cd/E11882_01/server.112/e40402/dynviews_3016.htm#REFRN30223

-- Memory
SELECT a.inst_id,
       NVL(a.username,'(oracle)') AS username,
       a.module,
       a.program,
       Trunc(b.value/1024) AS memory_kb
FROM   gv$session a,
       gv$sesstat b,
       gv$statname c
WHERE  a.sid = b.sid
AND    a.inst_id = b.inst_id
AND    b.statistic# = c.statistic#
AND    b.inst_id = c.inst_id
AND    c.name = 'session pga memory'
AND    a.program IS NOT NULL
ORDER BY b.value DESC;

-- Some more
select inst_id, username, count(*) from gv$session group by inst_id, username order by 1,2


-- Burleson: Session and System Stats
http://www.dba-oracle.com/plsql/t_plsql_stats.htm

session_stats.sql
SET VERIFY OFF 
SELECT sn.name, ss.value
FROM   v$sesstat ss,
       v$statname sn,
       v$session s
WHERE  ss.statistic# = sn.statistic#
AND    s.sid = ss.sid
AND    s.audsid = SYS_CONTEXT('USERENV','SESSIONID')
AND    sn.name LIKE '%' || DECODE(LOWER('&1'), 'all', '', LOWER('&1')) || '%';


system_stats.sql
SET VERIFY OFF 
COLUMN name FORMAT A50
COLUMN value FORMAT 99999999999999999999 
SELECT sn.name, ss.value
FROM   v$sysstat ss,
       v$statname sn
WHERE  ss.statistic# = sn.statistic#
AND    sn.name LIKE '%' || DECODE(LOWER('&1'), 'all', '', LOWER('&1')) || '%'; 


session_io.sql
SET LINESIZE 500
SET PAGESIZE 1000 
COLUMN username FORMAT A15
SELECT NVL(s.username, '(oracle)') AS username,
       s.osuser,
       s.sid,
       s.serial#,
       si.block_gets,
       si.consistent_gets,
       si.physical_reads,
       si.block_changes,
       si.consistent_changes
FROM   v$session s,
       v$sess_io si
WHERE  s.sid = si.sid
ORDER BY s.username, s.osuser;

open_cursors_by_sid.sql 
SET LINESIZE 500
SET PAGESIZE 1000
SET VERIFY OFF 
SELECT oc.sql_text
FROM   v$open_cursor oc
WHERE  oc.sid = &1; 


open_cursors_full_by_sid.sql
SET LINESIZE 500
SET PAGESIZE 1000
SET VERIFY OFF 
SELECT st.sql_text
FROM   v$sqltext st,
       v$open_cursor oc
WHERE  st.address = oc.address
AND    st.hash_value = oc.hash_value
AND    oc.sid = &1
ORDER BY st.piece; 


locked_objects.sql
SET LINESIZE 500
SET PAGESIZE 1000
SET VERIFY OFF 
COLUMN owner FORMAT A20
COLUMN username FORMAT A20
COLUMN object_owner FORMAT A20
COLUMN object_name FORMAT A30
COLUMN locked_mode FORMAT A15 
SELECT b.session_id AS sid,
       NVL(b.oracle_username, '(oracle)') AS username,
       a.owner AS object_owner,
       a.object_name,
       Decode(b.locked_mode, 0, 'None',
                             1, 'Null (NULL)',
                             2, 'Row-S (SS)',
                             3, 'Row-X (SX)',
                             4, 'Share (S)',
                             5, 'S/Row-X (SSX)',
                             6, 'Exclusive (X)',
                             b.locked_mode) locked_mode,
       b.os_user_name
FROM   dba_objects a,
       v$locked_object b
WHERE  a.object_id = b.object_id
ORDER BY 1, 2, 3, 4; 

http://www.dba-oracle.com/oracle10g_tuning/t_session_i_o_io.htm

physpctio.sql
 
 
select
   sid,
   username,
   round(100 * total_user_io/total_io,2) tot_io_pct
from
(select
     b.sid sid,
     nvl(b.username,p.name) username,
     sum(value) total_user_io
 from
     sys.v_$statname c, 
     sys.v_$sesstat a,
     sys.v_$session b,
     sys.v_$bgprocess p
 where
      a.statistic#=c.statistic# and
      p.paddr (+) = b.paddr and
      b.sid=a.sid and
      c.name in ('physical reads',
                 'physical writes',
                 'physical writes direct',
                 'physical reads direct',
                 'physical writes direct (lob)',
                 'physical reads direct (lob)')
group by
      b.sid, nvl(b.username,p.name)),
(select
      sum(value) total_io
 from
      sys.v_$statname c,
      sys.v_$sesstat a
 where
SEE CODE DEPOT FOR FULL SCRIPTS
order by
      3 desc;


 totpctio.sql
 
-- *************************************************
-- Copyright © 2005 by Rampant TechPress
-- This script is free for non-commercial purposes
-- with no warranties.  Use at your own risk.
--
-- To license this script for a commercial purpose,
-- contact info@rampant.cc
-- *************************************************
 
SELECT
       SID,
       USERNAME,
       ROUND(100 * TOTAL_USER_IO/TOTAL_IO,2) TOT_IO_PCT
FROM
(SELECT
        b.SID SID,
        nvl(b.USERNAME,p.NAME) USERNAME,
        SUM(VALUE) TOTAL_USER_IO
FROM
     sys.V_$STATNAME c, 
     sys.V_$SESSTAT a,
     sys.V_$SESSION b,
     sys.v_$bgprocess p
WHERE
      a.STATISTIC#=c.STATISTIC# and
      p.paddr (+) = b.paddr and
      b.SID=a.SID and
      c.NAME in ('physical reads','physical writes',
                 'consistent changes','consistent gets',
                 'db block gets','db block changes',
                 'physical writes direct',
                 'physical reads direct',
                 'physical writes direct (lob)',
                 'physical reads direct (lob)')
GROUP BY
      b.SID, nvl(b.USERNAME,p.name)),
(select
        sum(value) TOTAL_IO
from   
        sys.V_$STATNAME c,
        sys.V_$SESSTAT a
WHERE  
        a.STATISTIC#=c.STATISTIC# and
SEE CODE DEPOT FOR FULL SCRIPTS
ORDER BY
        3 DESC;

 topiousers.sql
 
-- *************************************************
-- Copyright © 2005 by Rampant TechPress
-- This script is free for non-commercial purposes
-- with no warranties.  Use at your own risk.
--
-- To license this script for a commercial purpose,
-- contact info@rampant.cc
-- *************************************************
 
select
     b.sid sid,
     decode (b.username,null,e.name,b.username)
     user_name,
     d.spid os_id,
     b.machine machine_name,
     to_char(logon_time,'mm/dd/yy hh:mi:ss pm')
     logon_time,
     (sum(decode(c.name,'physical reads',value,0))
     +
     sum(decode(c.name,'physical writes',value,0))
     +
     sum(decode(c.name,
     'physical writes direct',value,0)) +
     sum(decode(c.name,
     'physical writes direct (lob)',value,0)) +
     sum(decode(c.name,
     'physical reads direct (lob)',value,0)) +
     sum(decode(c.name,
     'physical reads direct',value,0)))
     total_physical_io,
     (sum(decode(c.name,'db block gets',value,0))
     +
     sum(decode(c.name,
     'db block changes',value,0))  +
     sum(decode(c.name,'consistent changes',value,0)) +
     sum(decode(c.name,'consistent gets',value,0)) )
     total_logical_io,
     100 – 100 *(round ((sum (decode
     (c.name, 'physical reads', value, 0)) –
     sum (decode (c.name,
     'physical reads direct', value, 0))) /
     (sum (decode (c.name, 'db block gets',
    value, 1)) +
    sum (decode (c.name, 'consistent gets',
     value, 0))),3)) hit_ratio,
    sum(decode(c.name,'sorts (disk)',value,0))
    disk_sorts,
    sum(decode(c.name,'sorts (memory)',value,0))
    memory_sorts,
    sum(decode(c.name,'sorts (rows)',value,0))
    rows_sorted,
    sum(decode(c.name,'user commits',value,0))
    commits,
    sum(decode(c.name,'user rollbacks',value,0))
    rollbacks,
    sum(decode(c.name,'execute count',value,0))
    executions,
    sum(decode(c.name,'physical reads',value,0))
    physical_reads,
    sum(decode(c.name,'db block gets',value,0))
    db_block_gets,
    sum(decode(c.name,'consistent gets',value,0))
    consistent_gets,
    sum(decode(c.name,'consistent changes',value,0))
    consistent_changes
from   
   sys.v_$sesstat a,
   sys.v_$session b,
   sys.v_$statname c,
   sys.v_$process d,
   sys.v_$bgprocess e
where
   a.statistic#=c.statistic#
and
   b.sid=a.sid 
and
   d.addr = b.paddr
and
   e.paddr (+) = b.paddr 
and
   c.name in
   ('physical reads',
    'physical writes',
    'physical writes direct',
    'physical reads direct',
)
group by
   b.sid,
   d.spid,
   decode (b.username,null,e.name,b.username),
         b.machine,
         to_char(logon_time,'mm/dd/yy hh:mi:ss pm')
order by
   6 desc;

SEE CODE DEPOT FOR FULL SCRIPTS

  syswaits.sql
 
-- *************************************************
-- Copyright © 2005 by Rampant TechPress
-- This script is free for non-commercial purposes
-- with no warranties.  Use at your own risk.
--
-- To license this script for a commercial purpose,
-- contact info@rampant.cc
-- *************************************************
 
select
       event,
       total_waits,
       round(100 * (total_waits / sum_waits),2) pct_tot_waits,
       time_wait_sec,
       round(100 * (time_wait_sec / sum_secs),2) pct_secs_waits,
       total_timeouts,
       avg_wait_sec
from
(select
       event,
       total_waits,
       round((time_waited / 100),2) time_wait_sec,
       total_timeouts,
       round((average_wait / 100),2) avg_wait_sec
from
      sys.v_$system_event
where
      event not in
      ('lock element cleanup ',
       'pmon timer ',
       'rdbms ipc message ',
       'smon timer ',
       'SQL*Net message from client ',
       'SQL*Net break/reset to client ',
       'SQL*Net message to client ',
       'SQL*Net more data to client ',
       'dispatcher timer ',
       'Null event ',
       'parallel query dequeue wait ',
       'parallel query idle wait - Slaves ',
       'pipe get ',
       'PL/SQL lock timer ',
       'slave wait ',
       'virtual circuit status ',
       'WMON goes to sleep') and
       event not like 'DFS%' and
       event not like 'KXFX%'),
(select
        sum(total_waits) sum_waits,
        sum(round((time_waited / 100),2)) sum_secs
 from
        sys.v_$system_event
 where 
        event not in
       ('lock element cleanup ',
        'pmon timer ',
        'rdbms ipc message ',
SEE CODE DEPOT FOR FULL SCRIPTS
        event not like 'KXFX%')
order by
   2 desc;


-- Burleson: IO Percent by user OR background process

http://www.dba-oracle.com/oracle_tips_top_session.htm

select
   sid,
   username,
   round(100 * total_user_io/total_io,2) tot_io_pct
from
(select
     b.sid sid,
     nvl(b.username,p.name) username,
     sum(value) total_user_io
 from
     sys.v_$statname c,
     sys.v_$sesstat a,
     sys.v_$session b,
     sys.v_$bgprocess p
 where
a.statistic#=c.statistic# and
      p.paddr (+) = b.paddr and
      b.sid=a.sid and
      c.name in ('physical reads',
                 'physical writes',
                 'physical writes direct',
                 'physical reads direct',
                 'physical writes direct (lob)',
                 'physical reads direct (lob)')
group by
      b.sid, nvl(b.username,p.name)),
(select
      sum(value) total_io
 from
      sys.v_$statname c,
      sys.v_$sesstat a
 where
      a.statistic#=c.statistic# and
      c.name in ('physical reads',
                 'physical writes',
                 'physical writes direct',
                 'physical reads direct',
                 'physical writes direct (lob)',
                 'physical reads direct (lob)'))
order by
      3 desc
/

--> Part of the above sql - to find IO by username
select
     nvl(b.username,p.name) username,
     sum(value) total_user_io
 from
     sys.v_$statname c,
     sys.v_$sesstat a,
     sys.v_$session b,
     sys.v_$bgprocess p
 where
a.statistic#=c.statistic# and
      p.paddr (+) = b.paddr and
      b.sid=a.sid and
      c.name in ('physical reads',
                 'physical writes',
                 'physical writes direct',
                 'physical reads direct',
                 'physical writes direct (lob)',
                 'physical reads direct (lob)')
group by
      nvl(b.username,p.name)
order by 2 desc
/

select
     a.inst_id,
     nvl(b.username,p.name) username,
     sum(value) total_user_io
 from
     sys.v_$statname c,
     sys.gv_$sesstat a,
     sys.gv_$session b,
     sys.gv_$bgprocess p
 where
      a.statistic#=c.statistic# and
      p.paddr (+) = b.paddr and
      b.sid=a.sid and
      a.inst_id = b.inst_id and
      c.name in ('physical reads',
                 'physical writes',
                 'physical writes direct',
                 'physical reads direct',
                 'physical writes direct (lob)',
                 'physical reads direct (lob)')
group by
      a.inst_id,
      nvl(b.username,p.name)
order by 1, 2 desc
/


-- Disk Sorts
http://oln.oracle.com/DBA/OLN_OPTIMIZING_SORTS/sorts/html/lesson2/124_01a.htm

SELECT disk.value "Disk Sort", mem.value "Memory Sort",
   (disk.value/mem.value) * 100 "Ratio"
   FROM v$sysstat mem, v$sysstat disk
   WHERE mem.name = 'sorts (memory)'
   AND  disk.name = 'sorts (disk)';
