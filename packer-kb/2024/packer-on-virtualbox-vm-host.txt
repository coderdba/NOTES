https://techviewleo.com/install-use-kvm-virtualization-oracle-linux
https://www.baeldung.com/linux/kernel-based-virtual-machine
RHEL 9 Doc: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_and_managing_virtualization/index
RHEL 7 Doc: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/virtualization_host_configuration_and_guest_installation_guide/sect-virtualization_host_configuration_and_guest_installation_guide-host_installation-installing_kvm_packages_on_an_existing_red_hat_enterprise_linux_system

Oracle Linux doc (about KVM): https://docs.oracle.com/en/operating-systems/oracle-linux/kvm-user/kvm-AboutOracleLinuxKVM.html#about
Oracle Linux doc (how to create): https://docs.oracle.com/en/learn/ol-kvm/index.html#introduction

Issues:
- Unable to open /dev/kvm: No such file or directory - https://bbs.archlinux.org/viewtopic.php?id=248162

# grep -e 'vendor_id' /proc/cpuinfo
vendor_id	: GenuineIntel
vendor_id	: GenuineIntel

# lscpu
- to find what virtualization is enabled
Virtualization features: 
  Hypervisor vendor:     KVM  --> This is because KVM was set as paravirtualization for the VM in Virtualbox settings
  Virtualization type:   full

Upgrade the system
# dnf makecache
# dnf update
# reboot 

Set SELinux to permissive mode
Leaving SELinux in its default  (enforcing) mode will lead to permission denied errors while creating KVM virtual machines. 
To avoid this error, edit the etc/selinux/config by changing the mode to permissive

$ sudo vim /etc/selinux/config
SELINUX=permissive

Remove existing virtualization software:
# dnf remove libvirt qemu-kvm edk2
No match for argument: libvirt
No match for argument: qemu-kvm
No match for argument: edk2
No packages marked for removal.
Dependencies resolved.
Nothing to do.
Complete!

Yum repo:
# dnf install -y oraclelinux-release-el9
# dnf config-manager --enable ol9_kvm_utils ol9_UEKR7

Virtualization software: (640MB - including upgrades and installs)
# dnf groupinstall "Virtualization Host"

Verify
# lsmod | grep kvm

Install tools
# dnf install qemu-kvm virt-install virt-viewer virt-manager

Start KVM daemon
# systemctl start libvirtd
# systemctl enable --now libvirtd
# systemctl status libvirtd
- Error: /dev/kvm does not exist - when systemctl status libvirtd
- Created /dev/kvm: mkdir /dev/kvm; chgrp kvm /dev/kvm
- Error: â€œvirHostCPUGetCPUID:1455 : Cannot read host CPUID: Inappropriate ioctl for device
- Could not resolve. Destroyed the Vbox VM. Creating new

===================================
FOLLOWING ORACLE DOC
===================================
https://docs.oracle.com/en/learn/ol-kvm/index.html

# grep -e 'vendor_id' /proc/cpuinfo
vendor_id	: GenuineIntel
vendor_id	: GenuineIntel

# lscpu
Virtualization features: 
  Hypervisor vendor:     KVM
  Virtualization type:   full

# grep -e 'vmx' /proc/cpuinfo
--> this shows null. So, not sure if it supports virtualization

# lsmod | grep kvm
--> this shows null. So, not sure if it supports virtualization
--> Ideal response should be
kvm_intel             262144  0 
kvm                   696320  1 kvm_intel
irqbypass              16384  1 kvm


Try install the module
# modprobe kvm

# lsmod |grep kvm
kvm                  1142784  0
irqbypass              16384  1 kvm





