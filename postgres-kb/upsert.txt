===========
DEMO1
===========
drop table x;
delete from x;
create table x (x1 int primary key, created int, updated int);
insert into x values (1,1,null);
select * from x;

insert into x (x1,created,updated) values (2,2,2)
on conflict(x1) do update set created=x.created, updated=excluded.updated;

insert into x (x1,created,updated) values (1, 2,2)
on conflict(x1) do update set created=x.created, updated=excluded.updated;

select * from x;

insert into x (x1,created,updated) values (2, 3,3)
on conflict(x1) do update set created=x.created, updated=excluded.updated;
insert into x (x1,created,updated) values (1, 3,3)
on conflict(x1) do update set created=x.created, updated=excluded.updated;

insert into x (x1,created,updated) values (2, 4,4)
on conflict(x1) do update set  updated=excluded.updated;
insert into x (x1,created,updated) values (1, 4,4)
on conflict(x1) do update set  updated=excluded.updated;


===========
EXAMPLES
===========
create table portfolio
(id int primary key,
 name varchar(100),
 description varchar(100),
 owner varchar(100)
);

insert into portfolio values (1, 'pp1', 'pp1', 'nobody');

select * from portfolio;

Insert into portfolio values (1, 'pp1', 'pp1a', 'somebody)
On conflict(name) do update set description = EXCLUDED.description || ; || portfolio.description;

Insert into portfolio values (1, 'pp1', 'pp1a', 'somebody')
On conflict(id) do update set description = EXCLUDED.description, owner = EXCLUDED.owner;

INSERT INTO customers (name, email) VALUES('Microsoft','hotline@microsoft.com') ON CONFLICT (name) DO UPDATE SET email = EXCLUDED.email || ';' || customers.email;

From <https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-upsert/> 

