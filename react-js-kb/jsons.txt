=====================
HANDLING JSONS
=====================
https://www.pluralsight.com/guides/how-to-use-reactjs-and-complex-json-objects

==========================
COMPLEX JSON EXAMPLE (c)
==========================
https://www.pluralsight.com/guides/how-to-use-reactjs-and-complex-json-objects

Need to get two arrays from data from Influx - to display on a graph:
1. The labels for x-axis - that is, the timestamps - "time" in the json below
2. The values for y-axis - that is, the values for the labels - "count" in the json below

Data from Influx:

{
  "results": [
    {
      "statement_id": 0,
      "series": [
        {
          "name": "response-time",
          "tags": {
            "api-name": "cancel"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              748
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "concession"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              9
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "create_return"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              513
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "delete_note"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              2
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "extend_pickup"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              109
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "get-concession-limit"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              15
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "get-guest-orders"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              91592
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "get-guest-phone-search"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              153
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "guest-order-history-v1"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              6433
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "guest-order-history-v4"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              41499
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "guest-orders-by-order-pickup"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              299985
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "mail_in_receipt"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              442
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "nominee_update"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              77
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "opt-in"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              10
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "order-details-by-release-id"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              201
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "refund_restrictions"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              2
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "repromise"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              1
            ]
          ]
        },
        {
          "name": "response-time",
          "tags": {
            "api-name": "update_return"
          },
          "columns": [
            "time",
            "count"
          ],
          "values": [
            [
              "2021-03-01T12:37:59.726090864Z",
              44
            ]
          ]
        }
      ]
    }
  ]
}

Axios call code:

import React, { Component } from 'react'
import axios from 'axios'
//import qs from 'qs'

export class CountsByTime extends Component {
  constructor(props) {
    super(props)

    this.state = {
      data: [],
    }
  }
  apicall = () => {
    // this works - with encodeURI - with escaped single-quotes using backslaah
    const encodedURI = encodeURI(
      'https://metrics.company.com/query?q=SELECT count("value") FROM "call-response-times" WHERE ("application" = \'myorders\' AND "environment" = \'prod\') AND time >= now() - 30m GROUP BY "api"'
    )

    /* this works - does not get cors error - unset authorization header as the site allows without authorization */
    axios.get(encodedURI, { headers: { Authorization: '' } }).then(response => {
      this.setState({ data: response.data })
      //console.log(response.data)

      console.log('Printing results element of json')
      console.log(response.data.results)

      console.log('Printing results.series element of json')
      console.log(response.data.results[0].series)

      var timeStamps = []
      var values = []

      timeStamps = response.data.results[0].series.map(item =>
        timeStamps.concat(item.values[0][0])
      )

      values = response.data.results[0].series.map(item =>
        values.concat(item.values[0][0])
      )

      console.log('Printing timeStamps array')
      console.log(timeStamps)

      console.log('Printing values array')
      console.log(values)
    })

    /* this got cors error */
    /*
    axios.get(encodedURI)
      .then(response => {
         this.setState({ data: response.data })
         console.log(response.data)
    })
    */

    /*
   axios.get(encodedURI, {transformRequest: (data, headers) => {
                            delete headers.common['Authorization'];
                            }
                         }   
            )
   .then(response => {
      this.setState({ data: response.data })
      console.log(response.data)
    })
   */
  }

  componentDidMount = () => {
    this.apicall()
  }
  render() {
    return (
      <div>
        <h1>Axios call</h1>
      </div>
    )
  }
}

export default CountsByTime
