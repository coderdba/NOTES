import React from 'react';
import NumberBoxArray from './NumberBoxArray'
import NumberBoxArrayWithSpan from './NumberBoxArrayWithSpan'


const number1 = [1, 2, 3, 4, 5, 6.2];
const number2 = [4, 6, 1, 4, 8, 10.6];
const number3 = [4, 6, 1, 4, 8, 10.3];

//<NumberBoxArray numbers={[4, 6, 1, 4, 8, 6]} />

function App() {
 
    // for multiple arrays of numbers use multiple div with NumberBoxArray
    // if looping through JSON, the app should then create such divs using map
    return (
      <div className="App">
        <div>
          <NumberBoxArray numbers={[1, 2, 3, 4, 5, 6]} />
        </div>
        <div className="App">
          <NumberBoxArray numbers={ number2 } />
        </div>
        <div className="App">
          <NumberBoxArrayWithSpan numbers={ number3 } />
        </div>
      </div>
    );  

  }
  
 export default App;


===

import React from 'react';

// Span styling: // https://stackoverflow.com/questions/61249367/how-to-add-different-styles-to-span-tag-based-on-its-content-using-react-or-java
// Mouseover/hover: https://www.w3docs.com/snippets/html/how-to-add-a-mouseover-text-with-html.html

// works: <span style={{ border: '1px solid black', margin: '2px', padding: '5px', background: 'green', color: number === 3 ? 'green' : 'red'}}>
// works: <span style={{ border: '1px solid black', margin: '2px', padding: '5px', color: 'black', background: number >= 3 ? 'red' : 'green'}}>

const NumberBox = ({ number }) => (
  <span title={number} style={{ border: '1px solid black', margin: '2px', padding: '5px', color: 'black', background: (number >= 3 & number <10 )? 'yellow' : (number >= 10 )? 'red' : 'green'}}>
    {number}
  </span>
);

/*
const NumberBoxArrayWithSpan = ({ numbers }) => (
  <span style={{ display: 'flex' }}>
    {numbers.map((number) => (
      <NumberBox key={number} number={number} />
    ))}
  </span>
);
*/

const NumberBoxArrayWithSpan = ({ numbers }) => (
  <span style={{ display: 'flex'}}>
    {numbers.map((number) => (
      <NumberBox key={number} number={number} />
    ))}
  </span>
);

// style={{ color: count_variable === 0 ? 'red' : count_variable === 1 ? 'blue' : 'green' }}
// <span style={{ display: 'flex', color: numbers.map(number) >= 3 ? 'yellow' : numbers.map(number) >= 10 ? 'red' : 'green'  }}>

export default NumberBoxArrayWithSpan;

====

import React from 'react';

const NumberBox = ({ number }) => (
  <div style={{ border: '1px solid black', margin: '2px', padding: '5px' }}>
    {number}
  </div>
);

const NumberBoxArray = ({ numbers }) => (
  <div style={{ display: 'flex' }}>
    {numbers.map((number) => (
      <NumberBox key={number} number={number} />
    ))}
  </div>
);

export default NumberBoxArray;
