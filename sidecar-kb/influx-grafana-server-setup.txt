========================================
INFLUX, GRAFANA SETUP
========================================
Based on: 
https://towardsdatascience.com/get-system-metrics-for-5-min-with-docker-telegraf-influxdb-and-grafana-97cfd957f0ac

Also see: 
https://devconnected.com/how-to-install-influxdb-telegraf-and-grafana-on-docker/ --> has how to create config files for influx, telegraf also
https://blog.gojekengineering.com/diy-set-up-telegraf-influxdb-grafana-on-kubernetes-d55e32f8ce48

https://thenewstack.io/how-to-setup-influxdb-telegraf-and-grafana-on-docker-part-1/
https://thenewstack.io/how-to-setup-influxdb-telegraf-and-grafana-on-docker-part-2/

Also: 
https://hub.docker.com/_/telegraf
https://hub.docker.com/_/influxdb

====================================
MACHINE TO HOST INFLUX AND GRAFANA
====================================
NAME: ig1 (for influx-grafana-1)
IP: 192.168.40.91 (9 for 'I')

Disable firewall
- Otherwise, when configuring Influx DB in Grafana from host/laptop, it will error out with 'bad gateway'
# systemctl stop firewalld
# systemctl disable firewalld

====================================
DOCKER
====================================
Install Docker
Install docker-compose
Pull influx docker image
Pull grafana docker image

====================================
CREATE DOCKER NETWORK 
====================================
# docker network create monitoring


# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
2ddecc58b12b        bridge              bridge              local
e254c3c4b6d4        host                host                local
7cee0d3b9be6        monitoring          bridge              local
c7fdaafa0cd8        none                null                local

Note: After docker-compose up, from a working directory influx-grafana, it also creates a network influx-grafana_monitoring
- not sure if it is going to be used by the components created by docker-compose.yml

# docker network ls
NETWORK ID          NAME                        DRIVER              SCOPE
2ddecc58b12b        bridge                      bridge              local
e254c3c4b6d4        host                        host                local
ae1826495e65        influx-grafana_monitoring   bridge              local
7cee0d3b9be6        monitoring                  bridge              local
c7fdaafa0cd8        none                        null                local

====================================
CREATE DOCKER VOLUMES
====================================
# docker volume create grafana-volume
# docker volume create influxdb-volume

# docker volume ls
DRIVER              VOLUME NAME
local               4c279b787f6f935d0f7f162f1c17363f2c32baf1d4a58cceb78866078caa6746
local               b8e411e1bf4d12ef774ca3bb5948b3b9bfbbb2c29ab054c53e5e5334db104f0d
local               grafana-volume
local               influxdb-volume

These volumes are created externally on the VM in these directories:
/var/lib/docker/volumes/influxdb-volume
/var/lib/docker/volumes/grafana-volume

====================================
CREATE docker-compose.yml
====================================
version: "2"

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    networks:
      - monitoring
    volumes:
      - grafana-volume:/var/lib/grafana
      
  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
      - monitoring
    volumes:
      - influxdb-volume:/var/lib/influxdb
      
networks:
  monitoring:
  
volumes:
  grafana-volume:
    external: true
  influxdb-volume:
    external: true

====================================================
RUN INFLUXDB IMAGE TO CREATE INFLUX CONFIG FILE
====================================================

# Create _data directories - otherwise docker run will error looking for _data
mkdir -p /var/lib/docker/volumes/influxdb-volume/_data
mkdir -p /var/lib/docker/volumes/grafana-volume/_data

# Run this container with –rm key, this will only create configs and remove the container after.
docker run --rm \
  -e INFLUXDB_DB=telegraf -e INFLUXDB_ADMIN_ENABLED=true \
  -e INFLUXDB_ADMIN_USER=admin \
  -e INFLUXDB_ADMIN_PASSWORD=supersecretpassword \
  -e INFLUXDB_USER=telegraf -e INFLUXDB_USER_PASSWORD=secretpassword \
  -v influxdb-volume:/var/lib/influxdb \
  influxdb /init-influxdb.sh

# Start the containers in background (-d)
docker-compose up -d


------------
VERIFY
------------
# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
cf8945003f2a        grafana/grafana     "/run.sh"                12 minutes ago      Up 12 minutes       0.0.0.0:3000->3000/tcp   grafana
ed6c4ebdbcbe        influxdb            "/entrypoint.sh infl…"   12 minutes ago      Up 12 minutes       0.0.0.0:8086->8086/tcp   influxdb

# netstat -anp |grep 8086
tcp6       0      0 :::8086                 :::*                    LISTEN      11947/docker-proxy  
# netstat -anp |grep 3000
tcp6       0      0 :::3000                 :::*                    LISTEN      11977/docker-proxy 

=====================
CONFIGURE GRAFANA
=====================

----------------------
CONNECT TO GRAFANA
----------------------
From laptop, open grafana on VM - in browser of laptop.

http://192.168.40.91:3000

Username: admin
Password: admin
Change the password or leave it as is for now.

---------------------------
CONFIGURE INFLUX DATASOURCE
---------------------------

Add datasource
Choose InfluxDB
Name: InfluxDB (or any name)
URL: http://192.168.40.91:8086
InfluxDB Details: (these are in the docker run --rm command ran earlier)
  Database: telegraf
  User: telegraf
  Password: secretpassword 
  
Click 'save & test'
--> if you receive 'influx db bad gateway' - then disable firewall on the VM

=====================
TELEGRAF
=====================
Create Telegraf container - and make it monitor all containers using docker plugin

https://thenewstack.io/how-to-setup-influxdb-telegraf-and-grafana-on-docker-part-1/
https://thenewstack.io/how-to-setup-influxdb-telegraf-and-grafana-on-docker-part-2/ --> this has Telegraf

NOTE: The article asks to run telegraf container in its own unix user 'telegraf' on the VM - however, I am running it as root itself for simplicity

------------------------------
CREATE TELEGRAF CONFIG FILE
------------------------------
# mkdir /etc/telegraf
# docker run --rm telegraf telegraf config | sudo tee /etc/telegraf/telegraf.conf &lt > /dev/null

Influx to send data to - telegraf.conf
--> Add the line urls = ["http://192.168.40.91:8086"] (keep other lines of urls commented)
--> Add the line database = "telegraf"
--> Add username and password for the Influx db 'telegraf'
      username = "telegraf"
      password = "secretpassword"

--> Add Docker input (search for inputs.docker and uncomment or paste the lines you require):w
[[inputs.docker]]
   endpoint = "unix:///var/run/docker.sock"

LINES ADDED:
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  # urls = ["unix:///var/run/influxdb.sock"]
  # urls = ["udp://127.0.0.1:8089"]
  # urls = ["http://127.0.0.1:8086"]
  urls = ["http://192.168.40.91:8086"]
  
  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  # database = "telegraf"
  database = "telegraf"
  
  ## HTTP Basic Auth
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"
  username = "telegraf"
  password = "secretpassword"

[[inputs.docker]]
   endpoint = "unix:///var/run/docker.sock"


--------------------------------------
MODIFY PERMISSION ON docker.sock FILE
--------------------------------------
On the host VM, make /var/run/docker.sock readable by all

Otherwise, docker logs of telegraf container will show errors like:
2020-10-31T13:06:10Z E! [inputs.docker] Error in plugin: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.21/containers/json?filters=%7B%22status%22%3A%5B%22running%22%5D%7D&limit=0": dial unix /var/run/docker.sock: connect: permission denied

chmod 666 /var/run/docker.sock


--------------------------------------
START TELEGRAF
--------------------------------------
# Orig from https://thenewstack.io/how-to-setup-influxdb-telegraf-and-grafana-on-docker-part-2/
#docker run -d --user 998:998 --name=telegraf \
      #--net=container: \
      #-e HOST_PROC=/host/proc \
      #-v /proc:/host/proc:ro \
      #-v /etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro \
      #telegraf


docker run -d --user 998:998 --name=telegraf \
      --net=monitoring \
      -e HOST_PROC=/host/proc \
      -v /proc:/host/proc:ro \
      -v /var/run/docker.sock:/var/run/docker.sock:ro \
      -v /etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro \
      telegraf

-------------
VERIFY
-------------
# docker logs telegraf

2020-10-31T13:06:35Z I! Starting Telegraf 1.16.1
2020-10-31T13:06:35Z I! Using config file: /etc/telegraf/telegraf.conf
2020-10-31T13:06:35Z I! Loaded inputs: cpu disk diskio docker kernel mem processes swap system
2020-10-31T13:06:35Z I! Loaded aggregators: 
2020-10-31T13:06:35Z I! Loaded processors: 
2020-10-31T13:06:35Z I! Loaded outputs: influxdb
2020-10-31T13:06:35Z I! Tags enabled: host=e7141463615d
2020-10-31T13:06:35Z I! [agent] Config: Interval:10s, Quiet:false, Hostname:"e7141463615d", Flush Interval:10s

