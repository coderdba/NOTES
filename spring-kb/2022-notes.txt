=======================================
SPRINGBOOT - 2022 WORK
=======================================

=======================================
REFERENCES
=======================================
Eclipse-Springboot project:  https://medium.com/danielpadua/java-spring-boot-eclipse-744454468670

=======================================
ECLIPSE INSTALL
=======================================
Version 2022-09
Installed for "java and web developers"
It installed JVM 17
C:\Users\MYUSERID\eclipse\jee-2022-09

=======================================
ECLIPSE - SPRING TOOLS INSTALL
=======================================
Help --> Eclipse Marketplace
Search for "spring"
Install the latest version of Spring Tools (on the writing date of this guide it is the 4.16.0) and restart eclipse.
- in the list in that, did not choose cloud foundry and concourse 

==========================================
ECLIPSE - CREATE A SPRING STARTER PROJECT
==========================================
With everything correctly configured, itâ€™s time to create our project. 
Go to menu: File > New > Projectâ€¦ and select the option Spring starter Project 

--> This created a Maven project - I need a Gradle project

=======================================
ECLIPSE - CREATE A GRADLE PROJECT
=======================================
File --> New --> Project --> Gradle Project

This created a project with src folder under a lib folder
We need src to be in the base folder itself

In Gradle menu: Window --> Preferences --> Gradle --> it was 8.0-milestone-2
Changed it to 6.9.2 and tried to create a new project

To fix it: https://qaautomation.expert/2021/05/02/how-to-create-java-gradle-project-in-eclipse/
--> use gradle 6.6 --> that did not even create a project - as it could not download gradle 6.6 zip

=========================================
SPRINGBOOT PROJECT INITIALIZER METHOD
=========================================
https://spring.io/guides/gs/rest-service/
https://start.spring.io/
https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-creating-a-spring-boot-web-application-project/

------------------------------------
APPLICATION.RUN KIND OF PROJECT
------------------------------------
Which runs as a command-line script/executable - NOT as a web/rest server
In build.gradle you will have this: (not spring-boot-starter-web which will make it a web application)
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

Go to https://start.spring.io/
Project - Gradle project
Language - Java
Springboot - 2.7.4
Project metadata - used defaults - group: com.example, artifact: demo, Name: demo, Description: Demo project for Spring Boot, Package Name: com.example.demo
Dependencies - none selected

It generates a zip file
Unzip it - creates stuff in directory 'demo'

In Eclipse: File --> Import --> Gradle - Existing Gradle Project
--> then choose the demo folder

To run it in Eclipse:
If you have installed spring plugin, then you will have a "Boot Dashboard" button (green hexagon) in the ribbon.
Click "Boot Dashboard"
It will show a list of projects in the bottom pane
In that choose: local --> demo
And, in the bottom pane click "start" button (green+red button)

The main code is this: src/main/java/com.example.demo/DemoApplication.java
- Place a print statement:
@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		
		System.out.println("In class DemoApplication");
		SpringApplication.run(DemoApplication.class, args);
	}
  
}

- Run it again
You will see the message printed

Picked up JAVA_TOOL_OPTIONS: -agentpath:"C:\Windows\system32\Aternity\Java\JavaHookLoader.dll"="C:\ProgramData\Aternity\hooks"

In class DemoApplication --> THIS IS THE PRINTED MESSAGE

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v2.7.4)[0;39m

[2m2022-10-11 18:10:36.323[0;39m [32m INFO[0;39m [35m19600[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.example.demo.DemoApplication        [0;39m [2m:[0;39m Starting DemoApplication using Java 17.0.4.1 on MMD5CG125CWSV with PID 19600 (C:\Users\GSM078\CODE\java\Eclipse-j2ee-2022-09\demo\bin\main started by GSM078 in C:\Users\GSM078\CODE\java\Eclipse-j2ee-2022-09\demo)
[2m2022-10-11 18:10:36.325[0;39m [32m INFO[0;39m [35m19600[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.example.demo.DemoApplication        [0;39m [2m:[0;39m No active profile set, falling back to 1 default profile: "default"
[2m2022-10-11 18:10:36.716[0;39m [32m INFO[0;39m [35m19600[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.example.demo.DemoApplication        [0;39m [2m:[0;39m Started DemoApplication in 0.684 seconds (JVM running for 1.275)

------------------------------------
REST KIND OF PROJECT
------------------------------------
This will be a web-project - not just a command line runner.
In build.gradle we have spring-boot-starter-web which makes it a web-app - and not spring-boot-starter.
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

https://spring.io/guides/gs/rest-service/

Go to https://start.spring.io/
Project - Gradle project
Language - Java
Springboot - 2.7.4
Project metadata - modified defaults - group: com.example, artifact: demo-web, Name: demo-web, Description: Demo project for Spring Boot, Package Name: com.example.demo-web
Dependencies - Spring Web

Run the project (you may or may not add the println statement)
Access the app in browser:
	http://localhost:8080

It will give this message as we dont have endpoints coded yet:
	Whitelabel Error Page
	This application has no explicit mapping for /error, so you are seeing this as a fallback.

	Tue Oct 11 18:17:58 IST 2022
	There was an unexpected error (type=Not Found, status=404).

------------------------------------
COMMAND LINE RUNNER PROJECT
------------------------------------
https://zetcode.com/springboot/commandlinerunner

===============================
CODING A POSTGRES CRUD API
===============================
https://zetcode.com/springboot/repository/

https://dzone.com/articles/bounty-spring-boot-and-postgresql-database
https://www.javaguides.net/2021/08/spring-boot-postgresql-crud-example.html  --> try this

Design principle - cqrs model - https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs

https://spring.io/projects/spring-data
https://spring.io/projects/spring-data-jdbc
https://spring.io/projects/spring-data-jpa
https://github.com/spring-projects/spring-data-book
