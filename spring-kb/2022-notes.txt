=======================================
SPRINGBOOT - 2022 WORK
=======================================

Postgres examples:
https://www.javaguides.net/2021/08/spring-boot-postgresql-crud-example.html
https://www.codejava.net/frameworks/spring-boot/connect-to-postgresql-database-examples

Mongodb examples:
https://mkyong.com/spring-boot/spring-boot-spring-data-mongodb-example/
https://www.geeksforgeeks.org/spring-boot-crud-operations-using-mongodb/

About enums:
https://www.devglan.com/spring-boot/enums-as-request-parameters-in-spring-boot-rest

=======================================
REFERENCES
=======================================
Eclipse-Springboot project:  https://medium.com/danielpadua/java-spring-boot-eclipse-744454468670

=======================================
ECLIPSE INSTALL
=======================================
Version 2022-09
Installed for "java and web developers"
It installed JVM 17
C:\Users\MYUSERID\eclipse\jee-2022-09

=======================================
ECLIPSE - SPRING TOOLS INSTALL
=======================================
Help --> Eclipse Marketplace
Search for "spring"
Install the latest version of Spring Tools (on the writing date of this guide it is the 4.16.0) and restart eclipse.
- in the list in that, did not choose cloud foundry and concourse 

==========================================
ECLIPSE - CREATE A SPRING STARTER PROJECT
==========================================
With everything correctly configured, itâ€™s time to create our project. 
Go to menu: File > New > Projectâ€¦ and select the option Spring starter Project 

--> This created a Maven project - I need a Gradle project

=======================================
ECLIPSE - CREATE A GRADLE PROJECT
=======================================
File --> New --> Project --> Gradle Project

This created a project with src folder under a lib folder
We need src to be in the base folder itself

In Gradle menu: Window --> Preferences --> Gradle --> it was 8.0-milestone-2
Changed it to 6.9.2 and tried to create a new project

To fix it: https://qaautomation.expert/2021/05/02/how-to-create-java-gradle-project-in-eclipse/
--> use gradle 6.6 --> that did not even create a project - as it could not download gradle 6.6 zip

=========================================
SPRINGBOOT PROJECT INITIALIZER METHOD
=========================================
https://spring.io/guides/gs/rest-service/
https://start.spring.io/
https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-creating-a-spring-boot-web-application-project/

------------------------------------
APPLICATION.RUN KIND OF PROJECT
------------------------------------
Which runs as a command-line script/executable - NOT as a web/rest server
In build.gradle you will have this: (not spring-boot-starter-web which will make it a web application)
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

Go to https://start.spring.io/
Project - Gradle project
Language - Java
Springboot - 2.7.4
Project metadata - used defaults - group: com.example, artifact: demo, Name: demo, Description: Demo project for Spring Boot, Package Name: com.example.demo
Dependencies - none selected

It generates a zip file
Unzip it - creates stuff in directory 'demo'

In Eclipse: File --> Import --> Gradle - Existing Gradle Project
--> then choose the demo folder

To run it in Eclipse:
If you have installed spring plugin, then you will have a "Boot Dashboard" button (green hexagon) in the ribbon.
Click "Boot Dashboard"
It will show a list of projects in the bottom pane
In that choose: local --> demo
And, in the bottom pane click "start" button (green+red button)

The main code is this: src/main/java/com.example.demo/DemoApplication.java
- Place a print statement:
@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		
		System.out.println("In class DemoApplication");
		SpringApplication.run(DemoApplication.class, args);
	}
  
}

- Run it again
You will see the message printed

Picked up JAVA_TOOL_OPTIONS: -agentpath:"C:\Windows\system32\Aternity\Java\JavaHookLoader.dll"="C:\ProgramData\Aternity\hooks"

In class DemoApplication --> THIS IS THE PRINTED MESSAGE

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v2.7.4)[0;39m

[2m2022-10-11 18:10:36.323[0;39m [32m INFO[0;39m [35m19600[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.example.demo.DemoApplication        [0;39m [2m:[0;39m Starting DemoApplication using Java 17.0.4.1 on MMD5CG125CWSV with PID 19600 (C:\Users\GSM078\CODE\java\Eclipse-j2ee-2022-09\demo\bin\main started by GSM078 in C:\Users\GSM078\CODE\java\Eclipse-j2ee-2022-09\demo)
[2m2022-10-11 18:10:36.325[0;39m [32m INFO[0;39m [35m19600[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.example.demo.DemoApplication        [0;39m [2m:[0;39m No active profile set, falling back to 1 default profile: "default"
[2m2022-10-11 18:10:36.716[0;39m [32m INFO[0;39m [35m19600[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.example.demo.DemoApplication        [0;39m [2m:[0;39m Started DemoApplication in 0.684 seconds (JVM running for 1.275)

------------------------------------
REST KIND OF PROJECT
------------------------------------
This will be a web-project - not just a command line runner.
In build.gradle we have spring-boot-starter-web which makes it a web-app - and not spring-boot-starter.
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

https://spring.io/guides/gs/rest-service/

Go to https://start.spring.io/
Project - Gradle project
Language - Java
Springboot - 2.7.4
Project metadata - modified defaults - group: com.example, artifact: demo-web, Name: demo-web, Description: Demo project for Spring Boot, Package Name: com.example.demo-web
Dependencies - Spring Web

Run the project (you may or may not add the println statement)
Access the app in browser:
	http://localhost:8080

It will give this message as we dont have endpoints coded yet:
	Whitelabel Error Page
	This application has no explicit mapping for /error, so you are seeing this as a fallback.

	Tue Oct 11 18:17:58 IST 2022
	There was an unexpected error (type=Not Found, status=404).

------------------------------------
COMMAND LINE RUNNER PROJECT
------------------------------------
https://zetcode.com/springboot/commandlinerunner

======================================
CODING A POSTGRES CRUD API - ATTEMPT1
======================================
This attempt failed as json output from rest api was showing only date fields, not int, varchar and text fields.

https://www.javaguides.net/2021/08/spring-boot-postgresql-crud-example.html  --> try this
https://www.bezkoder.com/spring-boot-postgresql-example --> with ResponseEntity 
https://www.javadevjournal.com/spring-boot/spring-boot-with-hibernate/ --> with adding jpa, mysql in starter itself, and additionally hibernate separately as well
https://dzone.com/articles/bounty-spring-boot-and-postgresql-database
https://www.codejava.net/frameworks/spring-boot/connect-to-postgresql-database-examples
https://medium.com/analytics-vidhya/spring-boot-accessing-data-with-jpa-hibernate-and-postgresql-af68386363a4
https://www.dariawan.com/tutorials/spring/spring-boot-jpa-hibernate-postgresql-restful-crud-api-example/ --> extensive one with services etc, but, ddl=auto

About 'repository' annotation - https://zetcode.com/springboot/repository/

Hibernate-postgres - Annotation for text/char/varchar types:
- https://www.baeldung.com/jpa-annotation-postgresql-text-type
- https://stackoverflow.com/questions/28588311/correct-jpa-annotation-for-postgresqls-text-type-without-hibernate-annotations
- some shit of hibernate/postgres: https://www.jpa-buddy.com/blog/how-to-store-text-in-postgresql-tips-tricks-and-traps/

Hibernate-postgers - enum array to jpa?
- https://stackoverflow.com/questions/63743920/hibernate-mapping-between-postgres-array-of-varchar-and-a-java-kotlin-collection
- https://vladmihalcea.com/map-postgresql-enum-array-jpa-entity-property-hibernate/

Hibernate-postgres - various things
- https://thorben-janssen.com/hibernate-postgresql-5-things-need-know/
- Hibernate documentation: https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#_postgresql_specific_uuid

Design principle - cqrs model - https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs

https://spring.io/projects/spring-data
https://spring.io/projects/spring-data-jdbc
https://spring.io/projects/spring-data-jpa
https://github.com/spring-projects/spring-data-book

For later: Reactive Relational Database Connectivity Postgresql 
- https://medium.com/geekculture/spring-data-r2dbc-postgresql-e60fe4e9388b
- https://mvnrepository.com/artifact/org.postgresql/r2dbc-postgresql

----------------------------
CREATE A STARTER REPO
----------------------------
group - myco.com
artefact - pgcrud1

project - gradle
language - java
springboot - 2.7.4
packaging - jar
java version - 17

dependencies - spring web, rest repositories 

----------------------------
ADD POSTGRES DEPENDENCIES
----------------------------
Add:
- JPA - implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
- Postgres JDBC driver - implementation 'org.postgresql:postgresql:42.5.0'
	
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.5.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

----------------------------
application.properties
----------------------------
Set spring.jpa.hibernate.ddl-auto = none so that Hibernate does not automatically create tables.

spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=myuser
spring.datasource.password=postgres
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.default_schema=sp

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

------------------------------
CREATE DATABASE, USER, TABLES
------------------------------
Logon as postgres
create database mydb;
create role myuser with password 'postgres';
alter role myuser with logon;
grant all privileges on database mydb to myuser;

Logon as myuser into mydb database
create schema sp;

NOTE: If using enum for active_status, then use int instead of char(1)
create table sp.employees (
id int primary key, 
name text not null, 
active_status char(1) not null,
created_datetime date not null, 
updated_datetime date, 
created_by varchar(100) not null,
updated_by varchar(100)
);

mydb=> \d sp.employees
                            Table "sp.employees"
      Column      |          Type          | Collation | Nullable | Default
------------------+------------------------+-----------+----------+---------
 id               | integer                |           | not null |
 name             | text                   |           | not null |
 active_status    | character(1)           |           | not null |
 created_datetime | date                   |           | not null |
 updated_datetime | date                   |           |          |
 created_by       | character varying(100) |           | not null |
 updated_by       | character varying(100) |           |          |
Indexes:
    "employees_pkey" PRIMARY KEY, btree (id)

mydb=> insert into sp.employees values (1, 'myself', 'Y', now(), null, 'ABCD1234', null);
INSERT 0 1
mydb=> select * from sp.employees;
 id |  name   | active_status | created_datetime | updated_datetime | created_by | updated_by
----+---------+---------------+------------------+------------------+------------+------------
  1 | myself  | Y             | 2022-10-14       |                  | ABCD1234   |
(1 row)


=======================================
CODING A POSTGRES CRUD API - ATTEMPT2
=======================================
https://www.javadevjournal.com/spring-boot/spring-boot-with-hibernate/

In https://start.spring.io/
- Add these dependencies
Spring Web
Spring Data JPA
PostgreSQL Driver
