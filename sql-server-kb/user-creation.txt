=====================================
CREATE USERS IN SQL SERVER
=====================================
References:
https://learn.microsoft.com/en-us/sql/relational-databases/security/authentication-access/create-a-login?view=sql-server-ver16
https://learn.microsoft.com/en-us/sql/t-sql/statements/create-user-transact-sql?view=sql-server-ver16
https://learn.microsoft.com/en-us/sql/relational-databases/security/authentication-access/create-a-database-user?view=sql-server-ver16

Dynamic Management Views Privileges: https://www.mssqltips.com/sqlservertip/1975/understanding-dynamic-management-views-and-functions-in-sql-server-2008
Metadata Privileges (like sys.tables): https://learn.microsoft.com/en-us/sql/relational-databases/security/metadata-visibility-configuration?view=sql-server-ver16

=============================
MONITORING USER
=============================
Like with pg_monitor privilege in Postgres.

-----------------------------
SHORT STORY
-----------------------------

~~~~~~~~~~~~~~~~~~~~~
SUMMARY
~~~~~~~~~~~~~~~~~~~~~
GRANT VIEW SERVER STATE to monitoruserlogin; - TO LOGIN
ALTER SERVER ROLE [##MS_ServerStateReader##] ADD MEMBER [monitoruserlogin]; - (is it required?) TO LOGIN, IN AZURE DB, SIMILAR TO GRANT VIEW SERVER STATE

GRANT VIEW DEFINITION to monitoruser; - TO USER, AT "SPECIFIC DATABASE" LEVEL
GRANT VIEW ANY DEFINITION to monitoruser; - TO USER, AT "ALL DATABASE" LEVEL
GRANT VIEW DATABASE STATE to monitoruser; – to USER, AT "SPECIFIC DATABASE" LEVEL

~~~~~~~~~~~~~~~~~~~~~
ACTIVITY MONITOR USER
~~~~~~~~~~~~~~~~~~~~~
https://learn.microsoft.com/en-us/sql/relational-databases/performance-monitor/open-activity-monitor-sql-server-management-studio?view=sql-server-ver16
To view actual activity, you must have VIEW SERVER STATE permission. 
To view the Data File I/O section of Activity Monitor, you must have CREATE DATABASE, ALTER ANY DATABASE, or VIEW ANY DEFINITION permission 
in addition to VIEW SERVER STATE.

To KILL a process, a user must be a member of the sysadmin or processadmin fixed server roles.


-----------------------------
LONG STORY
-----------------------------

- Dynamic Management Views (Transact-SQL) - SQL Server | Microsoft Docs
https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/system-dynamic-management-views?view=sql-server-ver16
To query a dynamic management view or function requires SELECT permission on object and VIEW SERVER STATE or VIEW DATABASE STATE permission. 
This lets you selectively restrict access of a user or login to dynamic management views and functions. 
To do this, first create the user in master and then deny the user SELECT permission on the dynamic management views or functions that you do not want them to access.
After this, the user cannot select from these dynamic management views or functions, regardless of database context of the user.

- Monitor performance using DMVs - Azure SQL Database | Microsoft Learn
https://learn.microsoft.com/en-us/azure/azure-sql/database/monitoring-with-dmvs?view=azuresql
In Azure SQL Database, depending on the compute size and deployment option, querying a DMV may require either VIEW DATABASE STATE or VIEW SERVER STATE permission. 
The latter permission may be granted via membership in the ##MS_ServerStateReader## server role.
To grant the VIEW DATABASE STATE permission to a specific database user, run the following query as an example:
GRANT VIEW DATABASE STATE TO database_user;

- Server-level roles - SQL Server | Microsoft Learn
https://learn.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-ver16
To grant membership to the ##MS_ServerStateReader## , ##MS_ServerPerformanceStateReader##  server roles to a login for the logical server in Azure, 
connect to the master database then run the following query as an example:
ALTER SERVER ROLE [##MS_ServerStateReader##] ADD MEMBER [login];
ALTER SERVER ROLE [##MS_ServerPerformanceStateReader##] ADD MEMBER [login];

In an instance of SQL Server and in Azure SQL Managed Instance, dynamic management views return server state information. 
In Azure SQL Database, they return information regarding your current logical database only.

-----------------------------------------------
CREATE MONITOR USER IN AZURE DB
-----------------------------------------------

Actually, multiple sermon users are necessary - one in each database we need to monitor.

Logon as the admin or other superuser in SSMS (sql server management studio).

--- CREATE LOGINS AND USERS
Create the “LOGIN”
Go to ‘security’ menu – outside of any database
CREATE LOGIN monitoruserlogin WITH PASSWORD = 'abcd';

Create the user in “master” database
Go to ‘master’ database
CREATE USER monitoruser FOR LOGIN monitoruserlogin;

Create the user in other databases
Go to another database and create a user there again – this is necessary otherwise it wont allow logon to that database
CREATE USER monitoruser FOR LOGIN monitoruserlogin;

--- GRANT PRIVILEGE TO QUERY METADATA AND DYNAMIC MANAGEMENT VIEWS
Metadata (like sys.tables) and Dynamic Management Views (like sys.dm_...) are different

GRANT VIEW SERVER STATE to monitoruserlogin;  - to Login (not user)
-	To access dynamic management views
-	Do on master database only
-	Connect as superuser to give it to login
- WORKED WHEN I CONNECTED AS SUPERUSER, into master database
-	(THIS WONT WORK IN AZURE SQL server??)

GRANT VIEW DATABASE STATE to monitoruser; – to USER (not login)
-	To access dynamic management view
-	Do for each database (except master?? When did this to master db, got error: Grantor does not have GRANT permission.)
-	Connect as superuser to give it to user
-	WORKED WHEN I CONNECTED AS SUPERUSER, THEN SWITCH TO THE SPECIFIC DATABASE, AND RUN THIS COMMAND
-	(THIS WONT WORK IN AZURE SQL server??)

GRANT VIEW DEFINITION to monitoruser; – to USER (not login)
-	To access metadata (like sys.tables)
-	Do for each database (except master??)
-	Connect as superuser to give it to user
-	WORKED WHEN I CONNECTED AS SUPERUSER, THEN SWITCH TO THE SPECIFIC DATABASE, AND RUN THIS COMMAND
-	(THIS WONT WORK IN AZURE SQL server??)

ALTER SERVER ROLE [##MS_ServerStateReader##] ADD MEMBER [monitoruserlogin]; - to Login (not user)
-	This should work in Azure SQL server
-	Equivalent of GRANT VIEW SERVER STATE I think
-	To access dynamic management views
-	Do on master database only
-	Connect as superuser to give it to login
- WORKED WHEN I CONNECTED AS SUPERUSER, into master database

ALTER SERVER ROLE [##MS_ServerPerformanceStateReader##] ADD MEMBER [monitoruser];
-	Cannot add the server principal 'monitoruser', because it does not exist or you do not have permission.
